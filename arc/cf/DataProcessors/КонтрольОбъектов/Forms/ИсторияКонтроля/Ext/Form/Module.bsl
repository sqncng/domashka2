
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработатьПереданныеПараметры(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсторияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элементы.История.ДанныеСтроки(ВыбраннаяСтрока);
	Если Не ДанныеСтроки.ИсторическаяЗапись Тогда
		
		ИзменяемыеСтрокиСписка  = Новый Массив;
		ИзменяемыеСтрокиСписка.Добавить(ВыбраннаяСтрока);
		
		ИзменяемыеСтрокиСпискаСписок = Новый СписокЗначений;
		ИзменяемыеСтрокиСпискаСписок.ЗагрузитьЗначения(ИзменяемыеСтрокиСписка);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСписка);
		
		Если ВладелецСпискаКонтроля = ТекущийПользователь Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Решение",                 ДанныеСтроки.Решение);
			ПараметрыФормы.Вставить("Ответственный",           ДанныеСтроки.Ответственный);
			ПараметрыФормы.Вставить("ОжидаемаяДатаВыполнения", ДанныеСтроки.ОжидаемаяДатаВыполнения);
			ПараметрыФормы.Вставить("Результат",               ДанныеСтроки.Результат);
			ПараметрыФормы.Вставить("ДатаКонтроля",            ДанныеСтроки.ДатаКонтроля);
			ПараметрыФормы.Вставить("ИзменяемыеСтрокиСписка",  ИзменяемыеСтрокиСпискаСписок);
			
			ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРешенийИРезультатов", 
			                                                        ЭтотОбъект,
			                                                        ДополнительныеПараметры);
		
			ОткрытьФорму("Обработка.КонтрольОбъектов.Форма.РешениеИРезультатыКонтроля",
			             ПараметрыФормы, ЭтотОбъект,,,,
			             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли ДанныеСтроки.Ответственный = ТекущийПользователь Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСпискаСписок);
			ПараметрыФормы.Вставить("Результат", ДанныеСтроки.Результат);
			
			ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРезультата", 
			                                                        ЭтотОбъект,
			                                                        ДополнительныеПараметры);
			
			ОткрытьФорму("Обработка.КонтрольОбъектов.Форма.ИзменениеРезультат", 
			             ПараметрыФормы, ЭтотОбъект,,,,
			             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			
			ОткрытьФормуЗаписиКонтроля(ВыбраннаяСтрока)
			
		КонецЕсли;
		
	Иначе
		
		ОткрытьФормуЗаписиКонтроля(ВыбраннаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСостояниеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектКонтроля", ОбъектКонтроля);
	ПараметрыФормы.Вставить("СписокКонтроля", СписокКонтроля);
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "СнятьСКонтроля" Тогда
		ПараметрыФормы.Вставить("ЭтоСнятиеСКонтроля", Истина)
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоставитьНаКонтроль" Тогда
		ПараметрыФормы.Вставить("ЭтоСнятиеСКонтроля", Ложь);
	КонецЕсли;
	
	ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРешенийИРезультатов", 
	                                                       ЭтотОбъект);
	
	ОткрытьФорму("Обработка.КонтрольОбъектов.Форма.РешениеИРезультатыКонтроля",
	             ПараметрыФормы, ЭтотОбъект,,,,
	             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуЗаписиКонтроля(ВыбраннаяСтрока)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ВыбраннаяСтрока);
	
	ОткрытьФорму("РегистрСведений.ОбъектыНаКонтроле.Форма.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект,
	             ,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)

	Если Не ЗначениеЗаполнено(Параметры.СписокКонтроля) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для отображения истории контроля требуется передать параметр ""Список контроля"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ОбъектКонтроля) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для отображения истории контроля требуется передать параметр ""Объект контроля"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СписокКонтроля = Параметры.СписокКонтроля;
	ОбъектКонтроля = Параметры.ОбъектКонтроля;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(История, "СписокКонтроля", СписокКонтроля);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(История, "ОбъектКонтроля", ОбъектКонтроля);
	
	ДанныеСпискаКонтроля   = Справочники.СпискиКонтроля.ДанныеСпискаКонтроля(СписокКонтроля);
	ВладелецСпискаКонтроля = ДанныеСпискаКонтроля.ВладелецСписка;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	СформироватьПредставлениеПоЧемуИстория();
	
	СформироватьСостояниеКонтроля(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеПоЧемуИстория()

	ПредставлениеШапка = СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = 'Объект: <a href=""%1"">%2</a> по списку: <a href=""%3"">%4</a>'"),
	                                                            ПолучитьНавигационнуюСсылку(ОбъектКонтроля),
	                                                            Строка(ОбъектКонтроля),
	                                                            ПолучитьНавигационнуюСсылку(СписокКонтроля),
	                                                            Строка(СписокКонтроля));
	
	Элементы.ДекорацияПоСпискуОбъекту.Заголовок = ПредставлениеШапка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУказанияРешенийИРезультатов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОтразитьРешенияИРезультаты(Результат);
	
	Оповестить("Запись_ОбъектыНаКонтроле");
	Элементы.История.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтразитьРешенияИРезультаты(ДанныеРешения)
	
	РегистрыСведений.ОбъектыНаКонтроле.ОтразитьРешениеИРезультатПоПоследнейЗаписи(ОбъектКонтроля, СписокКонтроля, ДанныеРешения);
	СформироватьСостояниеКонтроля(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСостояниеКонтроля( Отказ)
	
	ОбъектыКонтроля = Новый Массив;
	ОбъектыКонтроля.Добавить(ОбъектКонтроля);
	
	ДанныеКонтроля = ОбъектыНаКонтроле.ДанныеОбъектовКонтроляДляПостановкиНаКонтроль(ОбъектыКонтроля, СписокКонтроля);
	Если ДанныеКонтроля.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	СтатусКонтроля = ДанныеКонтроля[0].СтатусКонтроля;
	

	ТекущееСостояние     = "";
	ИмяКоманды           = "";
	ПредставлениеКоманды = "";
	
	Если СтатусКонтроля = "СнятСКонтроля" Тогда
		
		ТекущееСостояние     = НСтр("ru = 'Снят с контроля'");
		ИмяКоманды           = "ПоставитьНаКонтроль";
		ПредставлениеКоманды = НСтр("ru = 'вернуть на контроль'");
		
	ИначеЕсли СтатусКонтроля = "НаКонтроле" Тогда
		
		ТекущееСостояние     = НСтр("ru = 'На контроле'");
		ИмяКоманды           = "СнятьСКонтроля";
		ПредставлениеКоманды = НСтр("ru = 'снять с контроля'");
		
	Иначе
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	Если ВладелецСпискаКонтроля = ТекущийПользователь Тогда
		Элементы.ДекорацияСостояние.Заголовок =  СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = '%1, <a href=""%2"">%3</a>'"),
		                                                                                ТекущееСостояние,
		                                                                                ИмяКоманды,
		                                                                                ПредставлениеКоманды);
	Иначе
		Элементы.ДекорацияСостояние.Заголовок =  СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = '%1'"),
		                                                                                ТекущееСостояние,
		                                                                                ИмяКоманды,
		                                                                                ПредставлениеКоманды);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

