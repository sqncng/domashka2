
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьДанныеФормы();
	
	ОбработатьПереданныеПараметры();
	
	ПриИзмененииСпискаКонтроляНаСервере();
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_СписокКонтроля"
		И Источник = СписокКонтроля Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И Параметр.Свойство("ДатаСледующегоКонтроля") Тогда
			
			ПлановаяДатаКонтроля = Параметр.ДатаСледующегоКонтроля;
			
		КонецЕсли;
		
		ПослеЗаписиСписокКонтроляСервер();
		
	ИначеЕсли ИмяСобытия = "Запись_ОбъектыНаКонтроле" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если СтруктураБыстрогоОтбора = Неопределено Тогда
	
		ПриПолученииСпискаКонтроляИзСохраненныхНастроек(Настройки);
		
	Иначе
		
		Если СтруктураБыстрогоОтбора.Свойство("ИдентификаторСпискаКонтроля") Тогда
			
			Настройки.Удалить("СписокКонтроля");
			
		Иначе
			
			ПриПолученииСпискаКонтроляИзСохраненныхНастроек(Настройки);
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокКонтроляПриИзменении(Элемент)
	
	ПриИзмененииСпискаКонтроляНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонтроляПриИзменении(Элемент)
	
	ПриИзмененииДатыКонтроляНаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлановаяДатаКонтроляОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьСписокКонтроля"
		И ЗначениеЗаполнено(СписокКонтроля) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТекущийЭлемент", "ДатаСледующегоКонтроля");
		ПараметрыФормы.Вставить("Ключ",           СписокКонтроля);
		
		ОткрытьФорму("Справочник.СпискиКонтроля.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыЯКонтролирую

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элементы.Список.ДанныеСтроки(ВыбраннаяСтрока);
	
	ИзменяемыеСтрокиСписка  = Новый Массив;
	ИзменяемыеСтрокиСписка.Добавить(ВыбраннаяСтрока);
	
	ИзменяемыеСтрокиСпискаСписок = Новый СписокЗначений;
	ИзменяемыеСтрокиСпискаСписок.ЗагрузитьЗначения(ИзменяемыеСтрокиСписка);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСписка);
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		
		ПоказатьЗначение( ,ВыбраннаяСтрока.Ключ);
		
	ИначеЕсли Поле.Имя = "СписокОбъектКонтроля"
		Или Поле.Имя = "СписокДатаСтатуса"
		Или Поле.Имя = "СписокСтатус"
		Или Поле.Имя = "СписокОтветственный" Тогда
		
		ПоказатьЗначение(, ДанныеСтроки.ОбъектКонтроля);
		
	ИначеЕсли Поле.Имя = "СписокТехническийПроект" Тогда
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ТехническийПроект) Тогда
			ПоказатьЗначение(, ДанныеСтроки.ТехническийПроект);
		Иначе
			ПоказатьЗначение(, ДанныеСтроки.ОбъектКонтроля);
		КонецЕсли;
		
	ИначеЕсли ТекущийПользователь = ВладелецСписка Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Решение",                 ДанныеСтроки.Решение);
		ПараметрыФормы.Вставить("Ответственный",           ДанныеСтроки.Ответственный);
		ПараметрыФормы.Вставить("ОжидаемаяДатаВыполнения", ДанныеСтроки.ОжидаемаяДатаВыполнения);
		ПараметрыФормы.Вставить("Результат",               ДанныеСтроки.Результат);
		ПараметрыФормы.Вставить("ДатаКонтроля",            ДанныеСтроки.ДатаКонтроля);
		ПараметрыФормы.Вставить("ИзменяемыеСтрокиСписка",  ИзменяемыеСтрокиСпискаСписок);
		
		ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРешенийИРезультатов", 
		                                                        ЭтотОбъект,
		                                                        ДополнительныеПараметры);
	
		ОткрытьФорму("Обработка.КонтрольОбъектов.Форма.РешениеИРезультатыКонтроля",
		             ПараметрыФормы, ЭтотОбъект,,,,
		             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ТекущийПользователь = ДанныеСтроки.Ответственный Тогда
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСпискаСписок);
		
		ДанныеИзменяемыхСтрок = ОбъектыНаКонтролеКлиент.ДанныеИзменяемыхСтрок(Элементы.Список, ИзменяемыеСтрокиСписка);
		
		ИмяОткрываемойФормы = "ИзменениеРезультат";
		Если ДанныеИзменяемыхСтрок <> Неопределено Тогда
			ПараметрыФормы.Вставить("Результат", ДанныеСтроки.Результат);
		КонецЕсли;
		
		ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРезультата", 
		                                                        ЭтотОбъект,
		                                                        ДополнительныеПараметры);
		
		ОткрытьФорму("Обработка.КонтрольОбъектов.Форма.ИзменениеРезультат", 
		             ПараметрыФормы, ЭтотОбъект,,,,
		             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		ПоказатьЗначение(, ВыбраннаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	МассивОшибок              = Новый Массив;
	МассивЗадач               = Новый Массив;
	МассивТехническихПроектов = Новый Массив;
	МассивВеток               = Новый Массив;
	
	Для Каждого СтрокаСписка Из Строки Цикл
		
		Если ТипЗнч(СтрокаСписка.Ключ.ОбъектКонтроля) = Тип("СправочникСсылка.Ошибки") Тогда
			
			МассивОшибок.Добавить(СтрокаСписка.Ключ.ОбъектКонтроля);
			
		ИначеЕсли ТипЗнч(СтрокаСписка.Ключ.ОбъектКонтроля) = Тип("СправочникСсылка.ЗадачиПроцесса") Тогда
			
			МассивЗадач.Добавить(СтрокаСписка.Ключ.ОбъектКонтроля);
			
		ИначеЕсли ТипЗнч(СтрокаСписка.Ключ.ОбъектКонтроля) = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
			
			МассивТехническихПроектов.Добавить(СтрокаСписка.Ключ.ОбъектКонтроля);
			
		ИначеЕсли ТипЗнч(СтрокаСписка.Ключ.ОбъектКонтроля) = Тип("СправочникСсылка.Ветки") Тогда
			
			МассивВеток.Добавить(СтрокаСписка.Ключ.ОбъектКонтроля);
			
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатЗапроса = Планирование.РезультатЗапросаДляДополненияДанныхРабот(МассивОшибок, 
	                                                                         МассивЗадач,
	                                                                         МассивТехническихПроектов, 
	                                                                         МассивВеток);
	
	ОбъектыСтатусы = Новый Соответствие;
	ВыборкаОбъектыСтатусы = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаОбъектыСтатусы.Следующий() Цикл
		
		ДанныеСтатуса = Новый Структура;
		ДанныеСтатуса.Вставить("Статус",               ВыборкаОбъектыСтатусы.Статус);
		ДанныеСтатуса.Вставить("ДатаИзмененияСтатуса", НачалоДня(ВыборкаОбъектыСтатусы.ДатаИзмененияСтатуса));
		
		ОбъектыСтатусы.Вставить(ВыборкаОбъектыСтатусы.Ссылка, ДанныеСтатуса);
		
	КонецЦикла;
	
	Для Каждого СтрокаСписка Из Строки Цикл
		
		ДанныеОбъектаПоСтатусу = ОбъектыСтатусы.Получить(СтрокаСписка.Значение.Данные.ОбъектКонтроля); 
		Если ДанныеОбъектаПоСтатусу = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписка.Значение.Данные.Статус      = ДанныеОбъектаПоСтатусу.Статус;
		СтрокаСписка.Значение.Данные.ДатаСтатуса = ДанныеОбъектаПоСтатусу.ДатаИзмененияСтатуса;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура УказатьРезультат(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ИзменяемыеСтрокиСписка = ОбъектыНаКонтролеКлиент.ИзменяемыеСтрокиСписка(Элементы.Список, Отказ);
	
	Если Не Отказ Тогда 
		
		ВыполнитьКомандуСписка("Результат", ИзменяемыеСтрокиСписка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтразитьРезультатыИРешения(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ИзменяемыеСтрокиСписка = ОбъектыНаКонтролеКлиент.ИзменяемыеСтрокиСписка(Элементы.Список, Отказ);
	
	Если Не Отказ Тогда
		
		ВыполнитьКомандуСписка("ОтразитьРезультатыИРешения", ИзменяемыеСтрокиСписка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСКонтроля(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ИзменяемыеСтрокиСписка = ОбъектыНаКонтролеКлиент.ИзменяемыеСтрокиСписка(Элементы.Список, Отказ);
	
	Если Не Отказ Тогда 
		
		ВыполнитьКомандуСписка("СнятьСКонтроля", ИзменяемыеСтрокиСписка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКонтроля(Команда)
	
	ОчиститьСообщения();
	
	ОбъектыНаКонтролеКлиент.ОткрытьИсториюКонтроляИзСпискаКонтроля(Элементы.Список); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДругойСписок(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ИзменяемыеСтрокиСписка = ОбъектыНаКонтролеКлиент.ИзменяемыеСтрокиСписка(Элементы.Список, Отказ);
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СписокВыбора = ДругиеСпискиКонтроляПользователя(СписокКонтроля, ВладелецСписка);
	
	Если СписокВыбора.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'У вас нет других списков контроля, перенос невозможен.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Возврат;
		
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСписка);
	ОповещениеПослеВыбораСпискаКудаПереносим = Новый ОписаниеОповещения("ПослеВыбораСпискаКудаПереносим",
	                                                                    ЭтотОбъект,
	                                                                    ДополнительныеПараметры);
	
	ПоказатьВыборИзСписка(ОповещениеПослеВыбораСпискаКудаПереносим,
	                      СписокВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ДатаКонтроля        = НачалоДня(ТекущаяДата());
	ЗаполнитьСписокВыбораСписковКонтроля();
	
	Если Не ЗначениеЗаполнено(СписокКонтроля)
		И Не ПоискСпискаПоУмолчаниюВыполнен Тогда
		
		ОпределитьСписокКонтроляПоУмолчанию();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьСписокКонтроляПоУмолчанию()
	
	ДействующиеСпискиКонтроля = Справочники.СпискиКонтроля.ДействующиеСпискиКонтроляПользователя(ТекущийПользователь);
	Если ДействующиеСпискиКонтроля.Количество() = 1 Тогда
		СписокКонтроля = ДействующиеСпискиКонтроля[0].СписокКонтроля;
		ПриИзмененииСпискаКонтроляНаСервере();
	КонецЕсли;
	
	ПоискСпискаПоУмолчаниюВыполнен = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДатыКонтроляНаСервер()
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСпискаКонтроляНаСервере()
	
	Если Не ЗначениеЗаполнено(СписокКонтроля) Тогда
		
		ВладелецСписка       = Неопределено;
		ПлановаяДатаКонтроля = Дата(1, 1, 1);
		
	Иначе
		
		ДанныеСпискаКонтроля = Справочники.СпискиКонтроля.ДанныеСпискаКонтроля(СписокКонтроля);
		ВладелецСписка       = ДанныеСпискаКонтроля.ВладелецСписка;
		ПлановаяДатаКонтроля = ДанныеСпискаКонтроля.ДатаСледующегоКонтроля;
		ВариантВеденияСписка = ДанныеСпискаКонтроля.ВариантВеденияСписка;

	КонецЕсли;
	
	СформироватьДекорациюПлановаяДатаКонтроля();
	УправлениеДоступностью(ЭтотОбъект);
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЯКонтролирую, "СписокКонтроля", СписокКонтроля);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЯКонтролирую, "ДатаКонтроля",   ДатаКонтроля);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)

	ЭлементыФормы = Форма.Элементы;
	
	ЭтоВладелецСписка = (Форма.ВладелецСписка = Форма.ТекущийПользователь);
	
	ЭлементыФормы.ОтразитьРезультатыИРешения.Доступность                      = ЭтоВладелецСписка;
	ЭлементыФормы.СнятьСКонтроля.Доступность                                  = ЭтоВладелецСписка;
	ЭлементыФормы.СписокКонтекстноеМенюПеренестиВДругойСписок.Доступность     = ЭтоВладелецСписка;
	ЭлементыФормы.СписокКонтекстноеМенюОтразитьРезультатыКонтроля.Доступность = ЭтоВладелецСписка;
	ЭлементыФормы.СписокКонтекстноеМенюСнятьСКонтроля.Доступность             = ЭтоВладелецСписка;
	
	ДатаКонтроляНазначаетсяНаСписок = (ОбъектыНаКонтролеКлиентСервер.ВариантВеденияСпискаКонтроля(Форма.ВариантВеденияСписка) 
	       = ПредопределенноеЗначение("Перечисление.ВариантыВеденияСпискаКонтроля.ДатаКонтроляНазначаетсяНаСписок"));
	
	ЭлементыФормы.ДекорацияПлановаяДатаКонтроля.Видимость = ДатаКонтроляНазначаетсяНаСписок;
	ЭлементыФормы.СписокСледующаяДатаКонтроля.Видимость   = Не ДатаКонтроляНазначаетсяНаСписок;
	
	Если ДатаКонтроляНазначаетсяНаСписок Тогда
		ЭлементыФормы.ДатаКонтроля.Заголовок = НСтр("ru = 'Не отработанные на'");
	Иначе
		ЭлементыФормы.ДатаКонтроля.Заголовок = НСтр("ru = 'Запланированные к контролю на'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуСписка(ИмяКоманды, ИзменяемыеСтрокиСписка)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСписка);
	
	ИзменяемыеСтрокиСпискаСписок = Новый СписокЗначений;
	ИзменяемыеСтрокиСпискаСписок.ЗагрузитьЗначения(ИзменяемыеСтрокиСписка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИзменяемыеСтрокиСписка", ИзменяемыеСтрокиСпискаСписок);
	
	ДанныеИзменяемыхСтрок = ОбъектыНаКонтролеКлиент.ДанныеИзменяемыхСтрок(Элементы.Список, ИзменяемыеСтрокиСписка);
		
	Если ИмяКоманды = "Результат" Тогда
		
		ИмяОткрываемойФормы = "ИзменениеРезультат";
		Если ДанныеИзменяемыхСтрок <> Неопределено Тогда
			ПараметрыФормы.Вставить("Результат", ДанныеИзменяемыхСтрок.Результат);
		КонецЕсли;
		
		ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРезультата", 
		                                                        ЭтотОбъект,
		                                                        ДополнительныеПараметры);
		
	ИначеЕсли ИмяКоманды = "ОтразитьРезультатыИРешения"
		Или ИмяКоманды = "СнятьСКонтроля" Тогда
		
		ИмяОткрываемойФормы = "РешениеИРезультатыКонтроля";
		
		Если ДанныеИзменяемыхСтрок <> Неопределено Тогда
			ПараметрыФормы.Вставить("Решение",                 ДанныеИзменяемыхСтрок.Решение);
			ПараметрыФормы.Вставить("Ответственный",           ДанныеИзменяемыхСтрок.Ответственный);
			ПараметрыФормы.Вставить("ОжидаемаяДатаВыполнения", ДанныеИзменяемыхСтрок.ОжидаемаяДатаВыполнения);
			ПараметрыФормы.Вставить("Результат",               ДанныеИзменяемыхСтрок.Результат);
			ПараметрыФормы.Вставить("ДатаКонтроля",            ДанныеИзменяемыхСтрок.ДатаКонтроля);
		КонецЕсли;
		
		ПараметрыФормы.Вставить("ЭтоСнятиеСКонтроля",      ?(ИмяКоманды = "ОтразитьРезультатыИРешения", Ложь, Истина));
		
		ОповещениеОИзмененииЗаписей = Новый ОписаниеОповещения("ПослеУказанияРешенийИРезультатов", 
		                                                        ЭтотОбъект,
		                                                        ДополнительныеПараметры);
		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.КонтрольОбъектов.Форма." + ИмяОткрываемойФормы, 
	             ПараметрыФормы, ЭтотОбъект,,,,
	             ОповещениеОИзмененииЗаписей, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУказанияРешенийИРезультатов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОтразитьРешенияИРезультаты(Результат, ДополнительныеПараметры.ИзменяемыеСтрокиСписка);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУказанияРезультата(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОтразитьИзменениеРезультатаНаСервере(Результат, ДополнительныеПараметры.ИзменяемыеСтрокиСписка);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтразитьИзменениеРезультатаНаСервере(РезультатКонтроля, КлючиЗаписей)
	
	Для Каждого КлючЗаписи Из КлючиЗаписей Цикл
		
		РегистрыСведений.ОбъектыНаКонтроле.ОтразитьИзменениеРезультата(КлючЗаписи, РезультатКонтроля);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтразитьРешенияИРезультаты(ДанныеРешения, КлючиЗаписей)
	
	Для Каждого КлючЗаписи Из КлючиЗаписей Цикл
		
		РегистрыСведений.ОбъектыНаКонтроле.ОтразитьРешениеИРезультат(КлючЗаписи, ДанныеРешения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиСписокКонтроляСервер()
	
	СформироватьДекорациюПлановаяДатаКонтроля();
	ЗаполнитьСписокВыбораСписковКонтроля();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДекорациюПлановаяДатаКонтроля()

	Если ЗначениеЗаполнено(ПлановаяДатаКонтроля) Тогда
		
		ТекстДекорации = СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = 'плановая дата контроля - %1 <a href=""ОткрытьСписокКонтроля"">изменить</a>'"),
		                                                             Формат(ПлановаяДатаКонтроля,"ДЛФ=D"));
		
	Иначе
		
		ТекстДекорации = "";
		
	КонецЕсли;
	
	Элементы.ДекорацияПлановаяДатаКонтроля.Заголовок = ТекстДекорации;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораСписковКонтроля()
	
	Элементы.СписокКонтроля.СписокВыбора.Очистить();
	ДейстующиеСпискиКонтроля = Справочники.СпискиКонтроля.ДействующиеСпискиКонтроляПользователя(ТекущийПользователь);
	
	Для Каждого ДействующийСписокКонтроля Из ДейстующиеСпискиКонтроля Цикл
		
		Элементы.СписокКонтроля.СписокВыбора.Добавить(ДействующийСписокКонтроля.СписокКонтроля, ДействующийСписокКонтроля.НаименованиеСписка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСпискаКудаПереносим(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ВыбранныйЭлемент) <> Тип("ЭлементСпискаЗначений")
		Или ТипЗнч(ВыбранныйЭлемент.Значение) <> Тип("СправочникСсылка.СпискиКонтроля") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Результат = РезультатПереносаОбъектовВДругойСписок(ВыбранныйЭлемент.Значение, СписокКонтроля, ДополнительныеПараметры.ИзменяемыеСтрокиСписка);
	
	Если Результат.ВсегоОбъектов = 0 Тогда
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Ни один объект не перенесен в другой список контроля'"));
	ИначеЕсли Результат.ВсегоОбъектов = 1 Тогда
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Объект перенесен в другой список контроля'"));
	Иначе
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Перенесено в другой список контроля объектов - %1 из %2'"), 
		                            Результат.Перенесено, 
		                            Результат.ВсегоОбъектов);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Перенос объектов в другой список контроля'") ,, ТекстОповещения, БиблиотекаКартинок.Информация32);
	
	Если Результат.ВсегоОбъектов > 0 Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДругиеСпискиКонтроляПользователя(ИсключаяСписок, ВладелецСписка)

	Возврат Справочники.СпискиКонтроля.ДругиеСпискиКонтроляПользователя(ИсключаяСписок, ВладелецСписка);

КонецФункции

&НаСервереБезКонтекста
Функция РезультатПереносаОбъектовВДругойСписок(КудаПереносим, ОткудаПереносим, ИзменяемыеСтрокиСписка)

	Возврат РегистрыСведений.ОбъектыНаКонтроле.РезультатПереносаОбъектовВДругойСписок(КудаПереносим, 
	                                                                                  ОткудаПереносим,
	                                                                                  ИзменяемыеСтрокиСписка);

КонецФункции

&НаСервере
Процедура ПриПолученииСпискаКонтроляИзСохраненныхНастроек(Настройки)

	СписокКонтроляНастройки = Настройки.Получить("СписокКонтроля");
		
	Если СписокКонтроляНастройки <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(СписокКонтроляНастройки) Тогда
			
			ДанныеСпискаКонтроля = Справочники.СпискиКонтроля.ДанныеСпискаКонтроля(СписокКонтроляНастройки);
			
			Если ДанныеСпискаКонтроля.ВладелецСписка <> Пользователи.ТекущийПользователь()
				Или Не ДанныеСпискаКонтроля.Действует Тогда
				
				ПриИзмененииСпискаКонтроляНаСервере();
				
			Иначе
				
				
				СписокКонтроля = СписокКонтроляНастройки;
				ПриИзмененииСпискаКонтроляНаСервере();
				
			КонецЕсли;
			
		Иначе
			
			ОпределитьСписокКонтроляПоУмолчанию();
			
		КонецЕсли;
		
		Настройки.Удалить("СписокКонтроля");
		
	Иначе
		
		Настройки.Удалить("СписокКонтроля");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено 
		И СтруктураБыстрогоОтбора.Свойство("ИдентификаторСпискаКонтроля") Тогда
		
		СписокКонтроля = Справочники.СпискиКонтроля.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураБыстрогоОтбора.ИдентификаторСпискаКонтроля));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
