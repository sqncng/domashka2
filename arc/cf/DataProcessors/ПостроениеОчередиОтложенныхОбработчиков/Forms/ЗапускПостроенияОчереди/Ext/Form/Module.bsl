
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Проект = Параметры.Проект;
	Версия = Параметры.Версия;
	
	Элементы.ФормаПостроитьОчередь.Видимость         = Параметры.Режим = "ПостроениеОчереди";
	Элементы.ФормаПостроитьОчередь.КнопкаПоУмолчанию = Параметры.Режим = "ПостроениеОчереди";
	
	Элементы.ФормаПроверитьОчередь.Видимость         = Параметры.Режим = "ПроверкаОчереди";
	Элементы.ФормаПроверитьОчередь.КнопкаПоУмолчанию = Параметры.Режим = "ПроверкаОчереди";
	
	Элементы.ФормаСгенерироватьКод.Видимость         = Параметры.Режим = "ГенерацияКода";
	Элементы.ФормаСгенерироватьКод.КнопкаПоУмолчанию = Параметры.Режим = "ГенерацияКода";
	
	Элементы.ФормаМожноСтроитьОчередь.Видимость         = Параметры.Режим = "МожноСтроитьОчередь";
	Элементы.ФормаМожноСтроитьОчередь.КнопкаПоУмолчанию = Параметры.Режим = "МожноСтроитьОчередь";
	
	Элементы.ФормаЗаполнитьПроцедуруПроверки.Видимость        = Параметры.Режим = "ЗаполнитьПроцедуруПроверки";
	Элементы.ФормаЗаполнитьПроцедуруПроверки.КнопкаПоУмолчанию = Параметры.Режим = "ЗаполнитьПроцедуруПроверки";
	
	Элементы.ФормаПостроитьОчередьИСгенерироватьКод.Видимость        = Параметры.Режим = "ПостроениеОчередиГенерацияКода";
	Элементы.ФормаПостроитьОчередьИСгенерироватьКод.КнопкаПоУмолчанию = Параметры.Режим = "ПостроениеОчередиГенерацияКода";
	
	Если Параметры.Режим = "ПостроениеОчереди" Тогда
		Заголовок = НСтр("ru = 'Построение очереди выполнения отложенных обработчиков'");
	ИначеЕсли Параметры.Режим = "ПроверкаОчереди" Тогда
		Заголовок = НСтр("ru = 'Проверка очереди выполнения отложенных обработчиков'");
	ИначеЕсли Параметры.Режим = "ГенерацияКода" Тогда
		Заголовок = НСтр("ru = 'Генерация кода процедур обработчиков'");
	ИначеЕсли Параметры.Режим = "МожноСтроитьОчередь" Тогда
		Заголовок = НСтр("ru = 'Проверка возможности построения очереди""'");
	ИначеЕсли Параметры.Режим = "ЗаполнитьПроцедуруПроверки" Тогда
		Заголовок = НСтр("ru = 'Заполнение процедуры проверки""'");
	ИначеЕсли Параметры.Режим = "ПостроениеОчередиГенерацияКода" Тогда
		Заголовок = НСтр("ru = 'Построение очереди выполнения отложенных обработчиков и генерация кода процедур обработчиков'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПостроитьОчередь(Команда)
	
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПостроитьОчередьНаСервере() Тогда
		ТекстСообщения = НСтр("ru = 'Есть ошибки в построении очереди.'");
		ПоказатьПредупреждение(,ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Очередь построена без ошибок.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения,ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОчередь(Команда)
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЕстьОшибкиВПостроенииОчереди() Тогда
		ТекстСообщения = НСтр("ru = 'Есть ошибки в построении очереди.'");
		ПоказатьПредупреждение(,ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Очередь построена без ошибок.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения,ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКод(Команда)
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	КодОбработчиков = КодОбъявленияОбработчиков();
	
	Для Каждого КодБиблиотеки из КодОбработчиков Цикл
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(КодБиблиотеки.Значение);
		ТекстовыйДокумент.Показать(КодБиблиотеки.Ключ);
	КонецЦикла;

	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура МожноСтроитьОчередь(Команда)
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	Если МожноСтроитьОчередьСервер() Тогда
		ТекстСообщения = НСтр("ru = 'Очередь можно строить.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения,ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Есть ошибки мешающие построению очереди.'");
		ПоказатьПредупреждение(,ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроцедуруПроверки(Команда)
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоОбъектов = ЗаполнитьПроцедуруПроверкиНаСервере();
	
	ТекстСообщения = НСтр("ru = 'Количество записанных обработчиков: %КоличествоОбъектов%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОбъектов%", КоличествоОбъектов);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект);
	ПоказатьПредупреждение(ОписаниеОповещения,ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПостроитьОчередьИСгенерироватьКод(Команда)
	
	Если Не ПроектВерсияЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПостроитьОчередьНаСервере() Тогда
		ТекстСообщения = НСтр("ru = 'Есть ошибки в построении очереди.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	КодОбработчиков = КодОбъявленияОбработчиков();
	
	Для Каждого КодБиблиотеки из КодОбработчиков Цикл
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(КодБиблиотеки.Значение);
		ТекстовыйДокумент.Показать(КодБиблиотеки.Ключ);
	КонецЦикла;

	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроектВерсияЗаполнены()
	ОчиститьСообщения();
	
	Результат = Истина; 
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ТекстСообщения = НСтр("ru = 'Выберите проект'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Проект");
		Результат = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Версия) Тогда
		ТекстСообщения = НСтр("ru = 'Выберите версию проекта'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Версия");
		Результат = Ложь;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПостроитьОчередьНаСервере()
	Возврат Обработки.ПостроениеОчередиОтложенныхОбработчиков.ПостроитьОчередьОбработчиковОбновления(Проект, Версия);
КонецФункции

&НаСервере
Функция ЕстьОшибкиВПостроенииОчереди()
	Возврат Обработки.ПостроениеОчередиОтложенныхОбработчиков.ЕстьОшибкиВПостроенииОчереди(Проект, Версия);
КонецФункции

&НаСервере
Функция МожноСтроитьОчередьСервер()
	Возврат Обработки.ПостроениеОчередиОтложенныхОбработчиков.МожноСтроитьОчередь(Проект, Версия); 
КонецФункции

&НаКлиенте
Процедура ЗакрытьФорму(Результат) Экспорт
	Закрыть();
КонецПроцедуры

&НаСервере
Функция КодОбъявленияОбработчиков()
	
	Возврат Обработки.ПостроениеОчередиОтложенныхОбработчиков.КодОбработчиковПриДобавленииОбработчиковОбновления(Проект, Версия);
	
КонецФункции

&НаСервере
Функция ЗаполнитьПроцедуруПроверкиНаСервере()
	Возврат Обработки.ПостроениеОчередиОтложенныхОбработчиков.ЗаполнитьПроцедуруПроверки(Проект, Версия);
КонецФункции


#КонецОбласти