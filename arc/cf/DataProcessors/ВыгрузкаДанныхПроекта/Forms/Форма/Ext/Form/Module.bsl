
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВерсияФормата = ВыгрузкаЗагрузкаДанныхПоПроектам.ИспользуемаяВерсияФорматаВыгрузки();
	УстановитьДоступностьЭлементов();
	УстановитьДоступностьЭлементовПоХарактеристикамПроекта(Элементы, ВыгружатьХарактеристикиПроекта);
	УстановитьДоступностьДереваПодсистем();
	
	Если НЕ Элементы.ВыгружатьДополнительныеРеквизитыИСведения.Доступность
		И ВыгружатьДополнительныеРеквизитыИСведения Тогда
		ВыгружатьДополнительныеРеквизитыИСведения = Ложь;
	КонецЕсли;
	
	СформироватьДеревоМетаданных();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьДоступностьЭлементов();
	УстановитьДоступностьЭлементовПоХарактеристикамПроекта(Элементы, ВыгружатьХарактеристикиПроекта);
	УстановитьДоступностьДереваПодсистем();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = НСтр("ru='Укажите файл для выгрузки данных'");
	
	ДиалогВыбораФайла.Фильтр = "zip|*.zip";
	ДиалогВыбораФайла.Расширение = "zip";
	ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайлаВыгрузки;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайлаВыгрузки = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьХарактеристикиПроектаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовПоХарактеристикамПроекта(Элементы, ВыгружатьХарактеристикиПроекта);
	
	Если НЕ ВыгружатьХарактеристикиПроекта Тогда
		ВыгружатьОшибки = Ложь;
		ВыгружатьТехническиеПроекты = Ложь;
		ВыгружатьФункцииМеханизмов = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьСценарииРаботыПользователейПриИзменении(Элемент)
	
	УстановитьДоступностьВыгрузкиШаговСценариев(Элементы, ВыгружатьСценарииРаботыПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	ПриИзмененииПроекта();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантФильтраВыгрузкиПриИзменении(Элемент)
	
	УстановитьДоступностьДереваПодсистем();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыДеревоМетаданных

&НаКлиенте
Процедура ДеревоМетаданныхПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент = Элементы.ДеревоМетаданныхОтметка Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущиеДанные.СтароеЗначениеОтметки = ТекущиеДанные.Отметка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхОтметкаПриИзменении(Элемент)
	
	ИдентификаторСтроки = Элементы.ДеревоМетаданных.ТекущаяСтрока;
	
	СтрокаДерева = ДеревоМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если СтрокаДерева.СтароеЗначениеОтметки>0 Тогда
		СтрокаДерева.Отметка = 0;
	Иначе
		СтрокаДерева.Отметка = 1;
	КонецЕсли;
	
	УстановитьФлагиДочернихСтрок(СтрокаДерева, СтрокаДерева.Отметка);
	УстановитьФлагиРодительскихУзлов(СтрокаДерева);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыДеревоПодсистем

&НаКлиенте
Процедура ДеревоПодсистемОтметкаПриИзменении(Элемент)
	
	ИдентификаторСтроки = Элементы.ДеревоПодсистем.ТекущаяСтрока;
	
	СтрокаДерева = ДеревоПодсистем.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если СтрокаДерева.Отметка Тогда
		// Если отмечается подсистема, включающая дочерние, для дочерних строк автоматически ставится отметка
		УстановитьФлагиДочернихСтрок(СтрокаДерева, СтрокаДерева.Отметка);
	Иначе
		// Если снимается отметка дочерней подсистемы, для вышестоящих родителей автоматически снимается отметка
		УстановитьОтметкиРодительскихСтрок(СтрокаДерева, СтрокаДерева.Отметка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
		
	ТекстЗаголовка = НСтр("ru='Выгрузка данных'");
	ТекстСостояния = НСтр("ru='Выполняется выгрузка данных'");
	Состояние(ТекстЗаголовка, , ТекстСостояния);
	
	АдресДанныхВыгрузки = СформироватьДанныеВыгрузки();
	
	Попытка
		ПолучитьИзВременногоХранилища(АдресДанныхВыгрузки).Записать(ИмяФайлаВыгрузки);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ПоказатьПредупреждение(Неопределено, НСтр("ru='Выгрузка завершена'"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеОтметки(Команда)
	
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();
	
	Для Каждого Элемент из ЭлементыДерева Цикл
		Элемент.Отметка = Истина;
		УстановитьФлагиДочернихСтрок(Элемент, Истина);
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();
	
	Для Каждого Элемент из ЭлементыДерева Цикл
		Элемент.Отметка = Ложь;
		УстановитьФлагиДочернихСтрок(Элемент, Ложь);
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеОтметкиДереваПодсистем(Команда)
	
	ЭлементыДерева = ДеревоПодсистем.ПолучитьЭлементы();
	
	Для Каждого Элемент из ЭлементыДерева Цикл
		Элемент.Отметка = Истина;
		УстановитьФлагиДочернихСтрок(Элемент, Истина);
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметкиДереваПодсистем(Команда)
	
	ЭлементыДерева = ДеревоПодсистем.ПолучитьЭлементы();
	
	Для Каждого Элемент из ЭлементыДерева Цикл
		Элемент.Отметка = Ложь;
		УстановитьФлагиДочернихСтрок(Элемент, Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоОбъектов(Команда)
	
	СформироватьДеревоМетаданных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СформироватьДанныеВыгрузки()
	
	КаталогВыгрузки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(КаталогВыгрузки);
	
	КаталогВыгрузки = КаталогВыгрузки + "/";
	
	ИмяФайлаДанныхПроекта = СформироватьДанныеПроекта(КаталогВыгрузки);
	ИмяФайлаОбщихДанных = СформироватьОбщиеДанные(КаталогВыгрузки);
	
	ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
	
	ЗаписьZip = Новый ЗаписьZipФайла(ИмяАрхива, , , , УровеньСжатияZIP.Максимальный);
	ЗаписьZip.Добавить(ИмяФайлаДанныхПроекта);
	ЗаписьZip.Добавить(ИмяФайлаОбщихДанных);
	ЗаписьZip.Записать();
	
	АдресДанныхВыгрузки = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяАрхива));
	
	Попытка
		УдалитьФайлы(КаталогВыгрузки);
		УдалитьФайлы(ИмяАрхива);
	Исключение
	КонецПопытки;
	
	Возврат АдресДанныхВыгрузки;
	
КонецФункции

&НаСервере
Функция СформироватьДанныеПроекта(КаталогВыгрузки)
	
	ИмяФайлаДанныхПроекта = КаталогВыгрузки + "model_data.xml";
	
	ИсключаемыеПодсистемы = ИсключаемыеПодсистемы();
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(ИмяФайлаДанныхПроекта, "UTF-8");
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("_1CV8ModelData", "http://www.1c.ru/V8/1CV8ModelData/");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("V8ModelData", "http://www.1c.ru/V8/1CV8ModelData/");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("v8",  "http://v8.1c.ru/data");
	
		ЗаписатьXML(ЗаписьXML, ВерсияФормата, "FormatVersion", НазначениеТипаXML.Неявное);
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("RequiredData");
			ЗаписатьОбязательныеДанные(ЗаписьXML);
		ЗаписьXML.ЗаписатьКонецЭлемента(); //RequiredData
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ProjectData");
		
	    	ЗаписатьДанныеПроекта(ЗаписьXML, ИсключаемыеПодсистемы);
								
		ЗаписьXML.ЗаписатьКонецЭлемента(); //ProjectData
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //_1CV8ModelData
	
	ЗаписьXML.Закрыть();

	Возврат ИмяФайлаДанныхПроекта;
	
КонецФункции

&НаСервере
Функция СформироватьОбщиеДанные(КаталогВыгрузки)

	ИмяФайлаОбщихДанных = КаталогВыгрузки + "model_refmap.xml";
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(ИмяФайлаОбщихДанных, "UTF-8");
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("_1CV8ModelRefMap", "http://www.1c.ru/V8/1CV8ModelRefMap/");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("V8ModelRefMap", "http://www.1c.ru/V8/1CV8ModelRefMap/");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("v8",  "http://v8.1c.ru/data");
	
		ЗаписатьXML(ЗаписьXML, ВерсияФормата, "FormatVersion", НазначениеТипаXML.Неявное);
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Data");
		
	    	ЗаписатьОбщиеДанные(ЗаписьXML);
								
		ЗаписьXML.ЗаписатьКонецЭлемента(); //Data
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //_1CV8ModelRefMap
	
	ЗаписьXML.Закрыть();
	
	Возврат ИмяФайлаОбщихДанных;
	
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеПроекта(ЗаписьXML, ИсключаемыеПодсистемы)
	
	МассивНевыгружаемыхОбъектов = НевыгружаемыеОбъекты();
	МассивПроектныхОбъектов = ОбъектыРазделяемыеПоПроектам();
	МассивОбщихОбъектов = ОбъектыНеРазделяемыеПоПроектам();
	
	// Константы не выгружаются
	
	// Ссылочные типы
	
	ВидыОбъектов = Новый Массив;
	ВидыОбъектов.Добавить("Справочники");
	ВидыОбъектов.Добавить("ПланыВидовХарактеристик");
	
	Для Каждого ВидОбъекта Из ВидыОбъектов Цикл
		Для Каждого ОбъектМетаданных из Метаданные[ВидОбъекта] Цикл
			
			ПолноеИмяОбъектаМетаданных = ОбъектМетаданных.ПолноеИмя();
			
			ЭтоОбщийОбъект = (МассивОбщихОбъектов.Найти(ПолноеИмяОбъектаМетаданных)<>Неопределено);
			
			Если (МассивПроектныхОбъектов.Найти(ПолноеИмяОбъектаМетаданных)=Неопределено И НЕ ЭтоОбщийОбъект)
				ИЛИ МассивНевыгружаемыхОбъектов.Найти(ПолноеИмяОбъектаМетаданных)<>Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаписатьДанныеСсылочногоТипа(ОбъектМетаданных, ПолноеИмяОбъектаМетаданных, ЗаписьXML, ЭтоОбщийОбъект, ИсключаемыеПодсистемы);
			
		КонецЦикла;
	КонецЦикла;
	
	// Независимые регистры сведений
	
	Для Каждого ОбъектМетаданных из Метаданные.РегистрыСведений Цикл
		
		ПолноеИмяОбъектаМетаданных = ОбъектМетаданных.ПолноеИмя();
		
		ЭтоОбщийОбъект = (МассивОбщихОбъектов.Найти(ПолноеИмяОбъектаМетаданных)<>Неопределено);
		
		Если (МассивПроектныхОбъектов.Найти(ПолноеИмяОбъектаМетаданных)=Неопределено И НЕ ЭтоОбщийОбъект)
			ИЛИ МассивНевыгружаемыхОбъектов.Найти(ПолноеИмяОбъектаМетаданных)<>Неопределено  Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбъектМетаданных.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписатьДанныеНезависимыхРегистровСведений(ОбъектМетаданных, ЗаписьXML, ИсключаемыеПодсистемы);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОбщиеДанные(ЗаписьXML)
	
	МассивОбщихОбъектов = ОбъектыНеРазделяемыеПоПроектам();
	МассивНевыгружаемыхОбъектов = НевыгружаемыеОбъекты();
	
	Для Каждого ПолноеИмяОбъекта из МассивОбщихОбъектов Цикл
		
		Если МассивНевыгружаемыхОбъектов.Найти(ПолноеИмяОбъекта)<>Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
		
		Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
			ЗаписатьДанныеСправочникаВОбщиеДанные(ЗаписьXML, ОбъектМетаданных, ПолноеИмяОбъекта);
		ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ОбъектМетаданных) Тогда
			ЗаписатьДанныеПВХВОбщиеДанные(ЗаписьXML, ОбъектМетаданных);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеСправочникаВОбщиеДанные(ЗаписьXML, ОбъектМетаданных, ПолноеИмяОбъекта)
	
	МассивРеквизитов = МассивВыгружаемыхРеквизитовСправочникаДляОбщихДанных(ОбъектМетаданных);
	
	МассивНаборовСвойствПроекта = МассивНаборовСвойствПроекта(Проект);
	
	ТекстЗапроса = ТекстЗапросаДляВыборкиДанныхСправочникаПВХ(ОбъектМетаданных, МассивРеквизитов);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеПодлежатЗаменеПриВыгрузке(ОбъектМетаданных, Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбъектМетаданных.ПолноеИмя() = "Справочник.НаборыДополнительныхРеквизитовИСведений" Тогда
			Если МассивНаборовСвойствПроекта.Найти(Выборка.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли Выборка.Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("CatalogObject." + ОбъектМетаданных.Имя);
		
			Для Каждого ИмяРеквизита Из МассивРеквизитов Цикл
        		ЗаписатьXML(ЗаписьXML, Выборка[ИмяРеквизита], ИмяРеквизита);
			КонецЦикла;
			
		ЗаписьXML.ЗаписатьКонецЭлемента(); // CatalogObject		
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПВХВОбщиеДанные(ЗаписьXML, ОбъектМетаданных)
	
	МассивРеквизитов = МассивВыгружаемыхРеквизитовПВХДляОбщихДанных(ОбъектМетаданных);
	
	ТекстЗапроса = ТекстЗапросаДляВыборкиДанныхСправочникаПВХ(ОбъектМетаданных, МассивРеквизитов);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеПодлежатЗаменеПриВыгрузке(ОбъектМетаданных, Выборка.Ссылка) ИЛИ Выборка.Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ChartOfCharacteristicTypesObject." + ОбъектМетаданных.Имя);
		
			Для Каждого ИмяРеквизита Из МассивРеквизитов Цикл
        		ЗаписатьXML(ЗаписьXML, Выборка[ИмяРеквизита], ИмяРеквизита);
			КонецЦикла;
			
		ЗаписьXML.ЗаписатьКонецЭлемента(); // ChartOfCharacteristicTypesObject		
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДанныеПодлежатЗаменеПриВыгрузке(ОбъектМетаданных, Ссылка)
	
	Результат = Ложь;
	
	ПолноеИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
	
	Если ПолноеИмяОбъекта = "Справочник.Пользователи" Тогда
		
		Если ЗаменятьПользователей И ЗначениеЗаполнено(ЗначениеЗаменыПользователи) И Ссылка <> ЗначениеЗаменыПользователи Тогда
			Результат = Истина;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъекта = "Справочник.ИсточникиИдей" Тогда
		
		Если ЗаменятьИсточникиИдей И ЗначениеЗаполнено(ЗначениеЗаменыИсточникиИдей) И Ссылка <> ЗначениеЗаменыИсточникиИдей Тогда
			Результат = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция МассивВыгружаемыхРеквизитовСправочникаДляОбщихДанных(ОбъектМетаданных)
	
	МассивРеквизитов = Новый Массив;
	
	МассивРеквизитов.Добавить("Ссылка");
	МассивРеквизитов.Добавить("Предопределенный");
	
	Если ОбъектМетаданных.ДлинаКода>0 Тогда
		МассивРеквизитов.Добавить("Код");
	КонецЕсли;
	
	Если ОбъектМетаданных.ДлинаНаименования>0 Тогда
		МассивРеквизитов.Добавить("Наименование");
	КонецЕсли;
	
	Если ОбъектМетаданных.Иерархический И ОбъектМетаданных.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда
		МассивРеквизитов.Добавить("ЭтоГруппа");
	КонецЕсли;
	
	Возврат МассивРеквизитов;
	
КонецФункции

&НаСервере
Функция МассивВыгружаемыхРеквизитовПВХДляОбщихДанных(ОбъектМетаданных)
	
	МассивРеквизитов = Новый Массив;
	
	МассивРеквизитов.Добавить("Ссылка");
	МассивРеквизитов.Добавить("Предопределенный");
	
	Если ОбъектМетаданных.ДлинаКода>0 Тогда
		МассивРеквизитов.Добавить("Код");
	КонецЕсли;
	
	Если ОбъектМетаданных.ДлинаНаименования>0 Тогда
		МассивРеквизитов.Добавить("Наименование");
	КонецЕсли;
	
	Если ОбъектМетаданных.Иерархический Тогда
		МассивРеквизитов.Добавить("ЭтоГруппа");
	КонецЕсли;
	
	Возврат МассивРеквизитов;
	
КонецФункции

&НаСервере
Функция МассивНаборовСвойствПроекта(Проект)
	
	МассивНаборов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Проекты.НаборСвойствДляВерсийПроекта,
	|	Проекты.НаборСвойствДляВеток,
	|	Проекты.НаборСвойствДляЗадачиПроцесса,
	|	Проекты.НаборСвойствДляИдей,
	|	Проекты.НаборСвойствДляКомандОбъектовМетаданных,
	|	Проекты.НаборСвойствДляМакетовОбъектовМетаданных,
	|	Проекты.НаборСвойствДляНастроекЗапускаПроцессовВыгружаемый,
	|	Проекты.НаборСвойствДляНастроекЗапускаПроцессовНеВыгружаемый,
	|	Проекты.НаборСвойствДляНастроекЗапускаСценариевВыгружаемый,
	|	Проекты.НаборСвойствДляНастроекЗапускаСценариевНеВыгружаемый,
	|	Проекты.НаборСвойствДляОбъектовМетаданных,
	|	Проекты.НаборСвойствДляОшибок,
	|	Проекты.НаборСвойствДляПодсистем,
	|	Проекты.НаборСвойствДляПроцессовВыгружаемый,
	|	Проекты.НаборСвойствДляПроцессовНеВыгружаемый,
	|	Проекты.НаборСвойствДляРазделовПроекта,
	|	Проекты.НаборСвойствДляРеквизитовОбъектовМетаданных,
	|	Проекты.НаборСвойствДляСборокВерсий,
	|	Проекты.НаборСвойствДляСценариевРаботыПользователейВыгружаемый,
	|	Проекты.НаборСвойствДляСценариевРаботыПользователейНеВыгружаемый,
	|	Проекты.НаборСвойствДляТехническихПроектов,
	|	Проекты.НаборСвойствДляФормОбъектовМетаданных,
	|	Проекты.НаборСвойствДляЦелевыхЗадач,
	|	Проекты.НаборСвойствДляФункцийСистемы,
	|	Проекты.НаборСвойств
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Проект"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляТехническихПроектов) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляТехническихПроектов);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляВеток) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляВеток);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляИдей) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляИдей);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляЗадачиПроцесса) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляЗадачиПроцесса);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляОшибок) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляОшибок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляОбъектовМетаданных) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляОбъектовМетаданных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляПодсистем) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляПодсистем);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляРеквизитовОбъектовМетаданных) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляРеквизитовОбъектовМетаданных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляФормОбъектовМетаданных) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляФормОбъектовМетаданных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляМакетовОбъектовМетаданных) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляМакетовОбъектовМетаданных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляКомандОбъектовМетаданных) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляКомандОбъектовМетаданных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляРазделовПроекта) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляРазделовПроекта);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляЦелевыхЗадач) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляЦелевыхЗадач);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляВерсийПроекта) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляВерсийПроекта);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляСборокВерсий) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляСборокВерсий);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляПроцессовВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляПроцессовВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляПроцессовНеВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляПроцессовНеВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляСценариевРаботыПользователейВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляСценариевРаботыПользователейВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляСценариевРаботыПользователейНеВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляСценариевРаботыПользователейНеВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляНастроекЗапускаПроцессовВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляНастроекЗапускаПроцессовВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляНастроекЗапускаПроцессовНеВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляНастроекЗапускаПроцессовНеВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляНастроекЗапускаСценариевВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляНастроекЗапускаСценариевВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляНастроекЗапускаСценариевНеВыгружаемый) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляНастроекЗапускаСценариевНеВыгружаемый);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойствДляФункцийСистемы) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойствДляФункцийСистемы);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаборСвойств) Тогда
			МассивНаборов.Добавить(Выборка.НаборСвойств);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивНаборов;
	
КонецФункции

&НаСервере
Процедура ЗаписатьОбязательныеДанные(ЗаписьXML)
	
	СтруктураОбязательныхДанных = ВыгрузкаЗагрузкаДанныхПоПроектам.СтруктураОбязательныхДанных(Проект);
	
	Для Каждого ЭлементСтруктуры из СтруктураОбязательныхДанных Цикл
		
		Если ЗначениеЗаполнено(ЭлементСтруктуры.Значение) Тогда
			ОбъектЗаписи = ЭлементСтруктуры.Значение.ПолучитьОбъект();
			ЗаписатьXML(ЗаписьXML, ОбъектЗаписи);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеСсылочногоТипа(ОбъектМетаданных, ПолноеИмяОбъектаМетаданных, ЗаписьXML, ЭтоОбщийОбъект, ИсключаемыеПодсистемы)
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = ТекстЗапросаДляОбъектаСсылочногоТипа(ПолноеИмяОбъектаМетаданных);
	
	Если ТекстЗапроса = "" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	&ПолноеИмяОбъектаМетаданных КАК Таблица";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолноеИмяОбъектаМетаданных", ПолноеИмяОбъектаМетаданных);
		
	КонецЕсли;
	
	ТекстУсловия = "";
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.Проекты" Тогда
		ТекстУсловия = " ГДЕ Таблица.Ссылка = &Проект";
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ВидыКонтактнойИнформации" Тогда
		ТекстУсловия = " ГДЕ НЕ Таблица.Предопределенный";	
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.КартинкиСправки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеЗадачи"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ШагиСценариевПользователя" Тогда
		ТекстУсловия = "";
	ИначеЕсли НЕ ЭтоОбщийОбъект Тогда
		ТекстУсловия = УсловиеОтбораСсылочныхДанныхПоПроекту(ПолноеИмяОбъектаМетаданных);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстУсловия;
	
	Запрос.Текст = ТекстЗапроса;
	
	Если НЕ ЭтоОбщийОбъект
		И ПолноеИмяОбъектаМетаданных <> "Справочник.ОбщиеЗадачи"
		И ПолноеИмяОбъектаМетаданных <> "Справочник.ШагиСценариевПользователя" Тогда
		
		Запрос.УстановитьПараметр("Проект", Проект);
		УстановитьДополнительныеПараметрыЗапроса(Запрос, ПолноеИмяОбъектаМетаданных, ИсключаемыеПодсистемы);
	КонецЕсли;
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.НаборыДополнительныхРеквизитовИСведений" Тогда
		МассивНаборовСвойствПроекта = МассивНаборовСвойствПроекта(Проект);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ПолноеИмяОбъектаМетаданных = "Справочник.НаборыДополнительныхРеквизитовИСведений" Тогда
			Если МассивНаборовСвойствПроекта.Найти(Выборка.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеПодлежатЗаменеПриВыгрузке(ОбъектМетаданных, Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
			
		ОбъектВыгрузки = Выборка.Ссылка.ПолучитьОбъект();
		
		ОбработатьДанныеОбъектаПередЗаписьюВФайл(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных);
		
		ЗаписатьXML(ЗаписьXML, ОбъектВыгрузки);
		
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Функция ОбъектИмеетДополнительныеРеквизиты(ПолноеИмяОбъектаМетаданных)
	
	ЕстьДополнительныеРеквизиты = Ложь;
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.ВерсииПроекта"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Ветки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЗадачиПроцесса"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЗадачиШаблонаПроцесса"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Идеи"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеЗадачи"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Ошибки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Пользователи"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Проекты"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Процессы"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РазделыОбщихЗадач"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РазделыПроекта"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.СборкиВерсии"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.СценарииРаботыПользователей"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ТехническиеПроекты"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФормыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункцииМеханизмов"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункцииСистемы"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЦелевыеЗадачи" Тогда
		
		ЕстьДополнительныеРеквизиты = Истина
		
	КонецЕсли;
	
	Возврат ЕстьДополнительныеРеквизиты;
		
КонецФункции

&НаСервере
Функция УсловиеОтбораСсылочныхДанныхПоПроекту(ПолноеИмяОбъектаМетаданных)
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.СборкиВерсии"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункцииМеханизмов"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ШагиПроцесса" Тогда
		
		ТекстУсловия = " ГДЕ Таблица.Владелец.Владелец = &Проект";
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ЗадачиПроцесса" Тогда
		
		ТекстУсловия =
		" ГДЕ (Таблица.Предмет.Владелец = &Проект ИЛИ Таблица.Предмет.Владелец.Владелец = &Проект)
		|И НЕ Таблица.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|И (НЕ Таблица.Предмет ССЫЛКА Справочник.СборкиВерсии ИЛИ Таблица.Предмет ССЫЛКА Справочник.СборкиВерсии И &ВыгружатьХарактеристикиПроекта)
		|И (НЕ Таблица.Предмет ССЫЛКА Справочник.Ошибки ИЛИ Таблица.Предмет ССЫЛКА Справочник.Ошибки И &ВыгружатьОшибки)
		|И (НЕ Таблица.Предмет ССЫЛКА Справочник.Процессы ИЛИ Таблица.Предмет ССЫЛКА Справочник.Процессы И &ВыгружатьПроцессы)
		|И (НЕ Таблица.Предмет ССЫЛКА Справочник.ТехническиеПроекты ИЛИ Таблица.Предмет ССЫЛКА Справочник.ТехническиеПроекты И &ВыгружатьТехническиеПроекты)
		|И (НЕ Таблица.Предмет ССЫЛКА Справочник.ФункцииМеханизмов ИЛИ Таблица.Предмет ССЫЛКА Справочник.ФункцииМеханизмов И &ВыгружатьФункцииМеханизмов)";
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ЗадачиШаблонаПроцесса" Тогда
		
		ТекстУсловия = " ГДЕ Таблица.Владелец.ВладелецШаблона = &Проект";
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ШаблоныПроцесса" Тогда
		
		ТекстУсловия = " ГДЕ Таблица.ВладелецШаблона = &Проект";
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.WebСервисыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.WSСсылкиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ГруппыКомандСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КомандыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КритерииОтбораСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.МакетыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеКомандыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМакетыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМодулиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеРеквизитыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПакетыXDTOСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПодпискиНаСобытияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПоследовательностиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПредопределенныеДанные"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РегламентныеЗаданияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РеквизитыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФормыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункциональныеОпцииСвойства" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЭлементыСправки" Тогда
		// Отбор по проекту выполняется в рамках собственного запроса по данныому типу ОМ
		ТекстУсловия = "";
		
	Иначе
		ТекстУсловия = " ГДЕ Таблица.Владелец = &Проект";
	КонецЕсли;
	
	Возврат ТекстУсловия;
	
КонецФункции

&НаСервере
Процедура УстановитьДополнительныеПараметрыЗапроса(Запрос, ПолноеИмяОбъектаМетаданных, ИсключаемыеПодсистемы)
	
	// Параметры флагов выгрузки определенных типов данных
	Если ПолноеИмяОбъектаМетаданных = "Справочник.ЗадачиПроцесса" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.ИерархияЗадачПроцесса" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.ИтогиСогласованияЗадачРесурсов" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.СостоянияЗадачПроцессов"
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.ПротоколСогласованияРесурсов"
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.ЭтапыПроцесса" Тогда
		
		Запрос.УстановитьПараметр("ВыгружатьОшибки", ВыгружатьОшибки);
		Запрос.УстановитьПараметр("ВыгружатьПроцессы", ВыгружатьПроцессы);
		Запрос.УстановитьПараметр("ВыгружатьТехническиеПроекты", ВыгружатьТехническиеПроекты);
		Запрос.УстановитьПараметр("ВыгружатьФункцииМеханизмов", ВыгружатьФункцииМеханизмов);
		Запрос.УстановитьПараметр("ВыгружатьХарактеристикиПроекта", ВыгружатьХарактеристикиПроекта);
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "РегистрСведений.ДополнительныеСведения" Тогда
		
		Запрос.УстановитьПараметр("ВыгружатьОшибки", ВыгружатьОшибки);
		Запрос.УстановитьПараметр("ВыгружатьИдеи", ВыгружатьИдеи);
		Запрос.УстановитьПараметр("ВыгружатьЗадачиПроцесса", ВыгружатьЗадачиПроцесса);
		Запрос.УстановитьПараметр("ВыгружатьЦелевыеЗадачи", ВыгружатьЦелевыеЗадачи);
		Запрос.УстановитьПараметр("ВыгружатьТехническиеПроекты", ВыгружатьТехническиеПроекты);
		Запрос.УстановитьПараметр("ВыгружатьФункцииМеханизмов", ВыгружатьФункцииМеханизмов);
		Запрос.УстановитьПараметр("ВыгружатьХарактеристикиПроекта", ВыгружатьХарактеристикиПроекта);
		
	КонецЕсли;
	
	// Параметры фильтрации по подсистемам
	Если ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.WebСервисыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.WSСсылкиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ГруппыКомандСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КомандыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КритерииОтбораСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.МакетыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеКомандыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМакетыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМодулиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеРеквизитыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПакетыXDTOСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПодпискиНаСобытияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПоследовательностиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПредопределенныеДанные"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РегламентныеЗаданияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РеквизитыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФормыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункциональныеОпцииСвойства" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЭлементыСправки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.НаличиеСправки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.ПраваДоступаКОбъектамМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "РегистрСведений.СтатусыВстраиванияМеханизмов" Тогда
		
		Если ВариантФильтраВыгрузки = 0 ИЛИ ИсключаемыеПодсистемы.Количество()=0 Тогда
			ФильтроватьДанныеПоПодсистемам = Ложь;
		Иначе
			ФильтроватьДанныеПоПодсистемам = Истина;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ИсключаемыеПодсистемы", ИсключаемыеПодсистемы);
		Запрос.УстановитьПараметр("ФильтроватьДанныеПоПодсистемам", ФильтроватьДанныеПоПодсистемам);
		
	КонецЕсли;
	
Конецпроцедуры

&НаСервере
Процедура ЗаписатьДанныеНезависимыхРегистровСведений(ОбъектМетаданных, ЗаписьXML, ИсключаемыеПодсистемы)
	
	ПолноеИмяОбъектаМетаданных = ОбъектМетаданных.ПолноеИмя();
	
	ТекстЗапроса = "";
	
	ТекстЗапроса = ТекстЗапросаДляПолученияЗначенийОтбораРегистра(ОбъектМетаданных.Имя);
	
	Если ТекстЗапроса = "" Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	УстановитьДополнительныеПараметрыЗапроса(Запрос, ПолноеИмяОбъектаМетаданных, ИсключаемыеПодсистемы);
	
	ТаблицаЗначенийОтбора = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы из ТаблицаЗначенийОтбора Цикл
		
		НаборЗаписей = РегистрыСведений[ОбъектМетаданных.Имя].СоздатьНаборЗаписей();
		
		Для Каждого Колонка из ТаблицаЗначенийОтбора.Колонки Цикл
			НаборЗаписей.Отбор[Колонка.Имя].Установить(СтрокаТаблицы[Колонка.Имя], Истина);
		КонецЦикла;
		
		НаборЗаписей.Прочитать();
		
		ОбработатьДанныеНабораЗаписейПередЗаписьюВФайл(НаборЗаписей, ПолноеИмяОбъектаМетаданных);
		
		ЗаписатьXML(ЗаписьXML, НаборЗаписей);
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаДляВыборкиДанныхСправочникаПВХ(ОбъектМетаданных, МассивРеквизитов)
	
	ИмяОбъекта = ОбъектМетаданных.Имя;
	ПолноеИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
	
	СтрокаВыборкиПолей = "";
	
	КоличествоПолей = МассивРеквизитов.Количество();
	
	Сч = 1;
	Для Каждого ИмяРеквизита Из МассивРеквизитов Цикл
		
		СтрокаВыборкиПолей = СтрокаВыборкиПолей + ИмяОбъекта + "." + ИмяРеквизита;
		Если Сч < КоличествоПолей Тогда
			СтрокаВыборкиПолей = СтрокаВыборкиПолей + ", ";
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
 	ТекстЗапроса = "ВЫБРАТЬ " + СтрокаВыборкиПолей + " ИЗ "  + ПолноеИмяОбъекта + " КАК " + ИмяОбъекта;
	
	Возврат ТекстЗапроса;

КонецФункции

&НаСервере
Функция ТекстЗапросаДляПолученияЗначенийОтбораРегистра(ИмяОбъекта)
	
	ТекстЗапроса = "";
	МассивПолей = Новый Массив;
	
	Если ИмяОбъекта = "ВыполнениеОбщихЗадач" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыполнениеОбщихЗадач.Период КАК Период,
		|	ВыполнениеОбщихЗадач.ОбщаяЗадача КАК ОбщаяЗадача,
		|	ВыполнениеОбщихЗадач.Проект КАК Проект
		|ИЗ
		|	РегистрСведений.ВыполнениеОбщихЗадач КАК ВыполнениеОбщихЗадач
		|ГДЕ
		|	ВыполнениеОбщихЗадач.Проект = &Проект"
		;
		
	ИначеЕсли ИмяОбъекта = "ДополнительныеСведения" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеСведения.Объект КАК Объект,
		|	ДополнительныеСведения.Свойство КАК Свойство
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	(ДополнительныеСведения.Объект.Владелец = &Проект
		|			ИЛИ ДополнительныеСведения.Объект.Владелец.Владелец = &Проект)
		|И (ДополнительныеСведения.Объект ССЫЛКА Справочник.Проекты
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ОбъектыМетаданных
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.Подсистемы
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ФормыОбъектовМетаданных
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.Пользователи
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ВерсииПроекта И &ВыгружатьХарактеристикиПроекта
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.СборкиВерсии И &ВыгружатьХарактеристикиПроекта
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.РазделыПроекта И &ВыгружатьХарактеристикиПроекта
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.Идеи И &ВыгружатьИдеи
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ЗадачиПроцесса И &ВыгружатьЗадачиПроцесса
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ЦелевыеЗадачи И &ВыгружатьЦелевыеЗадачи
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.Ошибки И &ВыгружатьОшибки
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ТехническиеПроекты И &ВыгружатьТехническиеПроекты
		|ИЛИ ДополнительныеСведения.Объект ССЫЛКА Справочник.ФункцииМеханизмов И &ВыгружатьФункцииМеханизмов)"
		;
				
	ИначеЕсли ИмяОбъекта = "ИерархияЗадачПроцесса" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИерархияЗадачПроцесса.ЗадачаПроцесса КАК ЗадачаПроцесса,
		|	ИерархияЗадачПроцесса.Родитель КАК Родитель
		|ИЗ
		|	РегистрСведений.ИерархияЗадачПроцесса КАК ИерархияЗадачПроцесса
		|ГДЕ
		|	(ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет.Владелец = &Проект
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет.Владелец.Владелец = &Проект)
		|	И НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|	И (НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|				И &ВыгружатьХарактеристикиПроекта)
		|	И (НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|				И &ВыгружатьОшибки)
		|	И (НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|				И &ВыгружатьПроцессы)
		|	И (НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|				И &ВыгружатьТехническиеПроекты)
		|	И (НЕ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|			ИЛИ ИерархияЗадачПроцесса.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|				И &ВыгружатьФункцииМеханизмов)"
		;
		
	ИначеЕсли ИмяОбъекта = "НаличиеСправки" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НаличиеСправки.ВладелецСправки КАК ВладелецСправки
		|ИЗ
		|	РегистрСведений.НаличиеСправки КАК НаличиеСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И (НаличиеСправки.ВладелецСправки = ПодсистемыСостав.ОбъектМетаданных
		|				ИЛИ НаличиеСправки.ВладелецСправки.Владелец = ПодсистемыСостав.ОбъектМетаданных)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы КАК Подсистемы
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (Подсистемы.Владелец = &Проект)
		|			И (Подсистемы.Ссылка В (&ИсключаемыеПодсистемы))
		|			И НаличиеСправки.ВладелецСправки = Подсистемы.Ссылка
		|ГДЕ
		|	(НаличиеСправки.ВладелецСправки.Владелец.Владелец = &Проект
		|			ИЛИ НаличиеСправки.ВладелецСправки.Владелец = &Проект)
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)
		|	И (Подсистемы.Ссылка ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
	ИначеЕсли ИмяОбъекта = "ПраваДоступаКОбъектамМетаданных" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПраваДоступаКОбъектамМетаданных.Роль КАК Роль,
		|	ПраваДоступаКОбъектамМетаданных.ОбъектМетаданных КАК ОбъектМетаданных
		|ИЗ
		|	РегистрСведений.ПраваДоступаКОбъектамМетаданных КАК ПраваДоступаКОбъектамМетаданных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И (ПраваДоступаКОбъектамМетаданных.Роль = ПодсистемыСостав.ОбъектМетаданных
		|				ИЛИ ПраваДоступаКОбъектамМетаданных.ОбъектМетаданных = ПодсистемыСостав.ОбъектМетаданных)
		|ГДЕ
		|	ПраваДоступаКОбъектамМетаданных.Роль.Владелец = &Проект
		|	И ПраваДоступаКОбъектамМетаданных.ОбъектМетаданных.Владелец = &Проект
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
	ИначеЕсли ИмяОбъекта = "ПротоколСогласованияРесурсов" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПротоколСогласованияРесурсов.Задача             КАК Задача,
		|	ПротоколСогласованияРесурсов.ВидРесурса         КАК ВидРесурса,
		|	ПротоколСогласованияРесурсов.СтатусСогласования КАК СтатусСогласования
		|ИЗ
		|	РегистрСведений.ПротоколСогласованияРесурсов КАК ПротоколСогласованияРесурсов
		|ГДЕ
		|	(ПротоколСогласованияРесурсов.Задача.Предмет.Владелец = &Проект ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет.Владелец.Владелец = &Проект)
		|	И НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|	И (НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.СборкиВерсии
		|			ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.СборкиВерсии
		|				И &ВыгружатьХарактеристикиПроекта)
		|	И (НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.Ошибки
		|			ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.Ошибки
		|				И &ВыгружатьОшибки)
		|	И (НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.Процессы
		|			ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.Процессы
		|				И &ВыгружатьПроцессы)
		|	И (НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|			ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|				И &ВыгружатьТехническиеПроекты)
		|	И (НЕ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|			ИЛИ ПротоколСогласованияРесурсов.Задача.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|				И &ВыгружатьФункцииМеханизмов)"
		;
		
	ИначеЕсли ИмяОбъекта = "ИтогиСогласованияЗадачРесурсов" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса КАК ЗадачаПроцесса,
		|	ИтогиСогласованияЗадачРесурсов.ВидРесурса КАК ВидРесурса
		|ИЗ
		|	РегистрСведений.ИтогиСогласованияЗадачРесурсов КАК ИтогиСогласованияЗадачРесурсов
		|ГДЕ
		|	(ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет.Владелец = &Проект ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет.Владелец.Владелец = &Проект)
		|	И НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|	И (НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|			ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|				И &ВыгружатьХарактеристикиПроекта)
		|	И (НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|			ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|				И &ВыгружатьОшибки)
		|	И (НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|			ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|				И &ВыгружатьПроцессы)
		|	И (НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|			ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|				И &ВыгружатьТехническиеПроекты)
		|	И (НЕ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|			ИЛИ ИтогиСогласованияЗадачРесурсов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|				И &ВыгружатьФункцииМеханизмов)"
		;
		
	ИначеЕсли ИмяОбъекта = "СостоянияЗадачПроцессов" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СостоянияЗадачПроцессов.ЗадачаПроцесса КАК ЗадачаПроцесса
		|ИЗ
		|	РегистрСведений.СостоянияЗадачПроцессов КАК СостоянияЗадачПроцессов
		|ГДЕ
		|	(СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет.Владелец = &Проект
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет.Владелец.Владелец = &Проект)
		|	И НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|	И (НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|				И &ВыгружатьХарактеристикиПроекта)
		|	И (НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|				И &ВыгружатьОшибки)
		|	И (НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|				И &ВыгружатьПроцессы)
		|	И (НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|				И &ВыгружатьТехническиеПроекты)
		|	И (НЕ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|			ИЛИ СостоянияЗадачПроцессов.ЗадачаПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|				И &ВыгружатьФункцииМеханизмов)"
		;
	
	ИначеЕсли ИмяОбъекта = "СтатусыВстраиванияМеханизмов" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтатусыВстраиванияМеханизмов.Механизм КАК Механизм,
		|	СтатусыВстраиванияМеханизмов.ОбъектМетаданных КАК ОбъектМетаданных,
		|	СтатусыВстраиванияМеханизмов.ФункцияМеханизма КАК ФункцияМеханизма
		|ИЗ
		|	РегистрСведений.СтатусыВстраиванияМеханизмов КАК СтатусыВстраиванияМеханизмов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И СтатусыВстраиванияМеханизмов.ОбъектМетаданных = ПодсистемыСостав.ОбъектМетаданных
		|ГДЕ
		|	СтатусыВстраиванияМеханизмов.Механизм.Владелец = &Проект
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
	ИначеЕсли ИмяОбъекта = "ЭтапыПроцесса" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭтапыПроцесса.Предмет КАК Предмет,
		|	ЭтапыПроцесса.ШаблонПроцесса КАК ШаблонПроцесса,
		|	ЭтапыПроцесса.ЗадачаПроцесса КАК ЗадачаПроцесса
		|ИЗ
		|	РегистрСведений.ЭтапыПроцесса КАК ЭтапыПроцесса
		|ГДЕ
		|	(ЭтапыПроцесса.Предмет.Владелец = &Проект
		|			ИЛИ ЭтапыПроцесса.Предмет.Владелец.Владелец = &Проект)
		|	И НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.ОбработчикиОбновленияИнформационнойБазы
		|	И (НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|			ИЛИ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.СборкиВерсии
		|				И &ВыгружатьХарактеристикиПроекта)
		|	И (НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|			ИЛИ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.Ошибки
		|				И &ВыгружатьОшибки)
		|	И (НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|			ИЛИ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.Процессы
		|				И &ВыгружатьПроцессы)
		|	И (НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|			ИЛИ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.ТехническиеПроекты
		|				И &ВыгружатьТехническиеПроекты)
		|	И (НЕ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|			ИЛИ ЭтапыПроцесса.Предмет ССЫЛКА Справочник.ФункцииМеханизмов
		|				И &ВыгружатьФункцииМеханизмов)"
		;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаДляОбъектаСсылочногоТипа(ПолноеИмяОбъектаМетаданных)
	
	ТекстЗапроса = "";
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.КартинкиСправки" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КартинкиСправки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЭлементыСправки.КартинкиДляСправки КАК ЭлементыСправкиКартинкиДляСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КартинкиСправки КАК КартинкиСправки
		|		ПО ЭлементыСправкиКартинкиДляСправки.Картинка = КартинкиСправки.Ссылка
		|ГДЕ
		|	(ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец ССЫЛКА Справочник.ОбъектыМетаданных
		|				И ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец.Владелец = &Проект
		|			ИЛИ ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец ССЫЛКА Справочник.Подсистемы
		|				И ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец.Владелец = &Проект
		|			ИЛИ ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец ССЫЛКА Справочник.ФормыОбъектовМетаданных
		|				И ЭлементыСправкиКартинкиДляСправки.Ссылка.Владелец.Владелец.Владелец = &Проект)
		|	И НЕ КартинкиСправки.Ссылка ЕСТЬ NULL"
		;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Подсистемы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Подсистемы КАК Подсистемы
		|ГДЕ
		|	Подсистемы.Владелец = &Проект
		|	И (НЕ Подсистемы.Ссылка В (&ИсключаемыеПодсистемы)
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыМетаданных.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И ОбъектыМетаданных.Ссылка = ПодсистемыСостав.ОбъектМетаданных
		|ГДЕ
		|	ОбъектыМетаданных.Владелец = &Проект
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.WebСервисыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.WSСсылкиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ГруппыКомандСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КомандыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.КритерииОтбораСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.МакетыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеКомандыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМакетыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеМодулиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбщиеРеквизитыСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПакетыXDTOСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПодпискиНаСобытияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПоследовательностиСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПредопределенныеДанные"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РегламентныеЗаданияСвойства"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РеквизитыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФормыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФункциональныеОпцииСвойства" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	&ИмяТаблицы КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И Таблица.Владелец = ПодсистемыСостав.ОбъектМетаданных
		|ГДЕ
		|	Таблица.Владелец.Владелец = &Проект
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяТаблицы", ПолноеИмяОбъектаМетаданных);
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ЭлементыСправки" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭлементыСправки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЭлементыСправки КАК ЭлементыСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (ПодсистемыСостав.Ссылка.Владелец = &Проект)
		|			И (ПодсистемыСостав.Ссылка В (&ИсключаемыеПодсистемы))
		|			И (ЭлементыСправки.Владелец = ПодсистемыСостав.ОбъектМетаданных
		|				ИЛИ ЭлементыСправки.Владелец.Владелец = ПодсистемыСостав.ОбъектМетаданных)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы КАК Подсистемы
		|		ПО (&ФильтроватьДанныеПоПодсистемам)
		|			И (Подсистемы.Владелец = &Проект)
		|			И (Подсистемы.Ссылка В (&ИсключаемыеПодсистемы))
		|			И ЭлементыСправки.Владелец = Подсистемы.Ссылка
		|ГДЕ
		|	(ЭлементыСправки.Владелец.Владелец = &Проект
		|			ИЛИ ЭлементыСправки.Владелец.Владелец.Владелец = &Проект)
		|	И (ПодсистемыСостав.ОбъектМетаданных ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)
		|	И (Подсистемы.Ссылка ЕСТЬ NULL
		|			ИЛИ НЕ &ФильтроватьДанныеПоПодсистемам)"
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ОбъектыНеРазделяемыеПоПроектам()
	
	Массив = Новый Массив();
	
	Массив.Добавить("Справочник.ВидыКонтактнойИнформации");
	Массив.Добавить("Справочник.ВидыСогласуемыхРесурсов");
	Массив.Добавить("Справочник.ЗначенияСвойствОбъектов");
	Массив.Добавить("Справочник.ЗначенияСвойствОбъектовИерархия");	
	Массив.Добавить("Справочник.ИсточникиИдей");
	Массив.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
	Массив.Добавить("Справочник.Подразделения");
	Массив.Добавить("Справочник.Пользователи");
	Массив.Добавить("Справочник.РазделыОбщихЗадач");
	Массив.Добавить("Справочник.СтилиФорматирования");
	
	Массив.Добавить("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения");
		
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция ОбъектыРазделяемыеПоПроектам()
	
	Массив = Новый Массив();
	
	Массив.Добавить("Справочник.WebСервисыСвойства");
	Массив.Добавить("Справочник.WSСсылкиСвойства");
	Массив.Добавить("Справочник.Ветки");
	Массив.Добавить("Справочник.ВерсииПроекта");
	Массив.Добавить("Справочник.ВидыДоступа");
	Массив.Добавить("Справочник.ГруппыКомандСвойства");
	Массив.Добавить("Справочник.ЗадачиПроцесса");
	Массив.Добавить("Справочник.ЗадачиШаблонаПроцесса");
	Массив.Добавить("Справочник.КартинкиСправки");
	Массив.Добавить("Справочник.КомандыОбъектовМетаданных");
	Массив.Добавить("Справочник.КритерииОтбораСвойства");
	Массив.Добавить("Справочник.ОбщиеЗадачи");
	Массив.Добавить("Справочник.ОбщиеКомандыСвойства");
	Массив.Добавить("Справочник.ОбщиеМакетыСвойства");
	Массив.Добавить("Справочник.ОбщиеМодулиСвойства");
	Массив.Добавить("Справочник.ОбщиеРеквизитыСвойства");
	Массив.Добавить("Справочник.ОбъектыМетаданных");
	Массив.Добавить("Справочник.Ошибки");
	Массив.Добавить("Справочник.МакетыОбъектовМетаданных");
	Массив.Добавить("Справочник.ПакетыXDTOСвойства");
	Массив.Добавить("Справочник.ПодпискиНаСобытияСвойства");
	Массив.Добавить("Справочник.ПоследовательностиСвойства");
	Массив.Добавить("Справочник.Подсистемы");
	Массив.Добавить("Справочник.ПредопределенныеДанные");
	Массив.Добавить("Справочник.Проекты");
	Массив.Добавить("Справочник.ПрофилиПользователей");
	Массив.Добавить("Справочник.Процессы");
	Массив.Добавить("Справочник.РазделыПроекта");
	Массив.Добавить("Справочник.РегламентныеЗаданияСвойства");
	Массив.Добавить("Справочник.Регламенты");
	Массив.Добавить("Справочник.РеквизитыОбъектовМетаданных");
	Массив.Добавить("Справочник.СборкиВерсии");
	Массив.Добавить("Справочник.СценарииРаботыПользователей");
	Массив.Добавить("Справочник.ТехническиеПроекты");
	Массив.Добавить("Справочник.Идеи");
	Массив.Добавить("Справочник.ФормыОбъектовМетаданных");
	Массив.Добавить("Справочник.ФункцииСистемы");
	Массив.Добавить("Справочник.ФункциональныеОпцииСвойства");
	Массив.Добавить("Справочник.ЦелевыеЗадачи");
	Массив.Добавить("Справочник.ШаблоныПроцесса");
	Массив.Добавить("Справочник.ШагиПроцесса");
	Массив.Добавить("Справочник.ШагиСценариевПользователя");
	Массив.Добавить("Справочник.ЭлементыСправки");
	
	Массив.Добавить("РегистрСведений.ВыполнениеОбщихЗадач");
	Массив.Добавить("РегистрСведений.ДополнительныеСведения");
	Массив.Добавить("РегистрСведений.ИерархияЗадачПроцесса");
	Массив.Добавить("РегистрСведений.ИтогиСогласованияЗадачРесурсов");
	Массив.Добавить("РегистрСведений.НаличиеСправки");
	Массив.Добавить("РегистрСведений.ПраваДоступаКОбъектамМетаданных");
	Массив.Добавить("РегистрСведений.ПротоколСогласованияРесурсов");
	Массив.Добавить("РегистрСведений.СостоянияЗадачПроцессов");
	Массив.Добавить("РегистрСведений.СтатусыВстраиванияМеханизмов");
	Массив.Добавить("РегистрСведений.ЭтапыПроцесса");
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция НевыгружаемыеОбъекты()
	
	Массив = Новый Массив();
	
	Если НЕ ВыгружатьХарактеристикиПроекта Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Ветки");
		ДобавитьОбъектВМассив(Массив, "Справочник.ВерсииПроекта");
		ДобавитьОбъектВМассив(Массив, "Справочник.РазделыПроекта");
		ДобавитьОбъектВМассив(Массив, "Справочник.СборкиВерсии");
		ДобавитьОбъектВМассив(Массив, "Справочник.Ошибки");
		ДобавитьОбъектВМассив(Массив, "Справочник.ТехническиеПроекты");
		ДобавитьОбъектВМассив(Массив, "Справочник.ФункцииМеханизмов");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.СтатусыВстраиванияМеханизмов");
	КонецЕсли;
	
	Если НЕ ВыгружатьПроцессы Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Процессы");
		ДобавитьОбъектВМассив(Массив, "Справочник.ШагиПроцесса");
	КонецЕсли;
	
	Если НЕ ВыгружатьСценарииРаботыПользователей Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.СценарииРаботыПользователей");
	КонецЕсли;
	
	Если НЕ ВыгружатьШагиСценариевПользователя Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ШагиСценариевПользователя");
	КонецЕсли;
	
	Если НЕ ВыгружатьИдеи Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Идеи");
		ДобавитьОбъектВМассив(Массив, "Справочник.ИсточникиИдей");
	КонецЕсли;
	
	Если НЕ ВыгружатьТехническиеПроекты Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ТехническиеПроекты");
	КонецЕсли;
	
	Если НЕ ВыгружатьЦелевыеЗадачи Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ЦелевыеЗадачи");
	КонецЕсли;
	
	Если НЕ ВыгружатьОбщиеЗадачи Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ОбщиеЗадачи");
		ДобавитьОбъектВМассив(Массив, "Справочник.РазделыОбщихЗадач");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ВыполнениеОбщихЗадач");
	КонецЕсли;
	
	Если НЕ ВыгружатьЗадачиПроцесса Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ЗадачиПроцесса");
		ДобавитьОбъектВМассив(Массив, "Справочник.ЗадачиШаблонаПроцесса");
		ДобавитьОбъектВМассив(Массив, "Справочник.ШаблоныПроцесса");
		ДобавитьОбъектВМассив(Массив, "Справочник.ВидыСогласуемыхРесурсов");
		
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ИерархияЗадачПроцесса");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ИтогиСогласованияЗадачРесурсов");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ПротоколСогласованияРесурсов");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.СостоянияЗадачПроцессов");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ЭтапыПроцесса");
	КонецЕсли;
	
	Если НЕ ВыгружатьОшибки Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Ошибки");
	КонецЕсли;
	
	Если НЕ ВыгружатьФункцииМеханизмов Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ФункцииМеханизмов");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.СтатусыВстраиванияМеханизмов");
	КонецЕсли;
	
	Если НЕ ВыгружатьРегламенты Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Регламенты");
	КонецЕсли;
	
	Если НЕ ВыгружатьСправочнуюИнформацию Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.ЭлементыСправки");
		ДобавитьОбъектВМассив(Массив, "Справочник.КартинкиСправки");
		ДобавитьОбъектВМассив(Массив, "Справочник.СтилиФорматирования");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.НаличиеСправки");
	КонецЕсли;
	
	Если НЕ ВыгружатьДополнительныеРеквизитыИСведения Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.НаборыДополнительныхРеквизитовИСведений");
		ДобавитьОбъектВМассив(Массив, "Справочник.ЗначенияСвойствОбъектов");
		ДобавитьОбъектВМассив(Массив, "Справочник.ЗначенияСвойствОбъектовИерархия");
		ДобавитьОбъектВМассив(Массив, "ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения");
		ДобавитьОбъектВМассив(Массив, "РегистрСведений.ДополнительныеСведения");
	КонецЕсли;
	
	Если НЕ ВыгружатьПодразделения Тогда
		ДобавитьОбъектВМассив(Массив, "Справочник.Подразделения");
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Процедура ДобавитьОбъектВМассив(Массив, ИмяОбъекта)
	
	Если Массив.Найти(ИмяОбъекта) = Неопределено Тогда
		Массив.Добавить(ИмяОбъекта);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеОбъектаПередЗаписьюВФайл(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных)
	
	Если НЕ ВыгружатьДополнительныеРеквизитыИСведения 
			И ОбъектИмеетДополнительныеРеквизиты(ПолноеИмяОбъектаМетаданных) Тогда
			
		Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
			ОбъектВыгрузки.ДополнительныеРеквизиты.Очистить();
		КонецЕсли;
		
		Если ПолноеИмяОбъектаМетаданных = "Справочник.Проекты" Тогда
			
			ОбъектВыгрузки.НаборСвойствДляТехническихПроектов = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляИдей = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляЗадачиПроцесса = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляОшибок = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляОбъектовМетаданных = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляПодсистем = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляФормОбъектовМетаданных = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляМакетовОбъектовМетаданных = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляКомандОбъектовМетаданных = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляРазделовПроекта = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляЦелевыхЗадач = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляВерсийПроекта = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляСборокВерсий = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляПроцессовВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляПроцессовНеВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляСценариевРаботыПользователейВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляСценариевРаботыПользователейНеВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляНастроекЗапускаПроцессовВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляНастроекЗапускаПроцессовНеВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляНастроекЗапускаСценариевВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляНастроекЗапускаСценариевНеВыгружаемый = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляФункцийСистемы = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойствДляРеквизитовОбъектовМетаданных = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			ОбъектВыгрузки.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.Ошибки" Тогда
		
		Если ЗначениеЗаполнено(ОбъектВыгрузки.Основание)
			И НЕ ВыгружатьТехническиеПроекты
			И ТипЗнч(ОбъектВыгрузки.Основание) = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
			ОбъектВыгрузки.Основание = Неопределено;
		КонецЕсли;
		
		Если НЕ ВыгружатьСценарииРаботыПользователей Тогда
			ОбъектВыгрузки.СценарийПользователя = Справочники.СценарииРаботыПользователей.ПустаяСсылка();
		КонецЕсли;
		
		ОбъектВыгрузки.Тест = Справочники.Тесты.ПустаяСсылка();
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Проекты" Тогда
		
		ОбъектВыгрузки.ВключаемыеПроекты.Очистить();
		ОбъектВыгрузки.ИспользуемыеРазделыВключаемыхПроектов.Очистить();
		
		Если НЕ ВыгружатьХарактеристикиПроекта Тогда
			ОбъектВыгрузки.ПорядокВоспроизведенияИИсправленияОшибок.Очистить();
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.СборкиВерсии" Тогда
		
		ОбъектВыгрузки.СборкиВключаемыхПроектов.Очистить();
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ТехническиеПроекты" Тогда
		
		Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
			
			Если НЕ ВыгружатьПроцессы Тогда
				ОбъектВыгрузки.Процессы.Очистить();
			КонецЕсли;
			
			ОбъектВыгрузки.ОбработчикиОбновления.Очистить();
		    ОбъектВыгрузки.КлючевыеОперации.Очистить();
			
			Если НЕ ВыгружатьИдеи И НЕ ВыгружатьОшибки Тогда
				ОбъектВыгрузки.ИдеиИОшибки.Очистить();
			ИначеЕсли НЕ ВыгружатьИдеи Тогда
				ОчиститьИдеиВТехническихПроектах(ОбъектВыгрузки, Истина, Ложь);
			ИначеЕсли НЕ ВыгружатьОшибки Тогда
				ОчиститьИдеиВТехническихПроектах(ОбъектВыгрузки, Ложь, Истина);
			КонецЕсли;
			
			Если НЕ ВыгружатьЦелевыеЗадачи Тогда
				ОбъектВыгрузки.ЦелеваяЗадача = Неопределено;
			КонецЕсли;
			
			Если НЕ ВыгружатьСценарииРаботыПользователей Тогда
				ОбъектВыгрузки.СценарииПользователей.Очистить();
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Идеи" Тогда
		
		Если ЗначениеЗаполнено(ОбъектВыгрузки.Основание) Тогда
			
			Если (НЕ ВыгружатьОшибки ИЛИ НЕ ВыгружатьХарактеристикиПроекта)
				И ТипЗнч(ОбъектВыгрузки.Основание) = Тип("СправочникСсылка.Ошибки") Тогда
				ОбъектВыгрузки.Основание = Неопределено;
			КонецЕсли;
			
			Если (НЕ ВыгружатьТехническиеПроекты ИЛИ НЕ ВыгружатьХарактеристикиПроекта)
				И ТипЗнч(ОбъектВыгрузки.Основание) = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
				ОбъектВыгрузки.Основание = Неопределено;
			КонецЕсли;
			
			Если НЕ ВыгружатьЦелевыеЗадачи Тогда
				ОбъектВыгрузки.ЦелеваяЗадача = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ШагиПроцесса" Тогда
		
		Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
			
			Если НЕ ВыгружатьСценарииРаботыПользователей Тогда
				ОбъектВыгрузки.СценарийРаботыПользователя = Справочники.СценарииРаботыПользователей.ПустаяСсылка();
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Пользователи" Тогда
		
		Если НЕ ВыгружатьПодразделения Тогда
			ОбъектВыгрузки.Подразделение = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	ОчиститьВеткуИсточник(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных);
	
	Если НЕ ВыгружатьХарактеристикиПроекта Тогда
		ОчиститьРазделыПроекта(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных);
	КонецЕсли;
	
	ЗаменитьЗначенияВОбъекте(ОбъектВыгрузки);
	ОчиститьПоляОбъекта(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВеткуИсточник(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных)
	
	Если (ПолноеИмяОбъектаМетаданных = "Справочник.КомандыОбъектовМетаданных" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.МакетыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных" И НЕ ОбъектВыгрузки.ЭтоГруппа
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы" 
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПредопределенныеДанные" И НЕ ОбъектВыгрузки.ЭтоГруппа
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.РеквизитыОбъектовМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ФормыОбъектовМетаданных") Тогда
		
		Если НЕ ВыгружатьХарактеристикиПроекта Тогда
			ОбъектВыгрузки.ВеткаИсточник = Справочники.Ветки.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРазделыПроекта(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных)
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.ВидыДоступа"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Ошибки"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Подсистемы"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ПрофилиПользователей"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Процессы"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ТехническиеПроекты"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.Идеи" Тогда
		
		ОбъектВыгрузки.РазделПроекта = Справочники.РазделыПроекта.ПустаяСсылка();
		ОбъектВыгрузки.РазделыПроекта.Очистить();
		
	ИначеЕсли (ПолноеИмяОбъектаМетаданных = "Справочник.ОбъектыМетаданных"
		ИЛИ ПолноеИмяОбъектаМетаданных = "Справочник.ЦелевыеЗадачи")
		И НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
		
		ОбъектВыгрузки.РазделПроекта = Справочники.РазделыПроекта.ПустаяСсылка();
		ОбъектВыгрузки.РазделыПроекта.Очистить();
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.СценарииРаботыПользователей" Тогда
		
		Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
			ОбъектВыгрузки.РазделПроекта = Справочники.РазделыПроекта.ПустаяСсылка();
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Проекты" Тогда
		
		ОбъектВыгрузки.ИспользуемыеРазделыВключаемыхПроектов.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеНабораЗаписейПередЗаписьюВФайл(НаборЗаписей, ПолноеИмяОбъектаМетаданных)
	
	ЗаменитьЗначенияВНабореЗаписей(НаборЗаписей);
	ОчиститьПоляОбъекта(НаборЗаписей, ПолноеИмяОбъектаМетаданных);
	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьЗначенияВОбъекте(ОбъектВыгрузки)
	
	Если НЕ ЗаменятьПользователей 
		И НЕ ЗаменятьИсточникиИдей Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = ОбъектВыгрузки.Метаданные();
	
	Для Каждого Реквизит из МетаданныеОбъекта.Реквизиты Цикл
		ПроверитьЗаменитьЗначение(ОбъектВыгрузки[Реквизит.Имя]);
	КонецЦикла;
								
	Для Каждого СтандартныйРеквизит из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если СтандартныйРеквизит.Имя = "Родитель" ИЛИ СтандартныйРеквизит.Имя = "Владелец" Тогда
			ПроверитьЗаменитьЗначение(ОбъектВыгрузки[СтандартныйРеквизит.Имя]);
		КонецЕсли;
	КонецЦикла;							
	
	Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		Для Каждого СтрокаТЧ из ОбъектВыгрузки[ТабличнаяЧасть.Имя] Цикл
			Для Каждого Реквизит из ТабличнаяЧасть.Реквизиты Цикл
				ПроверитьЗаменитьЗначение(СтрокаТЧ[Реквизит.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьЗначенияВНабореЗаписей(НаборЗаписей)
	
	МетаданныеОбъекта = НаборЗаписей.Метаданные();
	
	// Отбор
	Для Каждого ЭлементОтбора из НаборЗаписей.Отбор Цикл
		ПроверитьЗаменитьЗначение(ЭлементОтбора.Значение);
	КонецЦикла;
	
	Для Каждого Запись из НаборЗаписей Цикл
		
		// Измерения
		Для Каждого Измерение из МетаданныеОбъекта.Измерения Цикл
			ПроверитьЗаменитьЗначение(Запись[Измерение.Имя]);
		КонецЦикла;
		
		// Ресурсы
		Для Каждого Ресурс из МетаданныеОбъекта.Ресурсы Цикл
			ПроверитьЗаменитьЗначение(Запись[Ресурс.Имя]);
		КонецЦикла;
		
		// Реквизиты
		Для Каждого Реквизит из МетаданныеОбъекта.Реквизиты Цикл
			ПроверитьЗаменитьЗначение(Запись[Реквизит.Имя]);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаменитьЗначение(Значение)
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначенияРеквизита = ТипЗнч(Значение);
	
	Если ТипЗначенияРеквизита = Тип("СправочникСсылка.Пользователи") Тогда
		
		Если ЗаменятьПользователей И ЗначениеЗаполнено(ЗначениеЗаменыПользователи) Тогда
			Значение = ЗначениеЗаменыПользователи;
		КонецЕсли;
		
	ИначеЕсли ТипЗначенияРеквизита = Тип("СправочникСсылка.ИсточникиИдей") Тогда
		
		Если ЗаменятьИсточникиИдей И ЗначениеЗаполнено(ЗначениеЗаменыИсточникиИдей) Тогда
			Значение = ЗначениеЗаменыИсточникиИдей;
		КонецЕсли;
		
	КонецЕсли;
				
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоляОбъекта(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных)
	
	Если Лев(ПолноеИмяОбъектаМетаданных, 11) = "Справочник." Тогда
		ИмяКласса = "Справочники";
	ИначеЕсли Лев(ПолноеИмяОбъектаМетаданных, 23) = "ПланВидовХарактеристик." Тогда
		ИмяКласса = "ПланыВидовХарактеристик";
	ИначеЕсли Лев(ПолноеИмяОбъектаМетаданных, 16) = "РегистрСведений." Тогда
		ИмяКласса = "РегистрыСведений";
	Иначе
		ИмяКласса = "";
	КонецЕсли;
	
	СтрокиКлассов = ДеревоМетаданных.ПолучитьЭлементы();
	Для Каждого СтрокаКласса из СтрокиКлассов Цикл
		Если СтрокаКласса.Имя = ИмяКласса Тогда
			Если СтрокаКласса.Отметка = 0 Тогда
				Возврат;
			Иначе
				СтрокиОбъектов = СтрокаКласса.ПолучитьЭлементы();
				
				Для Каждого СтрокаОбъекта из СтрокиОбъектов Цикл
					Если СтрокаОбъекта.Имя = ПолноеИмяОбъектаМетаданных Тогда
						Если СтрокаОбъекта.Отметка = 0 Тогда
							Возврат;
						Иначе
							СтрокиРеквизитовИТЧ = СтрокаОбъекта.ПолучитьЭлементы();
							
							Для Каждого Строка из СтрокиРеквизитовИТЧ Цикл
								Если Строка.ТабличнаяЧасть Тогда
									
									СтрокиРеквизитовТабличнойЧасти = Строка.ПолучитьЭлементы();
									
									Если Строка.Отметка = 1 И СтрокиРеквизитовТабличнойЧасти.Количество()=0 Тогда
										
										ОбъектВыгрузки[Строка.Имя].Очистить();
										
									ИначеЕсли Строка.Отметка <> 0 Тогда
										
										ТабличнаяЧастьОбъекта = ОбъектВыгрузки[Строка.Имя];
										
										Для Каждого СтрокаРеквизита из СтрокиРеквизитовТабличнойЧасти Цикл
											Если СтрокаРеквизита.Отметка = 1 Тогда
												Для Каждого СтрокаТабличнойЧастиОбъекта из ТабличнаяЧастьОбъекта Цикл
													СтрокаТабличнойЧастиОбъекта[СтрокаРеквизита.Имя] = Неопределено;
												КонецЦикла;
											КонецЕсли;
										КонецЦикла;
										
									КонецЕсли;
								Иначе
									Если Строка.Отметка = 1 Тогда
										Если ИмяКласса = "РегистрыСведений" Тогда
											Для Каждого Запись из ОбъектВыгрузки Цикл
												Запись[Строка.Имя] = Неопределено;	
											КонецЦикла;
										Иначе
											Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
												ОбъектВыгрузки[Строка.Имя] = Неопределено;
												ОчиститьСвязанныеРеквизиты(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных, Строка.Имя);
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							
							Возврат;
							
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСвязанныеРеквизиты(ОбъектВыгрузки, ПолноеИмяОбъектаМетаданных, ИмяРеквизита)
	
	Если ПолноеИмяОбъектаМетаданных = "Справочник.ВидыДоступа" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Ошибки" Тогда
		
		Если ИмяРеквизита = "ИсходнаяИнформацияОбОшибке" Тогда
			ОбъектВыгрузки["ХранилищеИсходнойИнформацииОбОшибке"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ПрофилиПользователей" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		ИначеЕсли ИмяРеквизита = "Заметки" Тогда
			ОбъектВыгрузки["ХранилищеЗаметок"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Проекты" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Процессы" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.СценарииРаботыПользователей" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ТехническиеПроекты" Тогда
		
		Если НЕ ОбъектВыгрузки.ЭтоГруппа Тогда
			
			Если ИмяРеквизита = "Заметки" Тогда
				ОбъектВыгрузки["ХранилищеЗаметок"] = Неопределено;
			ИначеЕсли ИмяРеквизита = "КонцепцияПроекта" Тогда
				ОбъектВыгрузки["ХранилищеКонцепции"] = Неопределено;
			ИначеЕсли ИмяРеквизита = "ЦелиПроекта" Тогда
				ОбъектВыгрузки["ХранилищеЦелей"] = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.Идеи" Тогда
		
		Если ИмяРеквизита = "ПодробноеОписание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ФункцииСистемы" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ПолноеИмяОбъектаМетаданных = "Справочник.ЦелевыеЗадачи" Тогда
		
		Если ИмяРеквизита = "Описание" Тогда
			ОбъектВыгрузки["ХранилищеОписания"] = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоМетаданных()
	
	ДеревоОбъектов = РеквизитФормыВЗначение("ДеревоМетаданных");
	ДеревоОбъектов.Строки.Очистить();
	
	МассивОбъектов = МассивОбъектовДляОчисткиПолей();
	
	Для Каждого ИмяОбъекта из МассивОбъектов Цикл
		
		МассивПолей = МассивОчищаемыхПолей(ИмяОбъекта);
		Если МассивПолей.Количество()>0 Тогда
			ДобавитьСтрокиДереваМетаданных(ДеревоОбъектов, ИмяОбъекта, МассивПолей);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоОбъектов, "ДеревоМетаданных");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиДереваМетаданных(ДеревоОбъектов, ИмяОбъекта, МассивПолей)
	
	ИндексКартинкиОбъекта = 999;
	
	Если Лев(ИмяОбъекта, 11) = "Справочник." Тогда
		
		СтрокаКласса = СтрокаКласса(ДеревоОбъектов, "Справочники");
		ИндексКартинкиОбъекта = 32;
		
	ИначеЕсли Лев(ИмяОбъекта, 23) = "ПланВидовХарактеристик." Тогда
		
		СтрокаКласса = СтрокаКласса(ДеревоОбъектов, "ПланыВидовХарактеристик");
		ИндексКартинкиОбъекта = 38;
		
	ИначеЕсли Лев(ИмяОбъекта, 16) = "РегистрСведений." Тогда
		
		СтрокаКласса = СтрокаКласса(ДеревоОбъектов, "РегистрыСведений");
		ИндексКартинкиОбъекта = 75;
		
	КонецЕсли;
	
	ДобавитьСтрокиОбъекта(СтрокаКласса, ИмяОбъекта, МассивПолей, ИндексКартинкиОбъекта);
	
КонецПроцедуры

&НаСервере
Функция СтрокаКласса(ДеревоОбъектов, ИмяКласса)
	
	СтруктураОтбора = Новый Структура("Имя", ИмяКласса);
	
	МассивСтрок = ДеревоОбъектов.Строки.НайтиСтроки(СтруктураОтбора);
	
	Если МассивСтрок.Количество()>0 Тогда
		Строка = МассивСтрок[0];
	Иначе
		Строка = ДеревоОбъектов.Строки.Добавить();
		Строка.Имя = ИмяКласса;
		
		Если ИмяКласса = "Справочники" Тогда
			Строка.Представление = "Справочники";
			Строка.ИндексКартинки = 4;
		ИначеЕсли ИмяКласса = "ПланыВидовХарактеристик" Тогда
			Строка.Представление = "Планы видов характеристик";
			Строка.ИндексКартинки = 10;
		ИначеЕсли ИмяКласса = "РегистрыСведений" Тогда
			Строка.Представление = "Регистры сведений";
			Строка.ИндексКартинки = 13;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Строка;
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокиОбъекта(СтрокаКласса, ИмяОбъекта, МассивПолей, ИндексКартинкиОбъекта)
	
	СтрокаОбъекта = СтрокаКласса.Строки.Добавить();
	СтрокаОбъекта.Имя = ИмяОбъекта;
	СтрокаОбъекта.ИндексКартинки = ИндексКартинкиОбъекта;
	
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	ПозицияТочки = Найти(ИмяОбъекта, ".");
	Если ПозицияТочки>0 Тогда
		СокращенноеИмяОбъекта = Сред(ИмяОбъекта, ПозицияТочки+1);
		СтрокаОбъекта.Представление = СокращенноеИмяОбъекта;
	КонецЕсли;
	
	Для Каждого ИмяПоля из МассивПолей Цикл
		
		ПозицияТочки = Найти(ИмяПоля, ".");
		Если ПозицияТочки>0 Тогда
			
			ИмяТабличнойЧасти = Лев(ИмяПоля, ПозицияТочки-1);
			ИмяПоляТабличнойЧасти = Сред(ИмяПоля, ПозицияТочки+1);
			
			СтруктураОтбора = Новый Структура("Имя", ИмяТабличнойЧасти);
			МассивСтрок = СтрокаОбъекта.Строки.НайтиСтроки(СтруктураОтбора);
			
			Если МассивСтрок.Количество()>0 Тогда
				СтрокаТабличнойЧасти = МассивСтрок[0];
			Иначе
				СтрокаТабличнойЧасти = СтрокаОбъекта.Строки.Добавить();
				СтрокаТабличнойЧасти.Имя = ИмяТабличнойЧасти;
				СтрокаТабличнойЧасти.Представление = ИмяТабличнойЧасти;
				СтрокаТабличнойЧасти.ИндексКартинки = 55;
				СтрокаТабличнойЧасти.ТабличнаяЧасть = Истина;
			КонецЕсли;
			
			СтрокаПоляТабличнойЧасти = СтрокаТабличнойЧасти.Строки.Добавить();
			СтрокаПоляТабличнойЧасти.Имя = ИмяПоляТабличнойЧасти;
			СтрокаПоляТабличнойЧасти.Представление = ИмяПоляТабличнойЧасти;
			СтрокаПоляТабличнойЧасти.ИндексКартинки = 53;
		Иначе
			СтрокаПоля = СтрокаОбъекта.Строки.Добавить();
			СтрокаПоля.Имя = ИмяПоля;
			СтрокаПоля.Представление = ИмяПоля;
			
			Если (СтрокаКласса.Имя = "Справочники" ИЛИ СтрокаКласса.Имя = "ПланыВидовХарактеристик") Тогда
				Для Каждого ТабличнаяЧасть из МетаданныеОбъекта.ТабличныеЧасти Цикл
					Если ТабличнаяЧасть.Имя = СтрокаПоля.Имя Тогда
						СтрокаПоля.ТабличнаяЧасть = Истина;
						СтрокаПоля.ИндексКартинки = 55;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
				
			Если Не ЗначениеЗаполнено(СтрокаПоля.ИндексКартинки) Тогда
				СтрокаПоля.ИндексКартинки = 53;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция МассивОбъектовДляОчисткиПолей()
	
	Массив = Новый Массив;
	
	Массив.Добавить("Справочник.ВерсииПроекта");
	Массив.Добавить("Справочник.Ветки");
	Массив.Добавить("Справочник.ВидыДоступа");
	Массив.Добавить("Справочник.ВидыСогласуемыхРесурсов");
	Массив.Добавить("Справочник.ЗадачиПроцесса");
	Массив.Добавить("Справочник.ЗадачиШаблонаПроцесса");
	Массив.Добавить("Справочник.Идеи");
	Массив.Добавить("Справочник.ОбъектыМетаданных");
	Массив.Добавить("Справочник.ОбщиеЗадачи");
	Массив.Добавить("Справочник.Ошибки");
	Массив.Добавить("Справочник.Подразделения");
	Массив.Добавить("Справочник.Подсистемы");
	Массив.Добавить("Справочник.Проекты");
	Массив.Добавить("Справочник.ПрофилиПользователей");
	Массив.Добавить("Справочник.Процессы");
	Массив.Добавить("Справочник.Регламенты");
	Массив.Добавить("Справочник.СборкиВерсии");
	Массив.Добавить("Справочник.СценарииРаботыПользователей");
	Массив.Добавить("Справочник.ТехническиеПроекты");
	Массив.Добавить("Справочник.ФункцииМеханизмов");
	Массив.Добавить("Справочник.ФункцииСистемы");
	Массив.Добавить("Справочник.ЦелевыеЗадачи");
	Массив.Добавить("Справочник.ШаблоныПроцесса");
	Массив.Добавить("Справочник.ШагиПроцесса");
	Массив.Добавить("Справочник.ШагиСценариевПользователя");
	Массив.Добавить("РегистрСведений.ПраваДоступаКОбъектамМетаданных");
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция МассивОчищаемыхПолей(ИмяОбъекта)
	
	Массив = Новый Массив;
	
	Если ИмяОбъекта = "Справочник.ВерсииПроекта" Тогда
		
		Массив.Добавить("ВерсияПлатформы");
		Массив.Добавить("ВерсияПлатформыХранилища");
		Массив.Добавить("Ветка");
		Массив.Добавить("ДатаВключенияБиблиотек");
		Массив.Добавить("ДатаГотовностиКПредварительномуВстраиванию");
		Массив.Добавить("ДатаНачалаВнешнегоТестирования");
		Массив.Добавить("ДатаНачалаРазработки");
		Массив.Добавить("ДатаОкончанияРазработки");
		Массив.Добавить("ДатаПредстоящейСборки");
		Массив.Добавить("ДатаПрекращенияПоддержки");
		Массив.Добавить("ПлановаяДатаВыпуска");
		Массив.Добавить("ИмяПользователяИБДляЗагрузкиМетаданных");
		Массив.Добавить("ИмяПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("КаталогИБДляЗагрузкиМетаданных");
		Массив.Добавить("ПарольПользователяИБДляЗагрузкиМетаданных");
		Массив.Добавить("ПарольПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("ВерсииВключаемыхПроектов.Комментарий");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Ветки" Тогда
		
		Массив.Добавить("Имя");
		Массив.Добавить("НастройкаЗапускаТестирования");
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ВидыДоступа" Тогда
		
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ВидыСогласуемыхРесурсов" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("ЕдиницаИзмерения");
		Массив.Добавить("НастройкиСогласования");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ЗадачиПроцесса" Тогда
		
		Массив.Добавить("ВидДеятельности");
		Массив.Добавить("Описание");
		Массив.Добавить("ПлановаяДатаНачала");
		Массив.Добавить("ПлановаяДлительность");
		Массив.Добавить("КрайняяДатаОкончания");
		Массив.Добавить("ТекстПоследнегоПоручения");
		Массив.Добавить("ПротоколВзаимодействия.ТекстПоручения");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ЗадачиШаблонаПроцесса" Тогда
		
		Массив.Добавить("ВидДеятельности");
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Идеи" Тогда
		
		Массив.Добавить("ДатаЗакрытия");
		Массив.Добавить("ПодробноеОписание");
		Массив.Добавить("Комментарий");
		Массив.Добавить("Тематика");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ОбщиеЗадачи" Тогда
		
		Массив.Добавить("ЗапланироватьНеПозднее");
		Массив.Добавить("ВыполнитьНеПозднее");
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ОбъектыМетаданных" Тогда
		
		Массив.Добавить("Поставщик");
		Массив.Добавить("ПравилоПоддержки");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Ошибки" Тогда
		
		Массив.Добавить("ВидПроблемы");
		Массив.Добавить("ГдеИсправленаОшибка");
		Массив.Добавить("ИнформационнаяБазаДляВоспроизведения");
		Массив.Добавить("ИсходнаяИнформацияОбОшибке");
		Массив.Добавить("КодОбращения");
		Массив.Добавить("КтоПривнес");
		Массив.Добавить("ОбработчикиОбновления");
		Массив.Добавить("ОписаниеИзменений");
		Массив.Добавить("ПовторяемаяОшибка");
		Массив.Добавить("ПорядокВоспроизведения");
		Массив.Добавить("ПричиныНепризнания");
		Массив.Добавить("Протокол.Комментарий");
		Массив.Добавить("ПубликуемоеОписание");
		Массив.Добавить("СписокОбъектов");
		Массив.Добавить("СпособИсправления");
		Массив.Добавить("СпособОбхода");
		Массив.Добавить("Стандарт");
		Массив.Добавить("СценарийПользователя");
		Массив.Добавить("ТекстПоследнегоПоручения");
		Массив.Добавить("Тест");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Подразделения" Тогда
		
		Массив.Добавить("Руководитель");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Подсистемы" Тогда
		
		Массив.Добавить("Поставщик");
		Массив.Добавить("ПравилоПоддержки");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Проекты" Тогда
		
		Массив.Добавить("АдресGitСервера");
		Массив.Добавить("ВерсияПлатформы");
		Массив.Добавить("ВерсияПлатформыХранилищаТехническихПроектов");
		Массив.Добавить("Ветка");
		Массив.Добавить("ВидДеятельности");
		Массив.Добавить("ВключаемыеПроекты");
		Массив.Добавить("ЗакрывающийОшибки");
		Массив.Добавить("ИмяВеткиДляВыгрузкиСправки");
		Массив.Добавить("ИмяПользователяИБДляЗагрузкиМетаданных");
		Массив.Добавить("ИмяПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("ИнструкцияПоПроверкеПатча");
		Массив.Добавить("ИспользуемыеРазделыВключаемыхПроектов");
		Массив.Добавить("КаталогGitРепозитория");
		Массив.Добавить("КаталогGitРепозиторияДляПатчей");
		Массив.Добавить("КаталогИБДляЗагрузкиМетаданных");
		Массив.Добавить("КаталогИБПрикладываемыхКОшибкам");
		Массив.Добавить("КаталогТестовВРепозитории");
		Массив.Добавить("КаталогХранилищТехническихПроектов");
		Массив.Добавить("КонфигурацииРазрабатываемыеВПроекте");
		Массив.Добавить("МодулиОбновленияИнформационнойБазы");
		Массив.Добавить("НормаДлительностиОтработкиПоручений");
		Массив.Добавить("НормыДлительностиОтработкиОшибок.Норма");
		Массив.Добавить("Описание");
		Массив.Добавить("Ответственный");
		Массив.Добавить("ОтветственныйЗаМетаданныеПоУмолчанию");
		Массив.Добавить("ПарольПользователяИБДляЗагрузкиМетаданных");
		Массив.Добавить("ПарольПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("ПодсистемыВходящиеВКонфигурацию");
		Массив.Добавить("ПользовательАвторСообщенийСистемыВзаимодействия");
		Массив.Добавить("ПорядокВоспроизведенияИИсправленияОшибок");
		Массив.Добавить("ПроверяющийОшибки");
		Массив.Добавить("ПутьКПроектуВРепозитории");
		Массив.Добавить("РасположениеДистрибутивов");
		Массив.Добавить("РегламентноеЗаданиеСинхронизацииКонфигурацииGUID");
		Массив.Добавить("РегламентноеЗаданиеСообщенийПоОшибкамGUID");
		Массив.Добавить("РегламентноеЗаданиеЗагрузкиИзмененийВВеткахGUID");
		Массив.Добавить("СлотыТестирования");
		Массив.Добавить("СогласующийТрудозатратыПоЗадачам");
		Массив.Добавить("ТекстПредупрежденияНеУказанКтоПривнес");
		Массив.Добавить("ХранилищеШаблонаОписанияТехническогоПроекта");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ПрофилиПользователей" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("Заметки");
		Массив.Добавить("ВидыДоступа.Комментарии");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Процессы" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("Заметки");
		
	ИначеЕсли ИмяОбъекта = "Справочник.Регламенты" Тогда
		
		Массив.Добавить("Содержание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.СборкиВерсии" Тогда
		
		Массив.Добавить("ПричиныВыпуска");
		Массив.Добавить("РасположениеДистрибутива");
		Массив.Добавить("РасположениеПубликации");
		
	ИначеЕсли ИмяОбъекта = "Справочник.СценарииРаботыПользователей" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("ХранилищеСхемаBPMN");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ТехническиеПроекты" Тогда
		
		Массив.Добавить("Ветка");
		Массив.Добавить("ВидДеятельности");
		Массив.Добавить("Заметки");
		Массив.Добавить("КонцепцияПроекта");
		Массив.Добавить("ЦелиПроекта");
		Массив.Добавить("ИмяБазовойВетки");
		Массив.Добавить("КаталогДемонстрационнойБазы");
		Массив.Добавить("ИмяПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("ПарольПользователяХранилищаДляЗагрузкиМетаданных");
		Массив.Добавить("ХранилищеОписания");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ФункцииМеханизмов" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("ИнструкцияПоВстраиванию");
		Массив.Добавить("ПрограммныйИнтерфейс");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ФункцииСистемы" Тогда
	
	    Массив.Добавить("Описание");
		Массив.Добавить("НаименованиеВИнтерфейсе");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ЦелевыеЗадачи" Тогда
		
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ШаблоныПроцесса" Тогда
		
		Массив.Добавить("Описание");
		
	ИначеЕсли ИмяОбъекта = "Справочник.ШагиПроцесса" Тогда
		
		Массив.Добавить("Описание");
		Массив.Добавить("Заметки");
		Массив.Добавить("ТребованияКСистеме");
		
	ИначеЕсли ИмяОбъекта = "РегистрСведений.ПраваДоступаКОбъектамМетаданных" Тогда
		
		Массив.Добавить("Комментарии");
		
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура УстановитьФлагиДочернихСтрок(РодительскийУзел, ЗначениеОтметки)
	
	СтрокиУзла = РодительскийУзел.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из СтрокиУзла Цикл
		СтрокаДерева.Отметка = ЗначениеОтметки;
		УстановитьФлагиДочернихСтрок(СтрокаДерева, ЗначениеОтметки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРодительскихУзлов(ТекущаяСтрока)
	
	УзелДерева = ТекущаяСтрока.ПолучитьРодителя();
	
	Если УзелДерева <> Неопределено Тогда
		
		ДочерниеУзлыРодителя = УзелДерева.ПолучитьЭлементы();
		
		ЕстьОтмеченные = Ложь;
		ЕстьНеотмеченные = Ложь;
		
		Для Каждого ДочернийУзел из ДочерниеУзлыРодителя Цикл
			Если ДочернийУзел.Отметка = 2 Тогда
				УзелДерева.Отметка = 2;
				Возврат;
			ИначеЕсли ДочернийУзел.Отметка = 1 Тогда
				ЕстьОтмеченные = Истина;
			Иначе
				ЕстьНеОтмеченные = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьОтмеченные И ЕстьНеОтмеченные Тогда
			УзелДерева.Отметка = 2;
		ИначеЕсли Не ЕстьНеОтмеченные Тогда
			УзелДерева.Отметка = 1;
		Иначе
			УзелДерева.Отметка = 0;
		КонецЕсли;
		
		УстановитьФлагиРодительскихУзлов(УзелДерева);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметкиРодительскихСтрок(ТекущаяСтрока, Отметка)

	СтрокаРодителя = ТекущаяСтрока.ПолучитьРодителя();
	
	Если СтрокаРодителя <> Неопределено Тогда
		 СтрокаРодителя.Отметка = Отметка;
		 УстановитьОтметкиРодительскихСтрок(СтрокаРодителя, Отметка);
	КонецЕсли;
	 
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	ИспользуютсяДополнительныеСведения = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	Элементы.ВыгружатьДополнительныеРеквизитыИСведения.Доступность = ИспользуютсяДополнительныеСведения;
	Элементы.ВыгружатьШагиСценариевПользователя.Доступность = ВыгружатьСценарииРаботыПользователей;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовПоХарактеристикамПроекта(Элементы, ВыгружатьХарактеристикиПроекта)
	
	Элементы.ВыгружатьОшибки.Доступность = ВыгружатьХарактеристикиПроекта;
	Элементы.ВыгружатьТехническиеПроекты.Доступность = ВыгружатьХарактеристикиПроекта;
	Элементы.ВыгружатьФункцииМеханизмов.Доступность = ВыгружатьХарактеристикиПроекта;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВыгрузкиШаговСценариев(Элементы, ВыгружатьСценарииРаботыПользователей)
	
	Элементы.ВыгружатьШагиСценариевПользователя.Доступность = ВыгружатьСценарииРаботыПользователей;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИдеиВТехническихПроектах(ОбъектВыгрузки, ОчищатьИдеи, ОчищатьОшибки)
	
	МассивСтрок = Новый Массив;
	
	Для Каждого СтрокаТЧ из ОбъектВыгрузки.ИдеиИОшибки Цикл
		
		Если ОчищатьИдеи И ТипЗнч(СтрокаТЧ.Идея) = Тип("СправочникСсылка.Идеи") Тогда
			МассивСтрок.Добавить(СтрокаТЧ);
		КонецЕсли;
		
		Если ОчищатьОшибки И ТипЗнч(СтрокаТЧ.Идея) = Тип("СправочникСсылка.Ошибки") Тогда
			МассивСтрок.Добавить(СтрокаТЧ);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ из МассивСтрок Цикл
		ОбъектВыгрузки.ИдеиИОшибки.Удалить(СтрокаТЧ);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПодсистем()

	Если ЗначениеЗаполнено(Проект) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Подсистемы.Ссылка КАК Подсистема,
		|	Подсистемы.Имя КАК Имя,
		|	Подсистемы.Синоним КАК Синоним
		|ИЗ
		|	Справочник.Подсистемы КАК Подсистемы
		|ГДЕ
		|	Подсистемы.Владелец = &Проект
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подсистемы.Код ИЕРАРХИЯ"
		;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Проект", Проект);
		
		ДанныеПодсистем = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		ДеревоПодсистем.ПолучитьЭлементы().Очистить();
		
		ДобавитьСтрокиДереваПодсистем(ДеревоПодсистем.ПолучитьЭлементы(),ДанныеПодсистем.Строки);
	Иначе
		ДеревоПодсистем.ПолучитьЭлементы().Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПроекта()

	ЗаполнитьДеревоПодсистем();
	УстановитьДоступностьДереваПодсистем();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиДереваПодсистем(СтрокиКоллекции,СтрокиДерева)

	Для Каждого СтрокаДерева из СтрокиДерева Цикл
		
		НоваяСтрока = СтрокиКоллекции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
		
		ДобавитьСтрокиДереваПодсистем(НоваяСтрока.ПолучитьЭлементы(),СтрокаДерева.Строки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДереваПодсистем()
	
	ЭлементыДоступны = (ВариантФильтраВыгрузки<>0 И ЗначениеЗаполнено(Проект));
	Элементы.ДеревоПодсистем.Доступность = ЭлементыДоступны;
	
КонецПроцедуры

&НаСервере
Функция ИсключаемыеПодсистемы()

	ПодсистемыДляИсключения = Новый Массив;
	ЗаполнитьИсключаемыеПодсистемы(ПодсистемыДляИсключения, ДеревоПодсистем.ПолучитьЭлементы());
	
	Возврат ПодсистемыДляИсключения;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИсключаемыеПодсистемы(ПодсистемыДляИсключения, СтрокиДерева)

	Для Каждого СтрокаДерева из СтрокиДерева Цикл
		Если СтрокаДерева.Отметка Тогда
			ПодсистемыДляИсключения.Добавить(СтрокаДерева.Подсистема);
		КонецЕсли;
		ЗаполнитьИсключаемыеПодсистемы(ПодсистемыДляИсключения, СтрокаДерева.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
