
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	ОбработатьПереданныеПараметры(Отказ);
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура ПодразделенияСотрудникиВыбранПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ПодразделенияСотрудники.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РодительскаяСтрока = ТекущиеДанные.ПолучитьРодителя();
	
	Если РодительскаяСтрока = Неопределено Тогда
		
		Если ТекущиеДанные.Выбран = 2 Тогда
			
			ТекущиеДанные.Выбран = 0
			
		КонецЕсли;
		
		Для Каждого ПодчиненнаяСтрока Из ТекущиеДанные.ПолучитьЭлементы() Цикл
			
			ПодчиненнаяСтрока.Выбран = ТекущиеДанные.Выбран;
			
		КонецЦикла;
		
	Иначе
		
		Если ТекущиеДанные.Выбран = 2 Тогда
			ТекущиеДанные.Выбран = 0;
		КонецЕсли;
		
		ЕстьВыбранные   = Ложь;
		ЕстьНеВыбранные = Ложь;
		
		Для Каждого ПодчиненнаяСтрока Из РодительскаяСтрока.ПолучитьЭлементы() Цикл
			
			Если ПодчиненнаяСтрока.Выбран Тогда
				ЕстьВыбранные = Истина;
			Иначе
				ЕстьНеВыбранные = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьВыбранные
			И ЕстьНеВыбранные Тогда
			
			РодительскаяСтрока.Выбран = 2;
			
		ИначеЕсли ЕстьВыбранные Тогда
			
			РодительскаяСтрока.Выбран = 1;
			
		Иначе
			
			РодительскаяСтрока.Выбран = 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияСотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.ПодразделенияСотрудники.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭтоРежимВыбора Тогда
		
		ПриВыбореУчастникаДляЭтапа(ТекущиеДанные);
		
	Иначе
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
			ПоказатьЗначение( ,ТекущиеДанные.Сотрудник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредставлениеЭтапаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьЭтапДляКоторогоПодбирается" Тогда
		
		ПоказатьЗначение(, ЭтапДляКоторогоПодбирается);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОчиститьСообщения();
	
	Если ЭтоРежимВыбора Тогда
		
		ТекущиеДанные = Элементы.ПодразделенияСотрудники.ТекущиеДанные;
	
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПриВыбореУчастникаДляЭтапа(ТекущиеДанные);
		
	Иначе
		
		Закрыть(СтруктураВозврата());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ИзменитьВсеФлажки(Истина);

КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	ИзменитьВсеФлажки(Ложь);
	
КонецПроцедуры 

&НаКлиенте
Процедура РазвернутьСтрокиПодбора(Команда)
	
	Для Каждого РодительскаяСтрока Из ПодразделенияСотрудники.ПолучитьЭлементы() Цикл
		
		Элементы.ПодразделенияСотрудники.Развернуть(РодительскаяСтрока.ПолучитьИдентификатор());
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьСтрокиПодбора(Команда)
	
	Для Каждого РодительскаяСтрока Из ПодразделенияСотрудники.ПолучитьЭлементы() Цикл
		
		Элементы.ПодразделенияСотрудники.Свернуть(РодительскаяСтрока.ПолучитьИдентификатор());
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)
	
	Если Параметры.РежимВыбора Тогда
		
		ЭтоРежимВыбора = Истина;
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если ЭтоРежимВыбора Тогда
	
		Если ЗначениеЗаполнено(Параметры.ЗадачаПроцесса) Тогда
		
			ЭтапДляКоторогоПодбирается = Параметры.ЗадачаПроцесса;
			ТехническийПроект          = Параметры.ТехническийПроект;
			
			СформироватьПредставлениеЭтапа();
			
		Иначе
			
			Отказ = Истина;
			Возврат;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.СписокУчастников.Количество() > 0 Тогда
		
		ПараметрыЗаполнения = Планирование.НовыйПараметрыЗаполненияДеревоСотрудниковПодразделений();
		ПараметрыЗаполнения.ЗаполняемоеДерево = ПодразделенияСотрудники;
		ПараметрыЗаполнения.СписокУчастников  = Параметры.СписокУчастников;
		ПараметрыЗаполнения.ЭтоДанныеФормы    = Истина; 
		
		Если ЭтоРежимВыбора
			И ТипЗнч(Параметры.ИдентификаторыОтображаемыхПланов) = Тип("Массив")
			И Параметры.ИдентификаторыОтображаемыхПланов.Количество() > 0 Тогда
			
			ПараметрыЗаполнения.РаботаДляПоискаВПланах  = ЭтапДляКоторогоПодбирается;
			ПараметрыЗаполнения.ИдентификаторыПланов    = Параметры.ИдентификаторыОтображаемыхПланов; 
			
		КонецЕсли;
		
		Планирование.ЗаполнитьДеревоСотрудниковПодразделений(ПараметрыЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеЭтапа()
	
	Если ЗначениеЗаполнено(ТехническийПроект) Тогда
		
		ПредставлениеЭтапа = СтрШаблон("%1 (%2)", ЭтапДляКоторогоПодбирается, ТехническийПроект);
		
	Иначе
		
		ПредставлениеЭтапа = Строка(ЭтапДляКоторогоПодбирается);
		
	КонецЕсли;
	
	Элементы.ДекорацияПредставлениеЭтапа.Заголовок = 
		СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = '%1 <a href=""ОткрытьЭтапДляКоторогоПодбирается"">%2</a>'"),
		                                            НСтр("ru = 'Для этапа:'"),
		                                            ПредставлениеЭтапа);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ПодразделенияСотрудникиВыбран.Видимость = Не Форма.ЭтоРежимВыбора;
	Элементы.ДекорацияПредставлениеЭтапа.Видимость   = Форма.ЭтоРежимВыбора;
	Элементы.ФормаВыбратьВсе.Видимость               = Не Форма.ЭтоРежимВыбора;
	Элементы.ФормаСнятьВсе.Видимость                 = Не Форма.ЭтоРежимВыбора;
	
	Элементы.ФормаОК.Заголовок = ?(Форма.ЭтоРежимВыбора, НСтр("ru = 'Выбрать'"), НСтр("ru = 'ОК'"))
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВсеФлажки(Установить)

	Для Каждого СтрокаПодразделение Из ПодразделенияСотрудники.ПолучитьЭлементы() Цикл
		
		СтрокаПодразделение.Выбран = ?(Установить, 1, 0);
		
		Для Каждого СтрокаСотрудник Из СтрокаПодразделение.ПолучитьЭлементы() Цикл
			
			СтрокаСотрудник.Выбран = ?(Установить, 1, 0);
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция СтруктураВозврата()
	
	Возврат Планирование.ВыбранныеСотрудникиПоДеревуПодразделенийСотрудников(ПодразделенияСотрудники, Истина);
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	// Сотрудники, у которых этап уже есть в планах
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодразделенияСотрудники.Имя);
	
	ГруппаЭлементовОтбора =  Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	
	ОтборЭлемента = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЭтоРежимВыбора");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПодразделенияСотрудники.Выбран");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПодразделенияСотрудники.ЭтоГруппировка");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыйДокумент); 
	
	// Группировка сотрудников без подразделения
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодразделенияСотрудникиСотрудник.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПодразделенияСотрудники.Сотрудник");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Подразделения.ПустаяСсылка();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Без подразделения>'"));

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореУчастникаДляЭтапа(ДанныеСтроки)
	
	Если ДанныеСтроки.ЭтоГруппировка Тогда
		
		ТекстСообщения = НСтр("ru = 'Необходимо выбрать участника плана а не подразделение.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	Если ДанныеСтроки.Выбран = 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'Этап уже есть в планах выбираемого участника.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	Закрыть(ДанныеСтроки.Сотрудник);
	
КонецПроцедуры

#КонецОбласти
