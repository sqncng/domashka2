

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработатьПереданныеПараметры();
	ИнициализироватьДанныеФормы();
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Закрыть(РезультатРедактирования());
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработатьПереданныеПараметры()

	ГруппировкаПлана                            = Параметры.Группировка;
	ДатаСтатуса                                 = Параметры.ДатаСтатуса;
	Комментарий                                 = Параметры.Комментарий;
	ПлановыеТрудозатраты                        = Параметры.ПланируемыеТрудозатраты;
	Работа                                      = Параметры.Работа;
	РедактированиеПлановыхТрудозатратНедоступно = Параметры.РедактированиеПлановыхТрудозатратНедоступно ;
	Сотрудник                                   = Параметры.Сотрудник;
	СрокВыполнения                              = Параметры.СрокВыполнения;
	Статус                                      = Параметры.Статус;
	ТекстДанныеЧасовПоЗадаче                    = Параметры.ТекстДанныеЧасовПоЗадаче;
	Цель                                        = Параметры.Цель;
	ЭтоВладелецПлана                            = Параметры.ЭтоВладелецПлана;
	СтатусТехническогоПроекта                   = Параметры.СтатусТехническогоПроекта;
	СрокВыполненияТехническогоПроекта           = Параметры.СрокВыполненияТехническогоПроекта;
	ДатаСтатусаТехническогоПроекта              = Параметры.ДатаСтатусаТехническогоПроекта;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)

	ЭлементыФормы = Форма.Элементы;
	
	ЭлементыФормы.Комментарий.Видимость                            = Форма.ЭтоВладелецПлана;
	ЭлементыФормы.ГруппаГруппировка.Видимость                      = Форма.ЕстьГруппировкаПлана;
	ЭлементыФормы.ГруппаПлановыеТрудозатраты.Видимость             = Не Форма.РедактированиеПлановыхТрудозатратНедоступно;
	ЭлементыФормы.ГруппаРабота.Видимость                           = ЗначениеЗаполнено(Форма.Работа);
	ЭлементыФормы.ДекорацияСостояниеТехническогоПроекта.Видимость  = Не ПустаяСтрока(ЭлементыФормы.ДекорацияСостояниеТехническогоПроекта.Заголовок);
	ЭлементыФормы.ДекорацияГруппировкаПустая.Видимость             = Не ПустаяСтрока(ЭлементыФормы.ДекорацияСостояниеТехническогоПроекта.Заголовок);
	ЭлементыФормы.ДекорацияСостояниеРабота.Видимость               = Не ПустаяСтрока(ЭлементыФормы.ДекорацияСостояниеРабота.Заголовок);
	ЭлементыФормы.ДекорацияПустаяРабота.Видимость                  = Не ПустаяСтрока(ЭлементыФормы.ДекорацияСостояниеРабота.Заголовок);
	
	Если ТипЗнч(Форма.Работа) = Тип("СправочникСсылка.ВидыДеятельности") Тогда
		ЭлементыФормы.Работа.Гиперссылка = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Форма.ГруппировкаПлана) = Тип("СправочникСсылка.ВидыДеятельности")
		Или ТипЗнч(Форма.ГруппировкаПлана) = Тип("ПеречислениеСсылка.ТипыГруппировокСтрокПлана") Тогда
		
		ЭлементыФормы.ГруппировкаПлана.Гиперссылка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	ТолькоСотрудник = Не ЗначениеЗаполнено(Работа) И Не ЗначениеЗаполнено(ГруппировкаПлана);
	
	ЕстьГруппировкаПлана = (ЗначениеЗаполнено(Работа) Или ЗначениеЗаполнено(ГруппировкаПлана))
	                        И Работа <> ГруппировкаПлана;
	
	Если ЗначениеЗаполнено(Работа) Тогда
		Если ТипЗнч(Работа) = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
			Элементы.ДекорацияЗаголовокРаботы.Заголовок = НСтр("ru = 'Технический проект:'");
			ЗаполнитьСостояниеРаботы("ДекорацияСостояниеРабота", Статус, ДатаСтатуса, СрокВыполнения, ТипЗнч(Работа));
		ИначеЕсли ТипЗнч(Работа) = Тип("СправочникСсылка.Ошибки") Тогда
			Элементы.ДекорацияЗаголовокРаботы.Заголовок = НСтр("ru = 'Ошибка:'");
			ЗаполнитьСостояниеРаботы("ДекорацияСостояниеРабота", Статус, ДатаСтатуса, СрокВыполнения, ТипЗнч(Работа));
		ИначеЕсли ТипЗнч(Работа) = Тип("СправочникСсылка.ВидыДеятельности") Тогда
			Элементы.ДекорацияЗаголовокРаботы.Заголовок = НСтр("ru = 'Вид деятельности:'");
		ИначеЕсли ТипЗнч(Работа) = Тип("СправочникСсылка.ЗадачиПроцесса") Тогда
			Элементы.ДекорацияЗаголовокРаботы.Заголовок = НСтр("ru = 'Задача:'");
			ЗаполнитьСостояниеРаботы("ДекорацияСостояниеРабота", Статус, ДатаСтатуса, СрокВыполнения, ТипЗнч(Работа));
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьГруппировкаПлана Тогда
		Если Работа = Неопределено
			И ГруппировкаПлана = Перечисления.ТипыГруппировокСтрокПлана.РаботаСОшибками Тогда
			Элементы.ДекорацияЗаголовокГруппировки.Заголовок = НСтр("ru = 'Вид деятельности:'");
		ИначеЕсли ТипЗнч(ГруппировкаПлана) = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
			Элементы.ДекорацияЗаголовокГруппировки.Заголовок = НСтр("ru = 'Технический проект:'");
			Если ЗначениеЗаполнено(Работа) Тогда
				ЗаполнитьСостояниеРаботы("ДекорацияСостояниеТехническогоПроекта", 
				                         СтатусТехническогоПроекта, 
				                         ДатаСтатусаТехническогоПроекта, 
				                         СрокВыполненияТехническогоПроекта,
				                         ТипЗнч(ГруппировкаПлана));
			Иначе
				ЗаполнитьСостояниеРаботы("ДекорацияСостояниеТехническогоПроекта",
				                         Статус,
				                         ДатаСтатуса, 
				                         СрокВыполнения,
				                         ТипЗнч(ГруппировкаПлана));
			КонецЕсли;
		Иначе
			Элементы.ДекорацияЗаголовокГруппировки.Заголовок = НСтр("ru = 'Группировка:'");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстДанныеЧасовПоЗадаче) Тогда
		ОстатокПлановыхЧасов = СтрШаблон(НСтр("ru = 'Остаток: %1 ч.'"), ТекстДанныеЧасовПоЗадаче);
		Элементы.ДекорацияОстатокЧасовПоРаботе.Заголовок = ОстатокПлановыхЧасов;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостояниеРаботы(ИмяДекорации, СтатусРаботы, ДатаСтатусаРаботы, СрокВыполненияРаботы, ТипРаботы)
	
	ШрифтСостояния = Новый Шрифт(,8,,Истина);
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	
	СостояниеРаботы = Строка(СтатусРаботы);
	СтрокаСрокВыполнения  = "";
	
	Если Не ПустаяСтрока(СостояниеРаботы)
		И ЗначениеЗаполнено(ДатаСтатусаРаботы) Тогда
		СостояниеРаботы = СостояниеРаботы + "(" + Формат(ДатаСтатусаРаботы, "ДЛФ=D")+")";
	КонецЕсли;
	
	СостояниеРаботы = Новый ФорматированнаяСтрока(СостояниеРаботы, ШрифтСостояния);
	
	Если ЗначениеЗаполнено(СрокВыполненияРаботы) Тогда
		
		ЦветСрокаВыполнения = Неопределено;
		
		Если ТекущаяДата > СрокВыполненияРаботы Тогда
			ЦветСрока = ЦветаСтиля.ЗонаЗадачиКрасный;
		ИначеЕсли ТекущаяДата = СрокВыполненияРаботы Тогда
			ЦветСрока = ЦветаСтиля.ЗонаЗадачиЖелтый;
		КонецЕсли;
		
		Если ТипРаботы = Тип("СправочникСсылка.Ошибки") Тогда
			ТекстДействие = НСтр("ru = 'Исправить'");
		Иначе
			ТекстДействие = НСтр("ru = 'Выполнить'");
		КонецЕсли;
		
		СтрокаСрокВыполнения = СтрШаблон(НСтр("ru = '%1 к %2'"), ТекстДействие, Формат(СрокВыполненияРаботы, "ДЛФ=D"));
		
		СтрокаСрокВыполнения = Новый ФорматированнаяСтрока(СтрокаСрокВыполнения, ШрифтСостояния, ЦветСрока);
		СтрокаСрокВыполнения = Новый ФорматированнаяСтрока(", ", СтрокаСрокВыполнения);
		
	КонецЕсли;
	
	Элементы[ИмяДекорации].Заголовок = Новый ФорматированнаяСтрока(СостояниеРаботы, СтрокаСрокВыполнения);
	
КонецПроцедуры

&НаКлиенте
Функция РезультатРедактирования()

	Результат = Новый Структура;
	Результат.Вставить("Цель",                    Цель);
	Результат.Вставить("Комментарий",             Комментарий);
	Результат.Вставить("ПланируемыеТрудозатраты", ПлановыеТрудозатраты);
	
	Возврат Результат;

КонецФункции

#КонецОбласти
