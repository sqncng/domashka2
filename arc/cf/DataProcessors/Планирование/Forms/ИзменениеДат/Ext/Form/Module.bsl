 
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьДанныеФормы();
	ОбработатьПереданныеПараметры(Отказ);
	УстановитьУсловноеОформление();
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодготовитьДанныеТехПроектаКИзменениюДат(ПараметрыПолученияДанных());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИзменитьДатуТехПроектаПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыЭтапы

&НаКлиенте
Процедура ЭтапыИзменитьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Этапы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Изменить Тогда
		ТекущиеДанные.НоваяДата = ТекущиеДанные.ДатаОкончанияПоПланамЗанятости;
	Иначе
		ТекущиеДанные.НоваяДата = ТекущиеДанные.ДатаОкончанияУказаннаяВЭтапе;
	КонецЕсли;
	
	СформироватьПредставлениеДатыТехническогоПроекта();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыНоваяДатаПриИзменении(Элемент)
	
	СформироватьПредставлениеДатыТехническогоПроекта();
	
КонецПроцедуры 

#КонецОбласти

#Область КомандыФормы
 
&НаКлиенте
Процедура ИзменитьДаты(Команда)
	
	Закрыть(СтруктураВозвратаИзмененийДат());

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриСозданииНаСервере

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	КартинкаВосклицательныйЗнак = БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	ПланированиеКлиентСервер.УстановитьСостояниеОбновляется(Элементы.ИдетОбновление, БиблиотекаКартинок.ДлительнаяОперация48);
	Элементы.ФормаИзменитьДаты.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры(Отказ)
	
	Если Не ЗначениеЗаполнено(Параметры.ТехническийПроект) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан технический проект этапа, для которого будет выполнено распределение.'"),,,, Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ДатаНачалаПериодаПланирования) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана дата начала периода планирования.'"),,,, Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВидПлана) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан вид плана.'"),,,, Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВидСогласуемогоРесурсаПлановыхРабот) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан вид планируемого ресурса.'"),,,, Отказ);
	КонецЕсли;
		
	ТехническийПроект                             = Параметры.ТехническийПроект;
	ДатаНачалаПериодаПланирования                 = Параметры.ДатаНачалаПериодаПланирования;
	ВидПлана                                      = Параметры.ВидПлана;
	ПороговоеЗначениеОтображениеЭтапПланЗанятости = Параметры.ПороговоеЗначениеОтображениеЭтапПланЗанятости;
	ВидСогласуемогоРесурсаПлановыхРабот           = Параметры.ВидСогласуемогоРесурсаПлановыхРабот;
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьЗаголовокФормы()

	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Строка(ТехническийПроект), " ");
	
	НаименованиеТехПроекта = "";
	
	Для Каждого ПодстрокаНаименования Из МассивПодстрок Цикл
		
		Если СтрДлина(НаименованиеТехПроекта) + СтрДлина(ПодстрокаНаименования) > 50 Тогда
			НаименованиеТехПроекта = НаименованиеТехПроекта + "...";
			Прервать;
		Иначе
			НаименованиеТехПроекта = НаименованиеТехПроекта + " " + ПодстрокаНаименования;
		КонецЕсли;
		
	КонецЦикла;
	
	Заголовок = СтрШаблон("%1 ""%2""", Заголовок , НаименованиеТехПроекта);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//Нераспределено больше 0
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭтапыНераспределено.Имя);
	
	ЭлементОтбора =  Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Этапы.Нераспределено");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗонаЗадачиКрасный); 
	
	//Резерв больше 0
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭтапыРезерв.Имя);
	
	ЭлементОтбора =  Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Этапы.Резерв");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылкиЗадачи);
	
	//Вариант изменения - возможно редактировать дату
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭтапыНоваяДата.Имя);
	
	ЭлементОтбора =  Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Этапы.Изменять");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.ВариантыРаспределенияРаботПланЗанятости.Изменять;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьДанныеТехПроектаКИзменениюДат(ПараметрыПолучения)
	
	ОчиститьСообщения();
	
	ОчиститьПолучаемыеДанные();
	
	Элементы.СтраницыОбновляетсяОбновлено.ТекущаяСтраница = Элементы.СтраницаОбновляется;
	
	ДлительнаяОперация = ВыполнитьПодготовкуДанныеДатДлительнаяОперация(ПараметрыПолучения,
	                                                                    УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ПодготовкаДатКИзменениюЗавершение(ДлительнаяОперация, ДополнительныеПараметры);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодготовкаДатКИзменениюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовкаДатКИзменениюЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		ОбработатьЗавершениеПолученияДат(Результат.АдресРезультата, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеПолученияДат(АдресРезультата, ДополнительныеПараметры)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		ОбработатьЗавершениеПолученияДатНаСервере(АдресРезультата, ДополнительныеПараметры);
	КонецЕсли;
	
	Элементы.ФормаИзменитьДаты.Доступность = Истина;
	
	СформироватьПредставлениеДатыТехническогоПроекта();
	
КонецПроцедуры 

&НаСервере
Процедура ОбработатьЗавершениеПолученияДатНаСервере(АдресРезультата, ДополнительныеПараметры)
	
	РезультатПодготовки = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если РезультатПодготовки = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПлановаяДатаОкончанияТехПроекта = РезультатПодготовки.ДатаОкончанияТехПроекта;
	
	Для Каждого СтрокаТаблицы Из РезультатПодготовки.Этапы Цикл
		
		НоваяСтрока = Этапы.Добавить();
		НоваяСтрока.Этап                           = СтрокаТаблицы.Этап;
		НоваяСтрока.ДатаОкончанияУказаннаяВЭтапе   = СтрокаТаблицы.ДатаЭтапа ;
		НоваяСтрока.ДатаОкончанияПоПланамЗанятости = СтрокаТаблицы.ДатаПоПланам;
		НоваяСтрока.Остаток                        = СтрокаТаблицы.Остаток;
		НоваяСтрока.ПредставлениеДатаЭтапа         = ПредставлениеДатЭтапа(СтрокаТаблицы.ДатаЭтапа, СтрокаТаблицы.ДатаПоПланам);
		
		Если Не ЗначениеЗаполнено(НоваяСтрока.ДатаОкончанияУказаннаяВЭтапе) 
			И Не ЗначениеЗаполнено(НоваяСтрока.ДатаОкончанияПоПланамЗанятости) Тогда
			
			НоваяСтрока.Изменить = Ложь;
			
		ИначеЕсли Не ЗначениеЗаполнено(НоваяСтрока.ДатаОкончанияУказаннаяВЭтапе) Тогда
			
			НоваяСтрока.Изменить  = Истина; 
			НоваяСтрока.НоваяДата = НоваяСтрока.ДатаОкончанияПоПланамЗанятости;
			
		ИначеЕсли Не ЗначениеЗаполнено(НоваяСтрока.ДатаОкончанияПоПланамЗанятости) Тогда
			
			НоваяСтрока.Изменить  = Ложь; 
			НоваяСтрока.НоваяДата = СтрокаТаблицы.ДатаЭтапа;
			
		ИначеЕсли НоваяСтрока.ДатаОкончанияУказаннаяВЭтапе <> НоваяСтрока.ДатаОкончанияПоПланамЗанятости Тогда
			
			НоваяСтрока.Изменить  = Истина;
			НоваяСтрока.НоваяДата = НоваяСтрока.ДатаОкончанияПоПланамЗанятости;
			
		Иначе
			
			НоваяСтрока.Изменить  = Ложь;
			НоваяСтрока.НоваяДата = СтрокаТаблицы.ДатаЭтапа;
			
		КонецЕсли;
			
		Если СтрокаТаблицы.Нераспределено > 0 Тогда
			НоваяСтрока.Нераспределено = СтрокаТаблицы.Нераспределено;
		Иначе
			НоваяСтрока.Резерв = - СтрокаТаблицы.Нераспределено;
		КонецЕсли;
		
	КонецЦикла;
	
	Проект                        = РезультатПодготовки.ПроектИВерсия.Проект ;
	Версия                        = РезультатПодготовки.ПроектИВерсия.Версия ;
	СрокОкончанияРазработкиВерсии = РезультатПодготовки.ПроектИВерсия.ДатаОкончанияРазработки ;
	
	СформироватьПредставлениеВерсияПроект();
	
	Элементы.СтраницыОбновляетсяОбновлено.ТекущаяСтраница = Элементы.СтраницаОбновлено;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеВерсияПроект()
	
	Если ЗначениеЗаполнено(Версия) Тогда
		ПредставлениеВерсии = Строка(Версия);
		НавигационнаяСсылкаВерсия = ПолучитьНавигационнуюСсылку(Версия);
	Иначе
		ПредставлениеВерсии = НСтр("ru = 'не указана'");
		НавигационнаяСсылкаВерсия = "";
	КонецЕсли;
	НавигационнаяСссыкаПроект = ПолучитьНавигационнуюСсылку(Проект);
	
	ТекстПроект = СтроковыеФункции.ФорматированнаяСтрока("%1: <span style="" font: ВажнаяНадписьШрифт"">%2</span>.",
	                                                     НСтр("ru = 'Проект'"),
	                                                     Строка(Проект));
	
	ТекстВерсия = СтроковыеФункции.ФорматированнаяСтрока(" %1: <span style="" font: ВажнаяНадписьШрифт"">%2</span>",
	                                                     НСтр("ru = 'Версия'"),
	                                                     ПредставлениеВерсии); 
	
	ТекстСрокОкончанияРазработки = "";
	Если ЗначениеЗаполнено(Версия) Тогда
		ТекстСрокОкончанияРазработки = СтроковыеФункции.ФорматированнаяСтрока(", %1: <span style="" font: ВажнаяНадписьШрифт"">%2</span>",
		                                                                      НСтр("ru = 'окончание разработки'"),
		                                                                      Формат(СрокОкончанияРазработкиВерсии, "ДФ=dd.MM.yy"));
	КонецЕсли;
	
	Элементы.ПредставлениеПроектВерсия.Заголовок = Новый ФорматированнаяСтрока(ТекстПроект, ТекстВерсия, ТекстСрокОкончанияРазработки);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПодготовкуДанныеДатДлительнаяОперация(ПараметрыПодготовки, УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Подготовка данных дат технического проекта к изменению в плане занятости'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("Планирование.ПодготовитьДанныеДатТехническогоПроектаКИзменению",
	                                                       ПараметрыПодготовки, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьПолучаемыеДанные()
	
	ПлановаяДатаОкончанияТехПроекта = Дата(1, 1, 1);
	Этапы.Очистить();

КонецПроцедуры

&НаКлиенте
Функция ПараметрыПолученияДанных()
	
	ПараметрыПолученияДанных = Новый Структура;
	
	ПараметрыПолученияДанных.Вставить("ВидПлана",                                 ВидПлана);
	ПараметрыПолученияДанных.Вставить("ДатаНачалаПериодаПланирования",            ДатаНачалаПериодаПланирования);
	ПараметрыПолученияДанных.Вставить("ТехническийПроект",                        ТехническийПроект);
	ПараметрыПолученияДанных.Вставить("ПороговоеЗначениеДляЭтапаПоЗапланировано", ПороговоеЗначениеОтображениеЭтапПланЗанятости);
	ПараметрыПолученияДанных.Вставить("ПороговоеЗначениеДляЭтапаПоФакт",          ПороговоеЗначениеОтображениеЭтапПланЗанятости * 3600);
	ПараметрыПолученияДанных.Вставить("ВидСогласуемогоРесурсаПлановыхРабот",      ВидСогласуемогоРесурсаПлановыхРабот);
	
	Возврат ПараметрыПолученияДанных;
	
КонецФункции

&НаКлиенте
Процедура СформироватьПредставлениеДатыТехническогоПроекта()
	
	НавигационнаяСссыкаТехПроект = ПолучитьНавигационнуюСсылку(ТехническийПроект);
	
	ТекстДатаВТехПроекте = "";
	ТекстДатаПоПланированию = "";
	
	Если ЗначениеЗаполнено(ПлановаяДатаОкончанияТехПроекта) Тогда
		
		ТекстПлановаяДатаОкончанияТехПроекта = "%1 <span style=""%Стиль"">%2</span>";
		
		Если ПлановаяДатаОкончанияТехПроекта > СрокОкончанияРазработкиВерсии Тогда 
			СтильТекста = "color: ЗонаЗадачиКрасный";
		Иначе
			СтильТекста = "font: ВажнаяНадписьШрифт";
		КонецЕсли;
		
		ТекстПлановаяДатаОкончанияТехПроекта = СтрЗаменить(ТекстПлановаяДатаОкончанияТехПроекта, "%Стиль", СтильТекста);
		
		ТекстДатаВТехПроекте = СтроковыеФункцииКлиент.ФорматированнаяСтрока(ТекстПлановаяДатаОкончанияТехПроекта,
		                                                              НСтр("ru = 'Указанная в тех.проекте'"),
		                                                              Формат(ПлановаяДатаОкончанияТехПроекта, "ДФ=dd.MM.yy"));
		
	Иначе
		
		ТекстДатаВТехПроекте = СтроковыеФункцииКлиент.ФорматированнаяСтрока("%1: <span style="" color: ЗакрытыйДокумент"">%2</span>",
		                                                                    НСтр("ru = 'В тех. проекте'"),
		                                                                    НСтр("ru = 'не указана'"));
		
	КонецЕсли;
	
	ТекстДатаТехПроектаПоРезультатамПланированияЭтапов = ТекстДатаТехПроектаПоРезультатамПланированияЭтапов();
	
	Если ДатаОкончанияТехПроектаПоЭтапам > ПлановаяДатаОкончанияТехПроекта Тогда 
		СтильТекста = "color: ЗонаЗадачиКрасный";
	Иначе
		СтильТекста = "font: ВажнаяНадписьШрифт";
	КонецЕсли;

	
	ТекстДатаПоПланированию = ", %1: <span style=""%Стиль"">%2</span>.";
	ТекстДатаПоПланированию = СтрЗаменить(ТекстДатаПоПланированию, "%Стиль", СтильТекста);
	
	ТекстДатаПоПланированию = СтроковыеФункцииКлиент.ФорматированнаяСтрока(ТекстДатаПоПланированию,
	                                                                       НСтр("ru = 'по результатам планирования'"),
	                                                                       ТекстДатаТехПроектаПоРезультатамПланированияЭтапов.ДатаПоПланированию);
	
	Элементы.ПредставлениеДатыТехПроект.Заголовок = Новый ФорматированнаяСтрока(ТекстДатаВТехПроекте, ТекстДатаПоПланированию);
	
	Если Не ПустаяСтрока(ТекстДатаТехПроектаПоРезультатамПланированияЭтапов.ДополнительныйТекст) Тогда
		ТекстПредупреждение = "<span style=""color: ЗонаЗадачиКрасный"">%1</span>."; 
		ТекстПредупреждение = СтроковыеФункцииКлиент.ФорматированнаяСтрока(ТекстПредупреждение, ТекстДатаТехПроектаПоРезультатамПланированияЭтапов.ДополнительныйТекст);
		Элементы.ДекорацияПредупреждение.Заголовок = ТекстПредупреждение;
		Элементы.ДекорацияПредупреждение.Видимость = Истина;
	Иначе
		Элементы.ДекорацияПредупреждение.Видимость = Ложь;
	КонецЕсли; 
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ТекстДатаТехПроектаПоРезультатамПланированияЭтапов()
	
	ПустаяДата = Дата(1, 1, 1);
	
	Результат = Новый Структура;
	Результат.Вставить("ДатаПоПланированию", ПустаяДата);
	Результат.Вставить("ДополнительныйТекст", "");

	ЕстьЭтапыБезДаты          = Ложь;
	МаксимальнаяДатаЭтапа     = ПустаяДата; 
	ЕстьНераспределенныеЭтапы = Ложь;
	
	Для Каждого СтрокаЭтап Из Этапы Цикл
		
		Если СтрокаЭтап.ДатаОкончанияПоПланамЗанятости = ПустаяДата Тогда
			
			ЕстьЭтапыБезДаты = Истина;
			
		КонецЕсли;
		
		Если СтрокаЭтап.Нераспределено > 0 Тогда
			
			ЕстьНераспределенныеЭтапы = Истина;
			
		КонецЕсли;
		
		Если СтрокаЭтап.НоваяДата > МаксимальнаяДатаЭтапа Тогда
			
			МаксимальнаяДатаЭтапа = СтрокаЭтап.НоваяДата;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.ДатаПоПланированию = Формат(МаксимальнаяДатаЭтапа, "ДФ=dd.MM.yy");
	ДатаОкончанияТехПроектаПоЭтапам = МаксимальнаяДатаЭтапа;
	
	Если ЕстьЭтапыБезДаты 
		И ЕстьНераспределенныеЭтапы Тогда 
		
		Результат.ДополнительныйТекст = НСтр("ru = 'Есть незапланированные и нераспределеннные этапы'");
		
	ИначеЕсли ЕстьЭтапыБезДаты Тогда 
		
		Результат.ДополнительныйТекст = НСтр("ru = 'Есть незапланированные этапы'");
		
	ИначеЕсли ЕстьНераспределенныеЭтапы Тогда 
		
		Результат.ДополнительныйТекст = НСтр("ru = 'Есть  нераспределеннные этапы'");
		
	КонецЕсли;
	
	УстановитьИзменяемуюДатуОкончанияТехПроекта(ЭтотОбъект, МаксимальнаяДатаЭтапа, ЕстьЭтапыБезДаты, ЕстьНераспределенныеЭтапы );
	
	Возврат Результат;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)

	Форма.Элементы.НоваяДатаТехПроекта.Доступность = Форма.ИзменитьДатуТехПроекта;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьИзменяемуюДатуОкончанияТехПроекта(Форма, МаксимальнаяДатаЭтапа, ЕстьЭтапыБезДаты, ЕстьНераспределенныеЭтапы )
	
	Форма.НоваяДатаТехПроекта = МаксимальнаяДатаЭтапа;
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураВозвратаИзмененийДат()
	
	СтруктураВозврата = НовыйСтруктураВозвратаИзмененийДат();
	
	Если ИзменитьДатуТехПроекта Тогда
		СтруктураВозврата.ИзменятьДатуТехПроекта = Истина;
		СтруктураВозврата.НоваяДатаТехПроекта    = НоваяДатаТехПроекта;
		СтруктураВозврата.ТехническийПроект      = ТехническийПроект;
	КонецЕсли;
	
	Для Каждого СтрокаЭтапы Из Этапы Цикл
		
		Если СтрокаЭтапы.Изменить Тогда
			
			ДанныеЭтапа = НовыйДанныеИзменяемогоЭтапа();
			ДанныеЭтапа.ИзменяемыйЭтап = СтрокаЭтапы.Этап;
			ДанныеЭтапа.НоваяДата      = СтрокаЭтапы.НоваяДата; 
			СтруктураВозврата.ИзменяемыеЭтапы.Добавить(ДанныеЭтапа);
			
		КонецЕсли;
		
	КонецЦикла;
	Возврат СтруктураВозврата;
	
КонецФункции 

&НаКлиенте
Функция НовыйСтруктураВозвратаИзмененийДат()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИзменятьДатуТехПроекта", Ложь);
	СтруктураВозврата.Вставить("ТехническийПроект",      Неопределено);
	СтруктураВозврата.Вставить("НоваяДатаТехПроекта",    Дата(1, 1, 1) );
	СтруктураВозврата.Вставить("ИзменяемыеЭтапы",        Новый Массив);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция НовыйДанныеИзменяемогоЭтапа()
	
	ДанныеИзменяемогоЭтапа = Новый Структура;
	ДанныеИзменяемогоЭтапа.Вставить("ИзменяемыйЭтап", Неопределено);
	ДанныеИзменяемогоЭтапа.Вставить("НоваяДата",      Дата(1, 1, 1));
	
	Возврат ДанныеИзменяемогоЭтапа;
	
КонецФункции

&НаСервере
Функция ПредставлениеДатЭтапа(ДатаЭтапа, ДатаПоПланам)
	
	Возврат СтрШаблон(НСтр("ru = 'В этапе - %1, по планам - %2'"),
	                  ?(ЗначениеЗаполнено(ДатаЭтапа), Формат(ДатаЭтапа, "ДФ=dd.MM.yy"), НСтр("ru = 'не указана'")),
	                  ?(ЗначениеЗаполнено(ДатаПоПланам), Формат(ДатаПоПланам, "ДФ=dd.MM.yy"), НСтр("ru = 'не указана'")));
	
КонецФункции

#КонецОбласти

#КонецОбласти
