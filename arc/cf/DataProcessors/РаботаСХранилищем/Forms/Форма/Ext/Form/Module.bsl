
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
#Если ВебКлиент Тогда
	ВызватьИсключение НСтр("ru='Обработка не предназначена использования в веб-клиенте.'");
#КонецЕсли
	
#Если НЕ ВебКлиент Тогда
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Параметры.РежимЗапуска) Тогда
		РежимЗапуска = "ЗахватОбъектов";
	Иначе 
		РежимЗапуска = Параметры.РежимЗапуска;
	КонецЕсли; 
	
	КлючСохраненныхНастроек = "ПараметрыДействий9"; // при изменении структуры настроек нужно увеличить номер
	
	ЦветТекстаВыполняется = ЦветаСтиля.ТекстИнформационнойНадписи;
	ЦветОсобогоТекста = ЦветаСтиля.ЦветОсобогоТекста;
	ЦветУспешногоВыполнения = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
	
	Если РежимЗапуска = "ПереносИзмененийТехническогоПроекта" Тогда
		ТехническийПроект = Параметры.ТехническийПроект;
		
		НастройкиТехническогоПроекта = ТехническиеПроекты.ПолучитьНастройкиТехническогоПроекта(ТехническийПроект);
		РасположениеИБТехпроекта = НастройкиТехническогоПроекта.РасположениеИБТехпроекта;
		ПользовательИБТехпроекта = НастройкиТехническогоПроекта.ПользовательИБТехпроекта;
		ПользовательХранилищаТехпроекта = НастройкиТехническогоПроекта.ПользовательХранилищаТехпроекта;
		ПарольХранилищаТехпроекта = НастройкиТехническогоПроекта.ПарольХранилищаТехпроекта;
		
		ЗаполнитьНастройкиПоТехпроекту();
		
		СписокДействий = СписокДействийШага("Шаг1");
		
		Для Каждого СтрМас из СписокДействий Цикл
			ДобавитьНовоеДействие(СтрМас);
		КонецЦикла;	
		
		СписокДействий = СписокДействийШага("Шаг2");
		
		Для Каждого СтрМас из СписокДействий Цикл
			ДобавитьНовоеДействие(СтрМас);
		КонецЦикла;	
		
		СписокДействий = СписокДействийШага("Шаг3");
		
		Для Каждого СтрМас из СписокДействий Цикл
			ДобавитьНовоеДействие(СтрМас);
		КонецЦикла;	
	ИначеЕсли РежимЗапуска = "ОбновлениеОписанияОбработчиковВХранилищеВерсии" Тогда                                    
		
		Проект = Параметры.Проект;
		
		Если Не ЗначениеЗаполнено(Проект) Тогда
			Проект = ПараметрыСеанса.ТекущийПроект;
		КонецЕсли;
		
		ВерсияПроекта = Параметры.ВерсияПроекта;
		
		ЗаполнитьНастройкиПоВерсии();
		
		СписокДействий = СписокДействийШага("Шаг3");
		
		Для Каждого СтрМас из СписокДействий Цикл
			ДобавитьНовоеДействие(СтрМас);
		КонецЦикла;	
	ИначеЕсли РежимЗапуска = "ЗахватОбъектов" Тогда 	
		
		Если ЗначениеЗаполнено(Параметры.Ошибка) Тогда
			
			Ошибка = Параметры.Ошибка;
			ЗаполнитьПоОшибке();
			
		Иначе
			
			Проект = Параметры.Проект;
			
			Если Не ЗначениеЗаполнено(Проект) Тогда
				Проект = ПараметрыСеанса.ТекущийПроект;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Проект) Тогда
				ТекстИсключения = НСтр("ru = 'Выберите текущий проект на начальной странице и повторите попытку запуска обработки.'");
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			ВерсияПроекта = Параметры.ВерсияПроекта;
			
			Если Не ЗначениеЗаполнено(ВерсияПроекта) Тогда
				ВерсияПроекта = РаботаСОбъектамиМетаданных.ВерсияОсновногоХранилищаПроекта(Проект)	
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьНастройкиПоВерсии();
		
		СписокДействий = СписокДействийШага("ШагЗахватОбъектов");
		
		Для Каждого СтрМас из СписокДействий Цикл
			ДобавитьНовоеДействие(СтрМас);
		КонецЦикла;	
		
	КонецЕсли;
		
	ВосстановитьВыборДействий();
	
	НастроитьФорму();
#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
#Если НЕ ВебКлиент Тогда
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если РежимЗапуска <> "ПереносИзмененийТехническогоПроекта" Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РасположениеИБТехпроекта");
		МассивНепроверяемыхРеквизитов.Добавить("АдресХранилищаТехпроекта");      
		МассивНепроверяемыхРеквизитов.Добавить("ПользовательХранилищаТехпроекта");
		МассивНепроверяемыхРеквизитов.Добавить("ФайлДляПереносаИзменений");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("РасположениеИБТехпроекта");
	
		Если НЕ (СоздатьФайлПоставкиВОсновномХранилище 
					ИЛИ СохранитьКонфигурациюТехпроекта 
					ИЛИ ПеренестиИзменения И РежимПереносаИзменений = 1) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ФайлДляПереносаИзменений");
		КонецЕсли;
	КонецЕсли;
	
	Если РежимЗапуска <> "ЗахватОбъектов" Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗахватываемыеОбъекты");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
#Если НЕ ВебКлиент Тогда
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ШаблонЗапуска1С = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогПрограммы())
						+ СтандартныеПодсистемыКлиент.ИмяИсполняемогоФайлаПриложения(Истина);
						
	ВерсияПлатформыСППР = СистемнаяИнформация.ВерсияПриложения;
	НачалоВерсии = Найти(ШаблонЗапуска1С, СистемнаяИнформация.ВерсияПриложения);
	ШаблонЗапуска1С = Лев(ШаблонЗапуска1С, НачалоВерсии - 1) + "%ВерсияПлатформы%\bin\1cv8.exe";
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыполняетсяШаг <> "" Тогда
		
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru = 'Выполнение действий еще не завершено.
                             |После закрытия формы получить сведения о результатах выполнения действий будет невозможно.
							 |Закрыть форму?'");
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Закрыть форму'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок); 
		
	КонецЕсли; 
#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
#Если НЕ ВебКлиент Тогда
	СтруктураНастроекПроекта = ТехническиеПроекты.СтруктураНастроекПроекта();
	СтруктураНастроекПроекта.РасположениеИБТехпроекта = РасположениеИБТехпроекта;
	СтруктураНастроекПроекта.ПользовательИБТехпроекта = ПользовательИБТехпроекта;
	СтруктураНастроекПроекта.ПользовательХранилищаТехпроекта = ПользовательХранилищаТехпроекта;
	СтруктураНастроекПроекта.ПарольХранилищаТехпроекта = ПарольХранилищаТехпроекта;
	ТехническиеПроекты.СохранитьНастройкиТехническогоПроекта(ТехническийПроект, СтруктураНастроекПроекта);
	Настройки.Удалить("РасположениеИБТехпроекта");
	Настройки.Удалить("ПользовательИБТехпроекта");
	Настройки.Удалить("ПользовательХранилищаТехпроекта");
	Настройки.Удалить("ПарольХранилищаТехпроекта");
	
	СтруктураНастроекВерсии = ТехническиеПроекты.СтруктураНастроекВерсии();
	СтруктураНастроекВерсии.РасположениеИБОсновногоХранилища = РасположениеИБОсновногоХранилища;
	СтруктураНастроекВерсии.ПользовательИБОсновногоХранилища = ПользовательИБОсновногоХранилища;
	СтруктураНастроекВерсии.ПользовательОсновногоХранилища = ПользовательОсновногоХранилища;
	СтруктураНастроекВерсии.ПарольОсновногоХранилища = ПарольОсновногоХранилища;
	ТехническиеПроекты.СохранитьНастройкиВерсии(ВерсияДляНастроек, СтруктураНастроекВерсии);
	Настройки.Удалить("РасположениеИБОсновногоХранилища");
	Настройки.Удалить("ПользовательИБОсновногоХранилища");
	Настройки.Удалить("ПользовательОсновногоХранилища");
	Настройки.Удалить("ПарольОсновногоХранилища");
#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СведенияЗахватитьОбъектыВХранилищеВерсииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСоздатьФайлПоставкиВОсновномХранилищеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗахватьВсеОбъектыВХранилищеТехпроектаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОткрытьБазуРазработкиТехпроектаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗахватитьИзмененныеОбъектыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСохранитьКонфигурациюТехпроектаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияПеренестиИзмененияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗаложитьИзмененияВХранилищеВерсииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСоздатьПромежуточнуюБазуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбновитьКонфигурациюИзОсновногоХранилища_Шаг3ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗахватитьМодулиОписанияОбработчиковИКореньОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияПрименитьИзмененияКПодключеннойБазеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСформироватьФайлОписанияОбработчиковОбновленияИНомераВерсииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияВыгрузитьВсеМодулиИзБазыОсновногоХранилищаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗагрузитьОбработчикиОбновленияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСгенерироватьТекстыОписанияОбработчиковОбновленияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСгенерироватьФайлыИЗагрузитьВПромежуточнуюБазуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСохранитьПромежуточнуюБазуВФайлОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбъединитьБазуВерсииИФайлОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияСгенерироватьФайлыМодулейИЗалитьВБазуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияЗахватитьОбъектыПоСпискуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОбработататьНавигационнуюСсылку(НавигационнаяСсылкаФорматированнойСтроки);
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьИзмененныеОбъектыПриИзменении(Элемент)
	
#Если НЕ ВебКлиент Тогда
	Если ЗахватитьИзмененныеОбъекты Тогда
		ВыборДействийПоУмолчанию = ВыборДействийПоУмолчанию();
		ЗахватитьКореньКонфигурации_Шаг2 = ВыборДействийПоУмолчанию.ЗахватитьКореньКонфигурации_Шаг2;
		ЗахватитьВсеРоли_Шаг2 = ВыборДействийПоУмолчанию.ЗахватитьВсеРоли_Шаг2;
	Иначе
		ЗахватитьКореньКонфигурации_Шаг2 = Ложь;
		ЗахватитьВсеРоли_Шаг2 = Ложь;
	КонецЕсли; 
	
	НастроитьЭлементыФормы(ЭтаФорма, "Шаг2");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененияПриИзменении(Элемент)
	
#Если НЕ ВебКлиент Тогда
	НастроитьЭлементыФормы(ЭтаФорма, "Шаг2");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененияВРучнуюПриИзменении(Элемент)
	
#Если НЕ ВебКлиент Тогда
	ПоместитьИзмененияВХранилище = Ложь;
	НастроитьЭлементыФормы(ЭтаФорма, "Шаг2");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененияАвтоматическиПриИзменении(Элемент)
	
#Если НЕ ВебКлиент Тогда
	ВыборДействийПоУмолчанию = ВыборДействийПоУмолчанию();
	ПоместитьИзмененияВХранилище = ВыборДействийПоУмолчанию.ПоместитьИзмененияВХранилище;
	
	НастроитьЭлементыФормы(ЭтаФорма, "Шаг2");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеИБОсновногоХранилищаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения("ИмяИБНачалоВыбораЗавершение", ЭтотОбъект, "РасположениеИБОсновногоХранилища");
		ОбщегоНазначенияСППРКлиент.ВыбратьБазуИзСписка(ОписаниеОповещения, УникальныйИдентификатор, Ложь);
		
	Иначе
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогВыбораФайла.ПолноеИмяФайла = РасположениеИБОсновногоХранилища;
		ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект, "РасположениеИБОсновногоХранилища"));
		
	КонецЕсли;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеИБТехпроектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения("ИмяИБНачалоВыбораЗавершение", ЭтотОбъект, "РасположениеИБТехпроекта");
		ОбщегоНазначенияСППРКлиент.ВыбратьБазуИзСписка(ОписаниеОповещения, УникальныйИдентификатор, Ложь);
	
	Иначе
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогВыбораФайла.ПолноеИмяФайла = РасположениеИБОсновногоХранилища;
		ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект, "РасположениеИБТехпроекта"));
		
	КонецЕсли;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлДляПереносаИзмененийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Файл конфигурации (*.cf)'") + "|*.cf";
	ДиалогВыбораФайла.ПолноеИмяФайла = ФайлДляПереносаИзменений;
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект, "ФайлДляПереносаИзменений"));
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлДляПереносаИзмененийОткрытие(Элемент, СтандартнаяОбработка)
	
#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлВПапке(ФайлДляПереносаИзменений);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПроектаПриИзменении(Элемент)
	
#Если НЕ ВебКлиент Тогда
	ВерсияПроектаПриИзмененииСервер();
#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыЗахватываемыеОбъекты

&НаКлиенте
Процедура ЗахватываемыеОбъектыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьШаг1(Команда)
	
#Если НЕ ВебКлиент Тогда
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьВыполнениеДействий("Шаг1");
	
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьШаг1(Команда)
	
#Если НЕ ВебКлиент Тогда
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьВыполнениеДействий("Шаг1", Ложь);
	
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗановоШаг1(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг1");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьШаг2(Команда)
	
#Если НЕ ВебКлиент Тогда
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьВыполнениеДействий("Шаг2");
	
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗановоШаг2(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг2");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьШаг2(Команда)
	
#Если НЕ ВебКлиент Тогда
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьВыполнениеДействий("Шаг2", Ложь);
	
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьШаг1(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг1", Истина);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьШаг2(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг2", Истина);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьШаг3(Команда)
	#Если НЕ ВебКлиент Тогда
	
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли; 
	
		НачатьВыполнениеДействий("Шаг3");
		
	#КонецЕсли

КонецПроцедуры
 
&НаКлиенте
Процедура НачатьЗановоШаг3(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг3");
#КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьШаг3(Команда)
	
#Если НЕ ВебКлиент Тогда
	НачатьЗановоШаг("Шаг3", Истина);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьШаг3(Команда)
#Если НЕ ВебКлиент Тогда
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьВыполнениеДействий("Шаг3", Ложь);
	
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОбработку(Команда)
	
#Если НЕ ВебКлиент Тогда
	Закрыть(ДатаПомещенияОбъектовВХранилище);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонфигураторОсновногоХранилища(Команда)
	
#Если НЕ ВебКлиент Тогда
	Если НЕ ЗначениеЗаполнено(РасположениеИБОсновногоХранилища) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо указать расположение информационной базы'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "РасположениеИБОсновногоХранилища"); 
		Возврат
	КонецЕсли;
	
	ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
	
	ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
		ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонфигураторТехПроекта(Команда)
	
#Если НЕ ВебКлиент Тогда
	Если НЕ ЗначениеЗаполнено(РасположениеИБТехпроекта) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо указать расположение информационной базы'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "РасположениеИБТехпроекта"); 
		Возврат
	КонецЕсли;
	
	ПараметрыЗапуска = ПараметрыЗапускаХранилищаТехПроекта();
	
	ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
		ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамПоискаСсылокНаОбъект(Команда)
	
#Если НЕ ВебКлиент Тогда
	ПараметрыЗаполнения = РаботаСОбъектамиМетаданныхКлиент.ПараметрыЗаполненияТаблицыОбъектов();
	ПараметрыЗаполнения.ПараметрыВыполнения.Вариант = "ПоискСсылок"; 
	
	ОбработчикВФорме = Новый ОписаниеОповещения("Подключаемый_ЗаполнитьТаблицуОбъектовМетаданныхЗавершение", ЭтотОбъект, ПараметрыЗаполнения.ПараметрыВыполнения);
	ПараметрыЗаполнения.Действие = ОбработчикВФорме; 
	
	РаботаСОбъектамиМетаданныхКлиент.ЗаполнитьТаблицуОбъектовМетаданных(ЗахватываемыеОбъекты, ПараметрыЗаполнения);
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСпискуОбъектов(Команда)
	
#Если НЕ ВебКлиент Тогда
	ПараметрыЗаполнения = РаботаСОбъектамиМетаданныхКлиент.ПараметрыЗаполненияТаблицыОбъектов();
	ПараметрыЗаполнения.ПараметрыВыполнения.Вариант = "СписокОбъектов"; 
	
	ОбработчикВФорме = Новый ОписаниеОповещения("Подключаемый_ЗаполнитьТаблицуОбъектовМетаданныхЗавершение", ЭтотОбъект, ПараметрыЗаполнения.ПараметрыВыполнения);
	ПараметрыЗаполнения.Действие = ОбработчикВФорме; 
	
	РаботаСОбъектамиМетаданныхКлиент.ЗаполнитьТаблицуОбъектовМетаданных(ЗахватываемыеОбъекты, ПараметрыЗаполнения);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамГлобальногоПоиска(Команда)

#Если НЕ ВебКлиент Тогда
	ПараметрыЗаполнения = РаботаСОбъектамиМетаданныхКлиент.ПараметрыЗаполненияТаблицыОбъектов();
	ПараметрыЗаполнения.ПараметрыВыполнения.Вариант = "ГлобальныйПоиск"; 
	
	ОбработчикВФорме = Новый ОписаниеОповещения("Подключаемый_ЗаполнитьТаблицуОбъектовМетаданныхЗавершение", ЭтотОбъект, ПараметрыЗаполнения.ПараметрыВыполнения);
	ПараметрыЗаполнения.Действие = ОбработчикВФорме; 
	
	РаботаСОбъектамиМетаданныхКлиент.ЗаполнитьТаблицуОбъектовМетаданных(ЗахватываемыеОбъекты, ПараметрыЗаполнения);
#КонецЕсли                          

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗахватКорня(Команда)
	Если Не ЗначениеЗаполнено(ИмяКонфигурации) Тогда
		Если Не ЗначениеЗаполнено(ВерсияПроекта) Тогда
			ТекстПередупреждения = НСтр("ru = 'Укажите версию проекта на закладке ""Настройки""'");
		Иначе
			ТекстПередупреждения = НСтр("ru = 'Укажите имя конфигурации в настройках проекта и переоткройте форму.'");
		КонецЕсли;
		
		ПоказатьПредупреждение(,ТекстПередупреждения);
		Возврат;
	КонецЕсли;
		
	ДобавитьЗахватКорняСервер();	
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьОбъектыПоСписку(Команда)
	#Если НЕ ВебКлиент Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли; 
		
		НачатьВыполнениеДействий("ШагЗахватОбъектов");
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСписок(Команда)
	
	ВыделенныеОбъекты = Новый Массив;
	
	Для Каждого СтрТабл из ЗахватываемыеОбъекты Цикл
		
		Если СтрТабл.ПолноеИмя = ИмяКонфигурации Тогда
			Продолжить;
		Иначе
			ВыделенныеОбъекты.Добавить(СтрТабл.ПолноеИмя);
		КонецЕсли;
		
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьСписокЗавершение", ЭтотОбъект);
	
	ПараметрыФормыРедактирования = Новый Структура;
	ПараметрыФормыРедактирования.Вставить("Проект", Проект);
	ПараметрыФормыРедактирования.Вставить("ВыделенныеОбъекты", Новый ФиксированныйМассив(ВыделенныеОбъекты));
	
	ОткрытьФорму("Справочник.ОбъектыМетаданных.Форма.ФормаВыбораСПометками",
		ПараметрыФормыРедактирования,
		ЭтотОбъект,
		,
		,
		,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Если НЕ ВебКлиент Тогда

#Область СлужебныеПроцедурыИФункции

#Область ВыполнениеДействий

&НаКлиенте
Функция ПараметрыЗапускаОсновногоХранилища(ДополнительныйТекстКоманды = "")

	ВерсияПлатформы = ?(ЗначениеЗаполнено(ВерсияПлатформыОсновногоХранилища),
							ВерсияПлатформыОсновногоХранилища, 
							ВерсияПлатформыСППР);
							
	ФайлЗапускаОсновногоХранилища = СтрЗаменить(ШаблонЗапуска1С, "%ВерсияПлатформы%", ВерсияПлатформы);
	
	ПараметрыЗапуска = ПараметрыЗапускаХранилища(
		ФайлЗапускаОсновногоХранилища, 
		РасположениеИБОсновногоХранилища, 
		АдресОсновногоХранилища, 
		ПользовательОсновногоХранилища, 
		ПарольОсновногоХранилища, 
		ПользовательИБОсновногоХранилища);
	
	ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска = 
		ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска + " " + ДополнительныйТекстКоманды;
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

&НаКлиенте
Функция ПараметрыЗапускаХранилищаТехПроекта(ДополнительныйТекстКоманды = "")

	ВерсияПлатформы = ?(ЗначениеЗаполнено(ВерсияПлатформыХранилищаТехническихПроектов),
							ВерсияПлатформыХранилищаТехническихПроектов, 
							ВерсияПлатформыСППР);
							
	ФайлЗапускаХранилищаТехПроекта = СтрЗаменить(ШаблонЗапуска1С, "%ВерсияПлатформы%", ВерсияПлатформы);
	
	ПараметрыЗапуска = ПараметрыЗапускаХранилища(
		ФайлЗапускаХранилищаТехПроекта, 
		РасположениеИБТехпроекта, 
		АдресХранилищаТехпроекта, 
		ПользовательХранилищаТехпроекта, 
		ПарольХранилищаТехпроекта, 
		ПользовательИБТехпроекта);
	
	ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска = 
		ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска + " " + ДополнительныйТекстКоманды;
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

&НаКлиенте
Функция ПараметрыЗапускаПромежуточнойБазы(ДополнительныйТекстКоманды = "")
	
	ВерсияПлатформы = ?(ЗначениеЗаполнено(ВерсияПлатформыОсновногоХранилища),
							ВерсияПлатформыОсновногоХранилища, 
							ВерсияПлатформыСППР);
							
	ФайлЗапускаПромежуточнойБазы = СтрЗаменить(ШаблонЗапуска1С, "%ВерсияПлатформы%", ВерсияПлатформы);

	ШаблонКоманды = """%ФайлЗапуска1С%"" DESIGNER /DisableStartupMessages";
	ШаблонКоманды = СтрЗаменить(ШаблонКоманды, "%ФайлЗапуска1С%", ФайлЗапускаПромежуточнойБазы);
		
	ПараметрыКоманды = ОбщегоНазначенияСППРКлиентСервер.ПараметрыКомандыЗапускаПриложения1С();	
	ПараметрыКоманды.ПутьИБ = ПутьККаталогуВременнойБазы();
	ПараметрыКоманды.ДополнительныеПараметрыЗапуска = ДополнительныйТекстКоманды;
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ШаблонКоманды",    ШаблонКоманды);
	ПараметрыЗапуска.Вставить("ПараметрыКоманды", ПараметрыКоманды);
	
	Возврат ПараметрыЗапуска;

КонецФункции

&НаКлиенте
Функция ПараметрыЗапускаХранилища(ФайлЗапуска1С, РасположениеИБ, АдресХранилища, ПользовательХранилища, ПарольХранилища, ПользовательИБ)

	ШаблонКоманды = """%ФайлЗапуска1С%"" DESIGNER /DisableStartupMessages";
	ШаблонКоманды = СтрЗаменить(ШаблонКоманды, "%ФайлЗапуска1С%", ФайлЗапуска1С);
	
	ТекстКоманды =
		" /ConfigurationRepositoryF ""%АдресХранилища%"""
		+ " /ConfigurationRepositoryN %ПользовательХранилища%"
		+ " %ПарольХранилища%";
		
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%АдресХранилища%", АдресХранилища);
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ПользовательХранилища%", ПользовательХранилища);
	
	ШаблонПарольХранилища = ?(ЗначениеЗаполнено(ПарольХранилища), "/ConfigurationRepositoryP " + ПарольХранилища, "");
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ПарольХранилища%", ШаблонПарольХранилища); 
	
	ПараметрыКоманды = ОбщегоНазначенияСППРКлиентСервер.ПараметрыКомандыЗапускаПриложения1С();	
	ПараметрыКоманды.ИмяПользователя = ПользовательИБ;
	ПараметрыКоманды.ДополнительныеПараметрыЗапуска = ТекстКоманды;
	ПараметрыКоманды.ПутьИБ = РасположениеИБ;
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ШаблонКоманды",    ШаблонКоманды);
	ПараметрыЗапуска.Вставить("ПараметрыКоманды", ПараметрыКоманды);
	
	Возврат ПараметрыЗапуска;

КонецФункции

&НаКлиенте
Функция ПараметрыЗапускаОсновногоХранилищаВРежимеПредприятие(ДополнительныйТекстКоманды = "")
	ВерсияПлатформы = ?(ЗначениеЗаполнено(ВерсияПлатформыОсновногоХранилища),
							ВерсияПлатформыОсновногоХранилища, 
							ВерсияПлатформыСППР);
							
	ФайлЗапуска1С = СтрЗаменить(ШаблонЗапуска1С, "%ВерсияПлатформы%", ВерсияПлатформы);

	ШаблонКоманды =
		"""%ФайлЗапуска1С%"" ENTERPRISE  /DisableStartupDialogs /DisableStartupMessages ";
	ШаблонКоманды = СтрЗаменить(ШаблонКоманды, "%ФайлЗапуска1С%", ФайлЗапуска1С);
	
	ПараметрыКоманды = ОбщегоНазначенияСППРКлиентСервер.ПараметрыКомандыЗапускаПриложения1С();	
	ПараметрыКоманды.ИмяПользователя = ПользовательИБОсновногоХранилища;
	ПараметрыКоманды.ДополнительныеПараметрыЗапуска = ДополнительныйТекстКоманды;
	ПараметрыКоманды.ПутьИБ = РасположениеИБОсновногоХранилища;
	ПараметрыКоманды.ДополнительныеПараметрыЗапуска = ДополнительныйТекстКоманды;
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ШаблонКоманды",    ШаблонКоманды);
	ПараметрыЗапуска.Вставить("ПараметрыКоманды", ПараметрыКоманды);
	
	Возврат ПараметрыЗапуска;

КонецФункции


&НаКлиенте
Процедура НачатьВыполнениеДействий(ИмяШага, СохранитьВыборДействий = Истина)

	ВыполняетсяШаг = ИмяШага;
	
	СписокНастроекШага = СписокНастроекШага(ИмяШага, Истина);
	МассивНастроекШага = СтрРазделить(СписокНастроекШага, ",", Ложь);
	Для каждого ИмяДействия Из МассивНастроекШага Цикл
		Элементы[ИмяДействия].ТолькоПросмотр = Истина;
	КонецЦикла;
	
	Элементы["СтраницыКоманды" + ИмяШага].ТекущаяСтраница = Элементы["СтраницаКоманды" + ИмяШага + "_ДействияВыполняются"];
	
	Если ИмяШага = "Шаг1" Тогда
		Элементы.СтраницыКомандыШаг2.ТекущаяСтраница = Элементы.СтраницаКомандыШаг2_Недоступно;
	КонецЕсли;
	
	Для каждого ПараметрыДействия Из ВыполняемыеДействия Цикл
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, ПараметрыДействия.ИмяДействия) Тогда
			ПараметрыДействия.Пометка = ЭтаФорма[ПараметрыДействия.ИмяДействия];
		Иначе
			ПараметрыДействия.Пометка = Истина;
		КонецЕсли;
		ПараметрыДействия.СостояниеВыполнения = "";
		ПараметрыДействия.ТекущаяОперация = "";
		ПараметрыДействия.ФайлРезультатов = "";
		ПараметрыДействия.DumpResult = "";
		ПараметрыДействия.ВыполнениеВРежимеПредприятие = Ложь;
	КонецЦикла;
	
	Если СохранитьВыборДействий Тогда
		СохранитьВыборДействий(ИмяШага);
	КонецЕсли; 
	
	ВыполнитьВыбранныеДействия();
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВыполнитьВыбранныеДействия()

	ВсеДействияВыполнены = Истина;
	ЕстьОшибки = Ложь;
	
	СписокДействий = СписокДействийШага(ВыполняетсяШаг);
	
	Для каждого ПараметрыДействия Из ВыполняемыеДействия Цикл
		
		Если ПараметрыДействия.СостояниеВыполнения = "Выполнено"
			ИЛИ ПараметрыДействия.СостояниеВыполнения = "Пропущено"
			ИЛИ ПараметрыДействия.СостояниеВыполнения = "Отменено"
			ИЛИ СписокДействий.Найти(ПараметрыДействия.ИмяДействия) = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		СостояниеВыполненияТекущее = ПараметрыДействия.СостояниеВыполнения;
		
		Если ПараметрыДействия.Пометка Тогда
			
			// Шаг 1
			Если ПараметрыДействия.ИмяДействия = "ОбновитьКонфигурациюИзОсновногоХранилища" Тогда
				ОбновитьКонфигурациюИзОсновногоХранилища(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ЗахватитьОбъектыВОсновномХранилище" Тогда
				ЗахватитьОбъектыВОсновномХранилище(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СоздатьФайлПоставкиВОсновномХранилище" Тогда
				СоздатьФайлПоставкиВОсновномХранилище(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ЗахватьВсеОбъектыВХранилищеТехпроекта" Тогда
				ЗахватьВсеОбъектыВХранилищеТехпроекта(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ОткрытьБазуРазработкиТехпроекта" Тогда
				ОткрытьБазуРазработкиТехпроекта(ПараметрыДействия);
			КонецЕсли; 
			
			// Шаг 2
			Если ПараметрыДействия.ИмяДействия = "ЗахватитьИзмененныеОбъекты" Тогда
				ЗахватитьИзмененныеОбъекты(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СохранитьКонфигурациюТехпроекта" Тогда
				СохранитьКонфигурациюТехпроекта(ПараметрыДействия);
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ПеренестиИзменения" Тогда
				ПеренестиИзмененияВОсновноеХранилище(ПараметрыДействия);
			КонецЕсли; 
			
			// Шаг 3
			Если ПараметрыДействия.ИмяДействия = "ОбновитьКонфигурациюИзОсновногоХранилища_Шаг3" Тогда
				ОбновитьКонфигурациюИзОсновногоХранилища(ПараметрыДействия);
					
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ЗахватитьМодулиОписанияОбработчиковИКорень" Тогда
				ЗахватитьМодулиОписанияОбработчиковИКорень(ПараметрыДействия);					
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ПрименитьИзмененияКПодключеннойБазе" Тогда
				ПрименитьИзмененияКПодключеннойБазе(ПараметрыДействия);			
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии" Тогда
				СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии(ПараметрыДействия);
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ЗагрузитьОбработчикиОбновления" Тогда
				ЗагрузитьОбработчикиОбновления(ПараметрыДействия);			
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СгенерироватьТекстыОписанияОбработчиковОбновления" Тогда
				СгенерироватьТекстыОписанияОбработчиковОбновления(ПараметрыДействия);					
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ВыгрузитьВсеМодулиИзБазыОсновногоХранилища" Тогда
				ВыгрузитьВсеМодулиИзБазыОсновногоХранилища(ПараметрыДействия);			
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СоздатьПромежуточнуюБазу" Тогда
				СоздатьПромежуточнуюБазу(ПараметрыДействия);	                                   
					
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу" Тогда
				СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу(ПараметрыДействия);	
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СохранитьПромежуточнуюБазуВФайл" Тогда
				СохранитьПромежуточнуюБазуВФайл(ПараметрыДействия);	
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ОбъединитьБазуВерсииИФайл" Тогда
				ОбъединитьБазуВерсииИФайл(ПараметрыДействия);	
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "СгенерироватьФайлыМодулейИЗалитьВБазу" Тогда
				СгенерироватьФайлыМодулейИЗалитьВБазу(ПараметрыДействия);	
				
			ИначеЕсли ПараметрыДействия.ИмяДействия = "ЗаложитьИзмененияВХранилищеВерсии" Тогда
				ЗаложитьИзмененияВХранилищеВерсии(ПараметрыДействия);	
			КонецЕсли;	
			
			// Шаг ЗахватОбъектов
			Если ПараметрыДействия.ИмяДействия = "ЗахватитьОбъектыПоСписку" Тогда
				ЗахватитьОбъектыПоСпискуВыполнить(ПараметрыДействия);	
			КонецЕсли;	
			
		Иначе
			
			ПараметрыДействия.СостояниеВыполнения = "Пропущено";
			
		КонецЕсли;
		
		Если ПараметрыДействия.СостояниеВыполнения = "Выполнено" 
			ИЛИ ПараметрыДействия.СостояниеВыполнения = "Пропущено" Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, ПараметрыДействия.ИмяДействия) Тогда
				ЭтаФорма[ПараметрыДействия.ИмяДействия] = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыДействия.СостояниеВыполнения = "Ожидание" 
			ИЛИ ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
			ВсеДействияВыполнены = Ложь;
		КонецЕсли; 
		
		Если ПараметрыДействия.СостояниеВыполнения = "ЕстьОшибки" Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		Если СостояниеВыполненияТекущее <> ПараметрыДействия.СостояниеВыполнения Тогда
			ЗаполнитьСведенияОВыполнении(ПараметрыДействия);
		КонецЕсли;
		
	КонецЦикла; 

	Если ВсеДействияВыполнены Тогда
		
		Если ВыполняетсяШаг = "Шаг1" Тогда
			ЗаголовокОповещения = НСтр("ru = 'Актуализация хранилища'");
		ИначеЕсли ВыполняетсяШаг = "Шаг2" Тогда 
			ЗаголовокОповещения = НСтр("ru = 'Перенос изменений'");
		ИначеЕсли ВыполняетсяШаг = "Шаг3" Тогда 
			ЗаголовокОповещения = НСтр("ru = 'Обновление описания обработчиков'");
		ИначеЕсли ВыполняетсяШаг = "ШагЗахватОбъектов" Тогда 
			ЗаголовокОповещения = НСтр("ru = 'Захват объектов'");
		КонецЕсли; 
		
		Если ЕстьОшибки Тогда
			ПоказатьОповещениеПользователя(ЗаголовокОповещения,, НСтр("ru = 'Действия выполнены с ошибками'"), БиблиотекаКартинок.Ошибка32);
			СтраницаКоманд = Элементы["СтраницаКоманды" + ВыполняетсяШаг + "_ЗавершеноСОшибками"];
		Иначе
			ПоказатьОповещениеПользователя(ЗаголовокОповещения,, НСтр("ru = 'Действия выполнены успешно'"), БиблиотекаКартинок.Успешно32);
			СтраницаКоманд = Элементы["СтраницаКоманды" + ВыполняетсяШаг + "_УспешноЗавершено"];
		КонецЕсли; 
		
		Элементы["СтраницыКоманды" + ВыполняетсяШаг].ТекущаяСтраница = СтраницаКоманд;
		
		ЗавершитьШаг(ВыполняетсяШаг);
		
	Иначе
		
		ПодключитьОбработчикОжидания("ВыполнитьВыбранныеДействия", 3, Истина);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКонфигурациюИзОсновногоХранилища(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
	
		ТекстКоманды =
			" /ConfigurationRepositoryUpdateCfg -force"
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
				
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
		
		ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
		
		ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
			ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьОбъектыВОсновномХранилище(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ОбновитьКонфигурациюИзОсновногоХранилища");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ФайлОбъектов = СоздатьФайлДляЗахватаИзмененныхОбъектов(Ложь, Ложь);
		
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
			ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьИзмененныеОбъекты(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		ФайлОбъектов = СоздатьФайлДляЗахватаИзмененныхОбъектов(ЗахватитьВсеРоли_Шаг2, ЗахватитьКореньКонфигурации_Шаг2);
	
		ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
		
		ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия);
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлПоставкиВОсновномХранилище(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ОбновитьКонфигурациюИзОсновногоХранилища,ЗахватитьОбъектыВОсновномХранилище");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
		
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ПараметрыДействия.ТекущаяОперация = "UpdateDBCfg";
			
			ТекстКоманды =
				" /UpdateDBCfg"
				+ " /DumpResult ""%DumpResult%"""
				+ " /Out ""%ЛогФайл%""";
				
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
		Если ПараметрыДействия.ТекущаяОперация = "UpdateDBCfg" 
			И ПараметрыДействия.СостояниеВыполнения = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			ПараметрыДействия.ТекущаяОперация = "CreateDistributionFiles";
			
			ПараметрыДействия.РезультатДействия = ФайлДляПереносаИзменений;

			ТекстКоманды = 
				" /CreateDistributionFiles -cffile""%ФайлПоставки%"" -force"
				+ " /DumpResult ""%DumpResult%"""
				+ " /Out ""%ЛогФайл%""";
				
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлПоставки%", ФайлДляПереносаИзменений);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		КонецЕсли; 
				
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ЗахватьВсеОбъектыВХранилищеТехпроекта(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		ФайлОбъектов = СоздатьФайлДляЗахватаВсехОбъектов();
		
		ПараметрыЗапуска = ПараметрыЗапускаХранилищаТехПроекта();
		
		ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия);
											
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБазуРазработкиТехпроекта(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		СписокПредыдущихДействий = "ОбновитьКонфигурациюИзОсновногоХранилища,ЗахватитьОбъектыВОсновномХранилище,СоздатьФайлПоставкиВОсновномХранилище,
									|ЗахватьВсеОбъектыВХранилищеТехпроекта";
									
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий(СписокПредыдущихДействий);
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполнено";

			ПараметрыЗапуска = ПараметрыЗапускаХранилищаТехПроекта();
			
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
				
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененияВОсновноеХранилище(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		СписокПредыдущихДействий = "ЗахватитьИзмененныеОбъекты,СохранитьКонфигурациюТехпроекта";
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий(СписокПредыдущихДействий);
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			Если РежимПереносаИзменений = 0 Тогда
				
				// Открыть конфигуратор
				ПараметрыДействия.СостояниеВыполнения = "Выполнено";
				
				ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
				
				ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
					ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
				
			Иначе
				
				// Запуск автоматического переноса
				ПараметрыДействия.СостояниеВыполнения = "Выполняется";
				ПараметрыДействия.ТекущаяОперация = "MergeCfg";
				
				ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
				
				ФайлНастройки = СоздатьФайлНастройкиОбъединенияКонфигураций();
				
				ТекстКоманды = 
					" /MergeCfg ""%ФайлДляСравнения%"""
					+ " -Settings ""%ФайлНастройки%"""
					+ " /DumpResult ""%DumpResult%"""
					+ " /Out ""%ЛогФайл%""";
					
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлДляСравнения%", ФайлДляПереносаИзменений);
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлНастройки%", ФайлНастройки);
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
				
				ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
				
				ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
					ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
				
			КонецЕсли;
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
			
		Если ПараметрыДействия.ТекущаяОперация = "MergeCfg" 
			И ПараметрыДействия.СостояниеВыполнения = "Выполнено"
			И ПоместитьИзмененияВХранилище Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			ПараметрыДействия.ТекущаяОперация = "ConfigurationRepositoryCommit";
			
			ФайлОбъектов = СоздатьФайлДляЗахватаИзмененныхОбъектов(ЗахватитьВсеРоли_Шаг2, ЗахватитьКореньКонфигурации_Шаг2);

			ТекстКоманды = 
				" /ConfigurationRepositoryCommit -objects ""%ФайлОбъектов%"" %ТекстДляХранилища% -force"
				+ " /DumpResult ""%DumpResult%"""
				+ " /Out ""%ЛогФайл%""";
				
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлОбъектов%", ФайлОбъектов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ТекстДляХранилища%", ТекстДляХранилищаПоТехпроекту);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		ИначеЕсли ПараметрыДействия.ТекущаяОперация = "ConfigurationRepositoryCommit" 
			И ПараметрыДействия.СостояниеВыполнения = "Выполнено" Тогда
			
			ДатаПомещенияОбъектовВХранилище = ТекущаяДатаСеансаСервера();
			
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СохранитьКонфигурациюТехпроекта(ПараметрыДействия)

	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
		
		ПараметрыДействия.РезультатДействия = ФайлДляПереносаИзменений;

		ТекстКоманды = 
			" /DumpCfg  ""%ФайлПоставки%"" -force"
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлПоставки%", ФайлДляПереносаИзменений);
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
		
		ПараметрыЗапуска = ПараметрыЗапускаХранилищаТехПроекта(ТекстКоманды);
		
		ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
			ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия)

	ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
	
	ТекстКоманды =
		" /ConfigurationRepositoryLock -objects ""%ФайлОбъектов%"""
		+ " /DumpResult ""%DumpResult%"""
		+ " /Out ""%ЛогФайл%""";
		
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлОбъектов%", ФайлОбъектов);
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
	
	ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска = 
		ПараметрыЗапуска.ПараметрыКоманды.ДополнительныеПараметрыЗапуска
		+ ТекстКоманды;
	
	ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
		ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

КонецПроцедуры 
	
&НаКлиенте
Функция СоздатьФайлДляЗахватаИзмененныхОбъектов(ЗахватитьВсеРоли, ЗахватитьКореньКонфигурации)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	
	ТекстДляЗахвата = "<Objects xmlns=""http://v8.1c.ru/8.3/config/objects"" version=""1.0"">";
	
	Если ЗахватитьКореньКонфигурации Тогда
		ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + "<Configuration includeChildObjects = ""false""/>";
	КонецЕсли; 
	
	ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + ТекстДляЗахватаИзмененныхОбъектов;
	
	Если ЗахватитьВсеРоли Тогда
		ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + ТекстДляЗахватаРолей;
	КонецЕсли; 
	
	ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + "</Objects>";
	ТекстовыйДокумент.УстановитьТекст(ТекстДляЗахвата);
	
	
	ФайлОбъектов = ПолучитьИмяВременногоФайла("xml");
	ТекстовыйДокумент.Записать(ФайлОбъектов, КодировкаТекста.UTF8);
	
	Возврат ФайлОбъектов;

КонецФункции

&НаКлиенте
Функция СоздатьФайлДляЗахватаВсехОбъектов()
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстДляЗахвата = 
	"<Objects xmlns=""http://v8.1c.ru/8.3/config/objects"" version=""1.0"">
    |<Configuration includeChildObjects = ""true""/>
	|</Objects>";
	ТекстовыйДокумент.УстановитьТекст(ТекстДляЗахвата);
	ФайлОбъектов = ПолучитьИмяВременногоФайла("xml");
	ТекстовыйДокумент.Записать(ФайлОбъектов, КодировкаТекста.UTF8);
	
	Возврат ФайлОбъектов;

КонецФункции

&НаКлиенте
Функция СоздатьФайлНастройкиОбъединенияКонфигураций()

	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстФайла = 
	"<?xml version=""1.0"" encoding=""UTF-8""?>
	|<Settings xmlns=""http://v8.1c.ru/8.3/config/merge/settings"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" version=""1.0"" platformVersion=""8.3.8"">
	|<Parameters>
	|<ConfigurationsRelation>ConfigurationsNotRelated</ConfigurationsRelation>
	|<AllowMainConfigurationObjectDeletion>true</AllowMainConfigurationObjectDeletion>
	|<CopyObjectsMode>false</CopyObjectsMode>
	|</Parameters>
	|</Settings>";
	ТекстовыйДокумент.УстановитьТекст(ТекстФайла);
	ФайлОбъектов = ПолучитьИмяВременногоФайла("xml");
	ТекстовыйДокумент.Записать(ФайлОбъектов, КодировкаТекста.UTF8);
	
	Возврат ФайлОбъектов;

КонецФункции

&НаКлиенте
Процедура ОпределитьСостояниеВыполнения(ПараметрыДействия)

	Если ПараметрыДействия.ВыполнениеВРежимеПредприятие Тогда
		
		ФайлыРезультата = СтрРазделить(ПараметрыДействия.ФайлРезультатов, ",");
		
		ВсеФайлыСуществуют = Истина;
		
		Для Каждого СтрМас из ФайлыРезультата Цикл
			
			Файл = Новый Файл(СтрМас);
			Если Не Файл.Существует() Тогда
				ВсеФайлыСуществуют = Ложь;
				Прервать;	
			КонецЕсли;
			
		КонецЦикла;	
		
		Если ВсеФайлыСуществуют Тогда
			ПараметрыДействия.СостояниеВыполнения = "Выполнено";
		КонецЕсли;
				
	Иначе
		Файл = Новый Файл(ПараметрыДействия.DumpResult);
		Если Не Файл.Существует() Тогда
			Возврат;
		КонецЕсли;
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		Попытка
			ТекстовыйДокумент.Прочитать(ПараметрыДействия.DumpResult);
			РезультатДействия = ТекстовыйДокумент.ПолучитьТекст();
			Если РезультатДействия = "0" Тогда
				ПараметрыДействия.СостояниеВыполнения = "Выполнено";
			Иначе
				ПараметрыДействия.СостояниеВыполнения = "ЕстьОшибки";
				ПараметрыДействия.РезультатДействия   =  РезультатДействия;
				ТекстовыйДокумент.Прочитать(ПараметрыДействия.ФайлРезультатов);
				ПараметрыДействия.РезультатДействия = ТекстовыйДокумент.ПолучитьТекст();
			КонецЕсли; 
		Исключение
			// обработка не требуется
		КонецПопытки; 
		
		Попытка
			УдалитьФайлы(ПараметрыДействия.ФайлРезультатов);
			УдалитьФайлы(ПараметрыДействия.DumpResult);
		Исключение
			// обработка не требуется
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВыполнениеДействий(СписокДействий)

	МассивДействий = СтрРазделить(СтрЗаменить(СписокДействий, Символы.ПС, ""), ",");
	
	Выполняется = Ложь;
	
	Для каждого ПараметрыДействия Из ВыполняемыеДействия Цикл
		Если МассивДействий.Найти(ПараметрыДействия.ИмяДействия) <> Неопределено И ПараметрыДействия.Пометка Тогда
			Если ПараметрыДействия.СостояниеВыполнения = "ЕстьОшибки" 
				ИЛИ ПараметрыДействия.СостояниеВыполнения = "Отменено" Тогда
				Возврат "ЕстьОшибки";
			ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" 
				ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
				Выполняется = Истина;
			КонецЕсли; 
		КонецЕсли;  
	КонецЦикла; 
	
	Если Выполняется Тогда
		Возврат "Выполняется";
	Иначе
		Возврат "Выполнено";
	КонецЕсли; 

КонецФункции

&НаКлиенте
Процедура ЗаполнитьСведенияОВыполнении(ПараметрыДействия)

	СтрокиСведений = Новый Массив;
	
	ДатаСведений = ПолучитьТекущуюДату();
	
	Если ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'начато выполнение %1'"), ДатаСведений),, ЦветТекстаВыполняется));
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполнено" Тогда
		
		Если ПараметрыДействия.ИмяДействия = "СоздатьФайлПоставкиВОсновномХранилище" 
			ИЛИ ПараметрыДействия.ИмяДействия = "СохранитьКонфигурациюТехпроекта" Тогда
			СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'успешно выполнено %1'"), ДатаСведений),, ЦветУспешногоВыполнения));
			Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
				СтрокиСведений.Добавить(" ");
				СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'показать файл'"),,,, "#ОткрытьФайл_" + ПараметрыДействия.ИмяДействия));
			КонецЕсли; 
		Иначе
			СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'успешно выполнено %1'"), ДатаСведений),, ЦветУспешногоВыполнения));
		КонецЕсли; 
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Отменено" Тогда
		
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'отменено из-за ошибок выполнения предыдущих действий'"),, ЦветОсобогоТекста));
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "ЕстьОшибки" Тогда
		
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'выполнено с ошибками %1'"), ДатаСведений),, ЦветОсобогоТекста));
		СтрокиСведений.Добавить(" ");
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'открыть журнал'"),,,, "#Журнал_" + ПараметрыДействия.ИмяДействия));
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Пропущено" Тогда
		
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'пропущено'"),, ЦветТекстаВыполняется));
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		СтрокиСведений.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ожидание'"),, ЦветТекстаВыполняется));
		
	КонецЕсли; 

	Если СтрокиСведений.Количество() <> 0 Тогда
		СтрокиСведений.Вставить(0, "(");
		СтрокиСведений.Добавить(")");
		ЭтаФорма["Сведения" + ПараметрыДействия.ИмяДействия] = Новый ФорматированнаяСтрока(СтрокиСведений);
	КонецЕсли; 
	
	УстановитьИндикаторДействия(ПараметрыДействия.ИмяДействия, ПараметрыДействия.СостояниеВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИндикаторДействия(ИмяДействия, СостояниеВыполнения)

	КартинкаИндикатора = Неопределено;
	
	Если СостояниеВыполнения = "Выполняется" Тогда
		КартинкаИндикатора = БиблиотекаКартинок.ОперацияВыполняется;
	ИначеЕсли СостояниеВыполнения = "Ожидание" Тогда
		КартинкаИндикатора = БиблиотекаКартинок.ОперацияОжидаетВыполнения;
	ИначеЕсли СостояниеВыполнения = "ЕстьОшибки" Тогда
		КартинкаИндикатора = БиблиотекаКартинок.ОперацияЗавершенаСОшибкой;
	ИначеЕсли СостояниеВыполнения = "Выполнено" Тогда
		КартинкаИндикатора = БиблиотекаКартинок.ЗеленаяГалка;
	КонецЕсли;
	
	Если КартинкаИндикатора <> Неопределено Тогда
		Элементы["Индикатор" + ИмяДействия].Картинка = КартинкаИндикатора;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущуюДату()

	Возврат Формат(ТекущаяДата(), "ДЛФ=T");

КонецФункции

&НаКлиенте
Процедура ЗаполнитьИменаЛогФайлов(ПараметрыДействия)

	ПараметрыДействия.ФайлРезультатов = ПолучитьИмяВременногоФайла("txt");
	ПараметрыДействия.DumpResult = ПолучитьИмяВременногоФайла("txt");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекущаяДатаСеансаСервера()

	Возврат ТекущаяДатаСеанса();	

КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ВерсияПроектаПриИзмененииСервер()
	
	ЗаполнитьНастройкиПоВерсии();
	НастроитьФорму();

КонецПроцедуры

&НаСервере
Процедура ДобавитьНовоеДействие(ИмяДействия)

	НовоеДействие = ВыполняемыеДействия.Добавить();
	НовоеДействие.ИмяДействия = ИмяДействия;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиПоТехпроекту()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТехПроект.Владелец КАК Проект,
	|	ТехПроект.Версия КАК ВерсияПроекта,
	|	ТехПроект.Владелец.ВерсияПлатформыХранилищаТехническихПроектов КАК ВерсияПлатформыХранилищаТехническихПроектов,
	|	ТехПроект.Ветка.Имя КАК АдресХранилищаТехпроекта
	|ИЗ
	|	Справочник.ТехническиеПроекты КАК ТехПроект
	|ГДЕ
	|	ТехПроект.Ссылка = &Техпроект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыМетаданныхПроекта.Гиперссылка КАК Ссылка,
	|	ОбъектыМетаданныхПроекта.Гиперссылка.Наименование КАК ПолноеИмя
	|ИЗ
	|	Справочник.ТехническиеПроекты.ОбъектыМетаданных КАК ОбъектыМетаданныхПроекта
	|ГДЕ
	|	ОбъектыМетаданныхПроекта.Ссылка = &Техпроект
	|	И НЕ ОбъектыМетаданныхПроекта.Гиперссылка В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Подсистемы.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ОбъектыМетаданных.ПустаяСсылка))
	|	И ЕСТЬNULL(ОбъектыМетаданныхПроекта.Гиперссылка.ПрисутствуетВОсновномХранилище, ЛОЖЬ) = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыМетаданныхПроекта.Наименование КАК ПолноеИмя
	|ИЗ
	|	Справочник.ТехническиеПроекты КАК ТехПроект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыМетаданных КАК ОбъектыМетаданныхПроекта
	|		ПО ОбъектыМетаданныхПроекта.Владелец = ТехПроект.Владелец
	|			И НЕ ОбъектыМетаданныхПроекта.ПометкаУдаления
	|ГДЕ
	|	ТехПроект.Ссылка = &Техпроект
	|	И ОбъектыМетаданныхПроекта.Родитель.ВидОбъектаМетаданныхВЕдЧисле = &Роли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТехническиеПроектыОбработчикиОбновления.Ссылка
	|ИЗ
	|	Справочник.ТехническиеПроекты.ОбработчикиОбновления КАК ТехническиеПроектыОбработчикиОбновления
	|ГДЕ
	|	ТехническиеПроектыОбработчикиОбновления.Ссылка = &Техпроект";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Техпроект", ТехническийПроект);
	Запрос.УстановитьПараметр("Роли", НСтр("ru = 'Роль'"));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[2].Пустой() Тогда
		
		ТекстДляЗахватаРолей = "";
		ШаблонТекстОбъектов = "<Object fullName = ""%1"" includeChildObjects= ""false"" />";
		Выборка = Результат[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстОбъект = СтрШаблон(ШаблонТекстОбъектов, Выборка.ПолноеИмя);
		    ТекстДляЗахватаРолей = 
					ТекстДляЗахватаРолей 
					+ ?(ТекстДляЗахватаРолей <> "", Символы.ПС, "") 
					+ ТекстОбъект;
		КонецЦикла;
		
	Иначе
		
		Элементы.ЗахватитьВсеРоли_Шаг2.ТолькоПросмотр = Истина;
		ЗахватитьВсеРоли_Шаг2 = Ложь;
	
	КонецЕсли; 
	
	Выборка = Результат[0].Выбрать();
	
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	
	ЗаполнитьНастройкиПоВерсии();
	
	ТекстДляХранилищаМногострочный = ТехническиеПроекты.ТекстДляХранилищаКонфигурации(ТехническийПроект);
	ТекстДляХранилищаПоТехпроекту = "";
	Для Сч = 1 По СтрЧислоСтрок(ТекстДляХранилищаМногострочный) Цикл
		ТекстСтроки = СтрПолучитьСтроку(ТекстДляХранилищаМногострочный, Сч);
		Если ЗначениеЗаполнено(ТекстСтроки) Тогда
			ТекстДляХранилищаПоТехпроекту = ТекстДляХранилищаПоТехпроекту + " -comment """ + ТекстСтроки + """";
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Результат[1].Пустой() Тогда
	
		ТекстДляЗахватаИзмененныхОбъектов = "";
		ШаблонТекстОбъектов = "<Object fullName = ""%1"" includeChildObjects= ""true"" />";
		ШаблонТекстОбъектовБезПодчиненных = "<Object fullName = ""%1"" includeChildObjects= ""false"" />";
		Выборка = Результат[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.Подсистемы") Тогда
				ПолноеИмя = НСтр("ru = 'Подсистема.'") + СтрЗаменить(Выборка.ПолноеИмя, ".", НСтр("ru = '.Подсистема.'"));
				ТекстОбъект = СтрШаблон(ШаблонТекстОбъектовБезПодчиненных, ПолноеИмя);
			Иначе
				ТекстОбъект = СтрШаблон(ШаблонТекстОбъектов, Выборка.ПолноеИмя);
			КонецЕсли;
		    ТекстДляЗахватаИзмененныхОбъектов = 
					ТекстДляЗахватаИзмененныхОбъектов 
					+ ?(ТекстДляЗахватаИзмененныхОбъектов <> "", Символы.ПС, "") 
					+ ТекстОбъект;
					
		КонецЦикла;
		
	Иначе
		
		ЗахватитьОбъектыВОсновномХранилище = Ложь;
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить("(");
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'в техническом проекте не указаны измененные объекты метаданных'"),, ЦветаСтиля.ЦветОсобогоТекста));
		МассивСтрок.Добавить(")");
		СведенияЗахватитьОбъектыВОсновномХранилище = Новый ФорматированнаяСтрока(МассивСтрок);
		
	КонецЕсли; 
	
	ЕстьОбработчикиОбновления = Не Результат[3].Пустой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОшибке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ошибки.Владелец КАК Проект,
	|	Ошибки.ВерсияИсправления КАК ВерсияПроекта
	|ИЗ
	|	Справочник.Ошибки КАК Ошибки
	|ГДЕ
	|	Ошибки.Ссылка = &Ошибка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОшибкиИзмененныеМетаданные.ПроблемныйОбъект КАК ОбъектМетаданных,
	|	ОшибкиИзмененныеМетаданные.ПодчиненныйОбъект КАК ПодчиненныйОбъект
	|ПОМЕСТИТЬ
	|	ВТИзмененныеМетаданные
	|ИЗ
	|	Справочник.Ошибки.СписокОбъектов КАК ОшибкиИзмененныеМетаданные
	|ГДЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка = &Ошибка";
	
	Запрос.УстановитьПараметр("Ошибка", Ошибка);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоШапке = Результаты[0].Выбрать();
	ВыборкаПоШапке.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаПоШапке);
	
	ЗахватываемыеОбъекты.Загрузить(РаботаСОбъектамиМетаданных.ТаблицаПолныхИменОбъектовМетаданныхПоВТИзмененныеМетаданные(МенеджерВТ));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиПоВерсии()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВерсияПроекта.Представление КАК ВерсияПроектаПредставление,
	|	ВЫБОР
	|		КОГДА ВерсияПроекта.Ветка = ЗНАЧЕНИЕ(Справочник.Ветки.ПустаяСсылка)
	|			ТОГДА Проект.Ветка.Имя
	|		ИНАЧЕ ВерсияПроекта.Ветка.Имя
	|	КОНЕЦ КАК АдресОсновногоХранилища,
	|	ВЫБОР
	|		КОГДА ВерсияПроекта.Ветка = ЗНАЧЕНИЕ(Справочник.Ветки.ПустаяСсылка)
	|				ИЛИ ВерсияПроекта.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ОсновнаяВеткаПроекта)
	|			ТОГДА Проект.ВерсияПлатформы
	|		ИНАЧЕ ВерсияПроекта.ВерсияПлатформыХранилища
	|	КОНЕЦ КАК ВерсияПлатформыОсновногоХранилища,
	|	ВЫБОР
	|		КОГДА ВерсияПроекта.Ветка = ЗНАЧЕНИЕ(Справочник.Ветки.ПустаяСсылка)
	|				ИЛИ ВерсияПроекта.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ОсновнаяВеткаПроекта)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВерсииПроекта.ПустаяСсылка)
	|		ИНАЧЕ ВерсияПроекта.Ссылка
	|	КОНЕЦ КАК ВерсияДляНастроек,
	|	Проект.ВестиОписанияОбработчиковОбновленияИнформационнойБазы КАК ВестиОписанияОбработчиковОбновленияИнформационнойБазы,
	|	Проект.ИспользоватьСлешиВТекстеЗакладкиВХранилище КАК ИспользоватьСлешиВТекстеЗакладкиВХранилище,
	|	Проект.ИмяКонфигурации КАК ИмяКонфигурации
	|ИЗ
	|	Справочник.Проекты КАК Проект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииПроекта КАК ВерсияПроекта
	|		ПО (ВерсияПроекта.Ссылка = &ВерсияПроекта)
	|ГДЕ
	|	Проект.Ссылка = &Проект";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ВерсияПроекта", ВерсияПроекта);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	
	ВерсияДляНастроек = Выборка.ВерсияДляНастроек;
	НастройкиВерсии = ТехническиеПроекты.ПолучитьНастройкиВерсии(ВерсияДляНастроек);
	РасположениеИБОсновногоХранилища = НастройкиВерсии.РасположениеИБОсновногоХранилища;
	ПользовательИБОсновногоХранилища = НастройкиВерсии.ПользовательИБОсновногоХранилища;
	ПользовательОсновногоХранилища = НастройкиВерсии.ПользовательОсновногоХранилища;
	ПарольОсновногоХранилища = НастройкиВерсии.ПарольОсновногоХранилища;
	
	ТекстыОписанияОбработчиковОбновления = Новый ФиксированнаяСтруктура(
		Обработки.ПостроениеОчередиОтложенныхОбработчиков.КодОбработчиковПриДобавленииОбработчиковОбновления(Проект, ВерсияПроекта, Истина));
		
	ЕстьОбработчикиОбновления = Выборка.ВестиОписанияОбработчиковОбновленияИнформационнойБазы;
	ИспользоватьСлешиВТекстеЗакладкиВХранилище = Выборка.ИспользоватьСлешиВТекстеЗакладкиВХранилище;
	
	РасчетХэша = Новый ХешированиеДанных(ХешФункция.CRC32);
	РасчетХэша.Добавить(Строка(Проект.УникальныйИдентификатор()));
	РасчетХэша.Добавить(Строка(ВерсияПроекта.УникальныйИдентификатор()));
	
	ХэшПроектаИВерсии = Формат(РасчетХэша.ХешСумма, "ЧГ=");
КонецПроцедуры

&НаКлиенте
Процедура ИмяИБНачалоВыбораЗавершение(РезультатЗакрытия, ИмяРеквизитаРасположениеИБ) Экспорт

	Если НЕ РезультатЗакрытия.ФайловыйРежим Тогда
		ЭтаФорма[ИмяРеквизитаРасположениеИБ] = РезультатЗакрытия.СтрокаСоединения;
	Иначе
		ЭтаФорма[ИмяРеквизитаРасположениеИБ] = РезультатЗакрытия.КаталогИБ;
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЭлементыФормы(Форма, ИмяШага = "")

	Элементы = Форма.Элементы;
	
	Если ИмяШага = "" ИЛИ ИмяШага = "Шаг2" Тогда
		Элементы.ЗахватитьКореньКонфигурации_Шаг2.ТолькоПросмотр = НЕ Форма.ЗахватитьИзмененныеОбъекты;
		Элементы.ЗахватитьВсеРоли_Шаг2.ТолькоПросмотр = НЕ Форма.ЗахватитьИзмененныеОбъекты;
		
		Элементы.ПеренестиИзмененияВРучную.ТолькоПросмотр = НЕ Форма.ПеренестиИзменения;
		Элементы.ПеренестиИзмененияАвтоматически.ТолькоПросмотр = НЕ Форма.ПеренестиИзменения;
		Элементы.ПоместитьИзмененияВХранилище.ТолькоПросмотр = НЕ Форма.ПеренестиИзменения ИЛИ Форма.РежимПереносаИзменений = 0;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОбработататьНавигационнуюСсылку(ИмяСсылки)

	Если Найти(ИмяСсылки, "#Журнал_") <> 0 Тогда
		
		ОткрытьПросмотрРезультатовДействия(ИмяСсылки);
		
	ИначеЕсли Найти(ИмяСсылки, "#ОткрытьФайл_") <> 0 Тогда
		
		ОбработатьСсылкуНаФайл(ИмяСсылки);
		
	Иначе
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Обработка ссылки %1 не предусмотренна.'"), ИмяСсылки);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПросмотрРезультатовДействия(ИмяСсылки)

	СтруктураПоиска = Новый Структура("ИмяДействия", Сред(ИмяСсылки, 9));
 	ПараметрыДействия = ВыполняемыеДействия.НайтиСтроки(СтруктураПоиска)[0];
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РезультатыДействия", ПараметрыДействия.РезультатДействия);
	ОткрытьФорму("Обработка.РаботаСХранилищем.Форма.ПросмотрРезультатовДействия", ПараметрыФормы);	

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСсылкуНаФайл(ИмяСсылки)

	СтруктураПоиска = Новый Структура("ИмяДействия", Сред(ИмяСсылки, 14));
 	ПараметрыДействия = ВыполняемыеДействия.НайтиСтроки(СтруктураПоиска)[0];
	ОткрытьФайлВПапке(ПараметрыДействия.РезультатДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВПапке(ПутьКФайлу)

	Если ЗначениеЗаполнено(ПутьКФайлу) И ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ЗапуститьПриложение("explorer.exe /select, """ + ПутьКФайлу + """");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ВыполняетсяШаг = "";
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВыборДействий(ИмяШага)

	Перем ПараметрыДействий;
	
	ПараметрыДействий = ХранилищеНастроекДанныхФорм.Загрузить("ПереносИзмененийВХранилище", КлючСохраненныхНастроек);
	ВыборДействийПоУмолчанию = ВыборДействийПоУмолчанию();
	Если НЕ ЗначениеЗаполнено(ПараметрыДействий) Тогда
		ПараметрыДействий = ВыборДействийПоУмолчанию();
	КонецЕсли;
	
	СписокСвойств = СписокНастроекШага(ИмяШага);
	ЗаполнитьЗначенияСвойств(ПараметрыДействий, ЭтаФорма, СписокСвойств);
	ХранилищеНастроекДанныхФорм.Сохранить("ПереносИзмененийВХранилище", КлючСохраненныхНастроек, ПараметрыДействий);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьВыборДействий(ИмяШага = "")

	ПараметрыДействий = ХранилищеНастроекДанныхФорм.Загрузить("ПереносИзмененийВХранилище", КлючСохраненныхНастроек);
	Если НЕ ЗначениеЗаполнено(ПараметрыДействий) Тогда
		ПараметрыДействий = ВыборДействийПоУмолчанию();
	КонецЕсли;
	
	Если ИмяШага <> "" Тогда
		СписокСвойств = СписокНастроекШага(ИмяШага);
	Иначе
		СписокСвойств = Неопределено;
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыДействий, СписокСвойств);
	
	НастроитьЭлементыФормы(ЭтаФорма, ИмяШага);
	
КонецПроцедуры

&НаСервере
Функция СписокНастроекШага(ИмяШага, ЭлементыФормы = Ложь)

	Если ИмяШага = "ШагЗахватОбъектов" Тогда
		Возврат "";
	КонецЕсли;
	
	МассивДействий = СписокДействийШага(ИмяШага);
	СписокСвойств = СтрСоединить(МассивДействий, ",");
	Если ИмяШага = "Шаг2" Тогда
		СписокСвойств = СписокСвойств 
			+ ",ЗахватитьКореньКонфигурации_Шаг2"
			+ ",ЗахватитьВсеРоли_Шаг2,ПоместитьИзмененияВХранилище"
			+ ?(ЭлементыФормы, ",ПеренестиИзмененияВРучную,ПеренестиИзмененияАвтоматически", ",РежимПереносаИзменений");
	КонецЕсли; 

	Возврат СписокСвойств;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СписокДействийШага(ИмяШага)
	
	СписокДействий = Новый Массив;

 	Если ИмяШага = "Шаг1" Тогда
		СписокДействий.Добавить("ОбновитьКонфигурациюИзОсновногоХранилища");
		СписокДействий.Добавить("ЗахватитьОбъектыВОсновномХранилище");
		СписокДействий.Добавить("СоздатьФайлПоставкиВОсновномХранилище");
		СписокДействий.Добавить("ЗахватьВсеОбъектыВХранилищеТехпроекта");
		СписокДействий.Добавить("ОткрытьБазуРазработкиТехпроекта");
	ИначеЕсли ИмяШага = "Шаг2" Тогда
		СписокДействий.Добавить("ЗахватитьИзмененныеОбъекты");
		СписокДействий.Добавить("СохранитьКонфигурациюТехпроекта");
		СписокДействий.Добавить("ПеренестиИзменения");                   
	ИначеЕсли ИмяШага = "Шаг3" Тогда
		СписокДействий.Добавить("ОбновитьКонфигурациюИзОсновногоХранилища_Шаг3");
		СписокДействий.Добавить("ЗахватитьМодулиОписанияОбработчиковИКорень");
		СписокДействий.Добавить("ПрименитьИзмененияКПодключеннойБазе");
		СписокДействий.Добавить("СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии");
		СписокДействий.Добавить("ЗагрузитьОбработчикиОбновления");
		СписокДействий.Добавить("СгенерироватьТекстыОписанияОбработчиковОбновления");
		СписокДействий.Добавить("ВыгрузитьВсеМодулиИзБазыОсновногоХранилища");
		СписокДействий.Добавить("СоздатьПромежуточнуюБазу");      
		СписокДействий.Добавить("СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу");
		СписокДействий.Добавить("СохранитьПромежуточнуюБазуВФайл");
		СписокДействий.Добавить("ОбъединитьБазуВерсииИФайл");
		СписокДействий.Добавить("СгенерироватьФайлыМодулейИЗалитьВБазу");
		СписокДействий.Добавить("ЗаложитьИзмененияВХранилищеВерсии");
	ИначеЕсли ИмяШага = "ШагЗахватОбъектов" Тогда
		СписокДействий.Добавить("ЗахватитьОбъектыПоСписку");
	КонецЕсли; 
					
	Возврат СписокДействий;
	
КонецФункции

&НаСервере
Функция ВыборДействийПоУмолчанию()

	ВыборДействийПоУмолчанию = Новый Структура;
	
	// Шаг 1
	ВыборДействийПоУмолчанию.Вставить("ОбновитьКонфигурациюИзОсновногоХранилища", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗахватитьОбъектыВОсновномХранилище", Истина);
	ВыборДействийПоУмолчанию.Вставить("СоздатьФайлПоставкиВОсновномХранилище", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗахватьВсеОбъектыВХранилищеТехпроекта", Истина);
	ВыборДействийПоУмолчанию.Вставить("ОткрытьБазуРазработкиТехпроекта", Истина);
	
	// Шаг 2
	ВыборДействийПоУмолчанию.Вставить("ЗахватитьИзмененныеОбъекты", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗахватитьКореньКонфигурации_Шаг2", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗахватитьВсеРоли_Шаг2", Ложь);
	ВыборДействийПоУмолчанию.Вставить("СохранитьКонфигурациюТехпроекта", Истина);
	ВыборДействийПоУмолчанию.Вставить("ПеренестиИзменения", Истина);
	ВыборДействийПоУмолчанию.Вставить("РежимПереносаИзменений", 0);
	ВыборДействийПоУмолчанию.Вставить("ПоместитьИзмененияВХранилище", Ложь);
	                                  
	// Шаг 3         
	ВыборДействийПоУмолчанию.Вставить("ОбновитьКонфигурациюИзОсновногоХранилища_Шаг3", Истина);
	ВыборДействийПоУмолчанию.Вставить("СгенерироватьТекстыОписанияОбработчиковОбновления", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗахватитьМодулиОписанияОбработчиковИКорень", Истина);
	ВыборДействийПоУмолчанию.Вставить("ПрименитьИзмененияКПодключеннойБазе", Истина);
	ВыборДействийПоУмолчанию.Вставить("СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗагрузитьОбработчикиОбновления", Ложь);
	ВыборДействийПоУмолчанию.Вставить("ВыгрузитьВсеМодулиИзБазыОсновногоХранилища", Истина);
	ВыборДействийПоУмолчанию.Вставить("СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу", Истина);
	ВыборДействийПоУмолчанию.Вставить("СоздатьПромежуточнуюБазу", Истина);
	ВыборДействийПоУмолчанию.Вставить("СохранитьПромежуточнуюБазуВФайл", Истина);
	ВыборДействийПоУмолчанию.Вставить("ОбъединитьБазуВерсииИФайл", Истина);
	ВыборДействийПоУмолчанию.Вставить("СгенерироватьФайлыМодулейИЗалитьВБазу", Истина);
	ВыборДействийПоУмолчанию.Вставить("ЗаложитьИзмененияВХранилищеВерсии", Истина);

	//ШагЗахватОбъектов	
	
	Возврат ВыборДействийПоУмолчанию

КонецФункции

&НаКлиенте
Процедура НачатьЗановоШаг(ИмяШага, ЭтоОтмена = Ложь)

	Если ЭтоОтмена Тогда
		ТекстВопроса = НСтр("ru = 'Выполнение действий еще не завершено.
	                             |После отмены выполнения получить сведения о результатах выполнения действий будет невозможно.
								 |Отменить выполнение?'");
								 
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьЗановоШагЗавершение", ЭтотОбъект, ИмяШага);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	Иначе
		НачатьЗановоШагЗавершение(КодВозвратаДиалога.Да, ИмяШага);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗановоШагЗавершение(РезультатВопроса, ИмяШага) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтключитьОбработчикОжидания("ВыполнитьВыбранныеДействия");
		Элементы["СтраницыКоманды" + ИмяШага].ТекущаяСтраница = Элементы["СтраницаКоманды" + ИмяШага + "_Начало"];
		ЗавершитьШаг(ИмяШага);
		НачатьЗановоШагНаСервере(ИмяШага);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НачатьЗановоШагНаСервере(ИмяШага)

	ДатаПомещенияОбъектовВХранилище = '000101010000';
	
	ВосстановитьВыборДействий(ИмяШага);
	
	МассивДействий = СписокДействийШага(ИмяШага);
	Для каждого ИмяДействия Из МассивДействий Цикл
		Элементы[ИмяДействия].ТолькоПросмотр = Ложь;
		ЭтаФорма["Сведения"  + ИмяДействия] = Новый ФорматированнаяСтрока("");
		Элементы["Индикатор" + ИмяДействия].Картинка = Новый Картинка;
	КонецЦикла;
	
	Если ИмяШага = "Шаг1" Тогда
		Элементы.СтраницыКомандыШаг2.ТекущаяСтраница = Элементы.СтраницаКомандыШаг2_Начало;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьШаг(ИмяШага)

	Если ИмяШага = "Шаг1" Тогда
		Элементы.СтраницыКомандыШаг2.ТекущаяСтраница = Элементы.СтраницаКомандыШаг2_Начало;
	КонецЕсли; 

	ВыполняетсяШаг = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ИмяРеквизита) Экспорт

	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() <> 0 Тогда
		ЭтаФорма[ИмяРеквизита] = ВыбранныеФайлы[0];
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьТекстыОписанияОбработчиковОбновления(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ЗагрузитьОбработчикиОбновления");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ПараметрыДействия.СостояниеВыполнения = СгенерироватьТекстыОписанияОбработчиковОбновленияСервер();
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СгенерироватьТекстыОписанияОбработчиковОбновленияСервер()
	ТекстыОписанияОбработчиковОбновления = Новый ФиксированнаяСтруктура(Новый Структура());
	//1. Проверяется возможность перестроения очереди;

	Если Не Обработки.ПостроениеОчередиОтложенныхОбработчиков.МожноСтроитьОчередь(Проект, ВерсияПроекта) Тогда
		Возврат "ЕстьОшибки";		
	КонецЕсли;

	//2. Перестраивается очередь

	Если Не Обработки.ПостроениеОчередиОтложенныхОбработчиков.ПостроитьОчередьОбработчиковОбновления(Проект, ВерсияПроекта) Тогда
		Возврат "ЕстьОшибки";
	КонецЕсли;
	
	//3. Генерируются тексты описания обработичков обновления
	
	Попытка
		ТекстыОписанияОбработчиковОбновления = Новый ФиксированнаяСтруктура(
			Обработки.ПостроениеОчередиОтложенныхОбработчиков.КодОбработчиковПриДобавленииОбработчиковОбновления(Проект, ВерсияПроекта));
	Исключение
		ТекстыОписанияОбработчиковОбновления = Новый ФиксированнаяСтруктура(Новый Структура());
		Возврат "ЕстьОшибки";
	КонецПопытки;	
	
	Возврат "Выполнено";
	
КонецФункции

&НаКлиенте
Процедура ЗахватитьМодулиОписанияОбработчиковИКорень(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ОбновитьКонфигурациюИзОсновногоХранилища_Шаг3");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ФайлОбъектов = СоздатьФайлДляМодулейОбновленияИБ();
		
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
			ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьОбъектыПоСпискуВыполнить(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		ТекстДляЗахватаИзмененныхОбъектов = "";
		ШаблонТекстОбъектов = "<Object fullName = ""%1"" includeChildObjects= ""false"" />";
		
		Для Каждого СтрТабл из ЗахватываемыеОбъекты Цикл
			
			Если СтрТабл.ПолноеИмя = ИмяКонфигурации Тогда
				ТекстОбъект = "<Configuration includeChildObjects = ""false""/>";
			Иначе
				ТекстОбъект = СтрШаблон(ШаблонТекстОбъектов, СтрТабл.ПолноеИмя);
			КонецЕсли;
			
			ТекстОбъект = СтрШаблон(ШаблонТекстОбъектов, СтрТабл.ПолноеИмя);
			ТекстДляЗахватаИзмененныхОбъектов = 
				ТекстДляЗахватаИзмененныхОбъектов 
				+ ?(ТекстДляЗахватаИзмененныхОбъектов <> "", Символы.ПС, "") 
				+ ТекстОбъект;
			
		КонецЦикла;
		
		ФайлОбъектов = СоздатьФайлДляЗахватаИзмененныхОбъектов(Ложь, Ложь);
		
		ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища();
		ЗахватитьОбъектыВХранилище(ПараметрыЗапуска, ФайлОбъектов, ПараметрыДействия);
		
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзмененияКПодключеннойБазе(ПараметрыДействия)
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ЗахватитьМодулиОписанияОбработчиковИКорень");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ТекстКоманды =
			" /UpdateDBCfg "
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработчикиОбновления(ПараметрыДействия)
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			Файл = Новый ДвоичныеДанные(ИмяФайлаСОбработчикамиОбновления());
			
			ЗагрузитьОбработчикиОбновленияСервер(Файл);
			
			ОповеститьОбИзменении(Тип("СправочникСсылка.ОбработчикиОбновленияИнформационнойБазы"));
			Оповестить("Запись_ОбработчикиОбновленияИнформационнойБазы");
			
			ПараметрыДействия.СостояниеВыполнения = "Выполнено";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОбработчикиОбновленияСервер(Файл)
	
	ИмяФайлаЗаписи = ПолучитьИмяВременногоФайла("xml");
	Файл.Записать(ИмяФайлаЗаписи);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайлаЗаписи);
	
	ОбработчикиПодсистем = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	
	ЧтениеXML.Закрыть();
	
	Попытка
		УдалитьФайлы(ИмяФайлаЗаписи);
	Исключение
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Истина);
	РеквизитыВерсии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВерсияПроекта, "Ветка.РежимРазработки, Ветка.Тип");
	ЭтоВерсияОсновногоХранилища = РеквизитыВерсии.ВеткаРежимРазработки = Перечисления.РежимРазработки.ВХранилище
								  И РеквизитыВерсии.ВеткаТип = Перечисления.ТипыВеток.ОсновнаяВеткаПроекта;
	ЗагрузкаМетаданных.ЗагрузитьОбработчикиОбновленияИзТаблицы(Проект,
																ВерсияПроекта,
																ОбработчикиПодсистем,
																ЭтоВерсияОсновногоХранилища,
																Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ПрименитьИзмененияКПодключеннойБазе");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ФайлОбработки = ПутьККаталогуВременнойБазы() + "DataProcessorОfUpdateHandles.epf";
			
			АдресОбработкиОпределенияВерсииКонфигурации = ОбработкаСозданияФайлаОписанияОбработчиков(УникальныйИдентификатор);
			ПолучитьИзВременногоХранилища(АдресОбработкиОпределенияВерсииКонфигурации).Записать(ФайлОбработки);
							
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			ПараметрыДействия.ВыполнениеВРежимеПредприятие = Истина;
			
			Если ЗагрузитьОбработчикиОбновления Тогда
				ПараметрыДействия.ФайлРезультатов = ИмяФайлаСОбработчикамиОбновления() + "," + ИмяФайлаСНомеромВерсииКонфигурации();
			Иначе
				ПараметрыДействия.ФайлРезультатов = ИмяФайлаСНомеромВерсииКонфигурации();
			КонецЕсли;
			
			ТекстКоманды =
			" /Execute ""%ФайлОбработки%"" "
			+ " /C ""Run;OutFileHandlers=""""%ИмяФайлаСОбработчикамиОбновления%"""";OutFileVersion=""""%ИмяФайлаСНомеромВерсииКонфигурации%""""""";
			
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлОбработки%", ФайлОбработки);
			
			Если ЗагрузитьОбработчикиОбновления Тогда
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайлаСОбработчикамиОбновления%", ИмяФайлаСОбработчикамиОбновления());
			Иначе
				ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайлаСОбработчикамиОбновления%", "");
			КонецЕсли;
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайлаСНомеромВерсииКонфигурации%", ИмяФайлаСНомеромВерсииКонфигурации());
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилищаВРежимеПредприятие(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВсеМодулиИзБазыОсновногоХранилища(ПараметрыДействия)			
	
	Если ПараметрыДействия.СостояниеВыполнения = "" ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ПрименитьИзмененияКПодключеннойБазе");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			КаталогВыгрузкиФайловКонфигурацииИзОсновногоХранилища = ПутьККаталогуВременнойБазы() + "DumpConfigFiles" + ПолучитьРазделительПути();
			                 
			ТекстКоманды =
			" /DumpConfigFiles ""%КаталогВыгрузкиФайловКонфигурацииИзОсновногоХранилища%"" -Module"
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%КаталогВыгрузкиФайловКонфигурацииИзОсновногоХранилища%", КаталогВыгрузкиФайловКонфигурацииИзОсновногоХранилища);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
												
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПромежуточнуюБазу(ПараметрыДействия)
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		ПараметрыДействия.СостояниеВыполнения = "Выполняется";
		
		Попытка
			УдалитьФайлы(ПутьККаталогуВременнойБазы());
		Исключение
		КонецПопытки;
		
		ПутьККаталогуВременнойБазы = ПутьККаталогуВременнойБазы();
		ВерсияПлатформы = ?(ЗначениеЗаполнено(ВерсияПлатформыОсновногоХранилища),
								ВерсияПлатформыОсновногоХранилища, 
								ВерсияПлатформыСППР);
								
		ФайлЗапуска1С = СтрЗаменить(ШаблонЗапуска1С, "%ВерсияПлатформы%", ВерсияПлатформы);
		
		ТекстКоманды =
		"""%ФайлЗапуска1С%"" CREATEINFOBASE File = ""%ПутьККаталогуВременнойБазы%""";
		
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлЗапуска1С%", ФайлЗапуска1С);
		ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ПутьККаталогуВременнойБазы%", ПутьККаталогуВременнойБазы);
		
		ЗапуститьПриложение(ТекстКоманды,,Истина);
		
		ПараметрыДействия.СостояниеВыполнения = "Выполнено";
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПутьККаталогуВременнойБазы()
	Возврат КаталогВременныхФайлов() + "ForTempConf" + ХэшПроектаИВерсии + ПолучитьРазделительПути();
КонецФункции

&НаКлиенте
Функция ИмяФайлаСОбработчикамиОбновления()
	Возврат ПутьККаталогуВременнойБазы() + "FileOfUpdateHandles.txt";	
КонецФункции

&НаКлиенте
Функция ИмяФайлаСНомеромВерсииКонфигурации()
	Возврат ПутьККаталогуВременнойБазы() + "VersionNumber.txt";
КонецФункции

&НаКлиенте
Процедура СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("СформироватьФайлОписанияОбработчиковОбновленияИНомераВерсии,СоздатьПромежуточнуюБазу");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ТекущаяВерсия = ТекущаяВерсияИзФайлаМассивом();
			
			ТекущаяВерсия[3] = Строка(Число(ТекущаяВерсия[3]) + 1);
			НоваяВерсия      = СтрСоединить(ТекущаяВерсия, ".");
			
			ТекстОписанияКонфигурации = ТекстОписанияКонфигурации();
			ТекстОписанияКонфигурации = СтрЗаменить(ТекстОписанияКонфигурации, "%ВерсияКонфигурации%", НоваяВерсия);
			
			ПутьККаталогуВременнойБазы = ПутьККаталогуВременнойБазы();
			КаталогЗагрузкиФайла       = ПутьККаталогуВременнойБазы + "DumpFiles" + ПолучитьРазделительПути();
			
			СоздатьКаталог(КаталогЗагрузкиФайла);
			
			ТекстовыйДокументДляЗаписи = Новый ТекстовыйДокумент;
			ТекстовыйДокументДляЗаписи.УстановитьТекст(ТекстОписанияКонфигурации);
			ТекстовыйДокументДляЗаписи.Записать(КаталогЗагрузкиФайла + "Configuration.xml");
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ТекстКоманды =
			" /LoadConfigFromFiles ""%КаталогЗагрузкиФайла%"""
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%КаталогЗагрузкиФайла%", КаталогЗагрузкиФайла);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаПромежуточнойБазы(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
														
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПромежуточнуюБазуВФайл(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("СгенерироватьФайлыИЗагрузитьВПромежуточнуюБазу");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
						
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ТекстКоманды =
			" /DumpCfg ""%ИмяФайла%"""
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайла%", ПутьККаталогуВременнойБазы() + "NewVersion.cf");
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаПромежуточнойБазы(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
														
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединитьБазуВерсииИФайл(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("СгенерироватьФайлыМодулейИЗалитьВБазу,СохранитьПромежуточнуюБазуВФайл");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ТекстНастроекОбъединенияПромежуточнойБазыИВерсии = ТекстНастроекОбъединенияПромежуточнойБазыИВерсии();
			ПутьККаталогуВременнойБазы = ПутьККаталогуВременнойБазы();
			
			ТекстовыйДокументДляЗаписи = Новый ТекстовыйДокумент;
			ТекстовыйДокументДляЗаписи.УстановитьТекст(ТекстНастроекОбъединенияПромежуточнойБазыИВерсии);
			ТекстовыйДокументДляЗаписи.Записать(ПутьККаталогуВременнойБазы + "MergeSettings.xml");
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ТекстКоманды =
			" /MergeCfg ""%ИмяФайлаCF%"" -Settings ""%ИмяФайлаНастроек%"" -force"
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайлаCF%", ПутьККаталогуВременнойБазы + "NewVersion.cf");
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ИмяФайлаНастроек%", ПутьККаталогуВременнойБазы + "MergeSettings.xml");
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
														
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьФайлыМодулейИЗалитьВБазу(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("ВыгрузитьВсеМодулиИзБазыОсновногоХранилища,СгенерироватьТекстыОписанияОбработчиковОбновления");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ПутьККаталогуВременнойБазы = ПутьККаталогуВременнойБазы();
			ИсходныйКаталог = ПутьККаталогуВременнойБазы + "DumpConfigFiles" + ПолучитьРазделительПути();
			ЦелевойКаталог = ПутьККаталогуВременнойБазы + "NewDumpConfigFiles" + ПолучитьРазделительПути();

			СоздатьКаталог(ЦелевойКаталог);
			
			Для Каждого Модуль из ТекстыОписанияОбработчиковОбновления Цикл
				СоздатьНовыйФайлМодуля(Модуль,ИсходныйКаталог, ЦелевойКаталог);	
			КонецЦикла;
			
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);
			
			ТекстКоманды =
			" /LoadConfigFiles ""%КаталогНовыхФайлов%"" -Module"
			+ " /DumpResult ""%DumpResult%"""
			+ " /Out ""%ЛогФайл%""";
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%КаталогНовыхФайлов%", ЦелевойКаталог);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
														
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаложитьИзмененияВХранилищеВерсии(ПараметрыДействия)
	
	Если ПараметрыДействия.СостояниеВыполнения = "" 
		ИЛИ ПараметрыДействия.СостояниеВыполнения = "Ожидание" Тогда
		
		РезультатВыполненияПредыдущихДействий = ПроверитьВыполнениеДействий("СгенерироватьФайлыМодулейИЗалитьВБазу,ОбъединитьБазуВерсииИФайл");
		
		Если РезультатВыполненияПредыдущихДействий = "Выполнено" Тогда
			
			ПараметрыДействия.СостояниеВыполнения = "Выполняется";
			
			ФайлОбъектов = СоздатьФайлДляМодулейОбновленияИБ();
			ЗаполнитьИменаЛогФайлов(ПараметрыДействия);

			ТекстКоманды =
				" /ConfigurationRepositoryCommit -objects ""%ФайлОбъектов%"" -comment ""%ТекстДляХранилища%"" -force"
				+ " /DumpResult ""%DumpResult%"""
				+ " /Out ""%ЛогФайл%""";
				
			ТекстДляХранилища = НСтр("ru = 'Обновление модулей описания обработчиков обновления информационной базы. Выполненено с помощью СППР.'");
			
			Если ИспользоватьСлешиВТекстеЗакладкиВХранилище Тогда
				ТекстДляХранилища = "// " + ТекстДляХранилища;
			КонецЕсли;
			
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ФайлОбъектов%", ФайлОбъектов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ТекстДляХранилища%", ТекстДляХранилища);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%ЛогФайл%", ПараметрыДействия.ФайлРезультатов);
			ТекстКоманды = СтрЗаменить(ТекстКоманды, "%DumpResult%", ПараметрыДействия.DumpResult);
			
			ПараметрыЗапуска = ПараметрыЗапускаОсновногоХранилища(ТекстКоманды);
			ОбщегоНазначенияСППРКлиент.ЗапуститьПриложение1СНаКлиенте(
				ПараметрыЗапуска.ШаблонКоманды, ПараметрыЗапуска.ПараметрыКоманды);

			Попытка
				УдалитьФайлы(ПутьККаталогуВременнойБазы());
			Исключение
				// Не нужно обрабатывать	
			КонецПопытки;
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "Выполняется" Тогда	
			
			ПараметрыДействия.СостояниеВыполнения = "Ожидание";
			
		ИначеЕсли РезультатВыполненияПредыдущихДействий = "ЕстьОшибки" Тогда	
				
			ПараметрыДействия.СостояниеВыполнения = "Отменено";
			
		КонецЕсли; 
														
	ИначеЕсли ПараметрыДействия.СостояниеВыполнения = "Выполняется" Тогда
		
		ОпределитьСостояниеВыполнения(ПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйФайлМодуля(Модуль,ИсходныйКаталог, ЦелевойКаталог)
		
	ИмяФайла = "ОбщийМодуль." + Модуль.Ключ + ".Модуль.txt";
	
	ФайлНаДиске = Новый Файл(ИсходныйКаталог + ИмяФайла);
	Если НЕ ФайлНаДиске.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИсходныйКаталог + ИмяФайла);
	ТекстМодуля = ТекстовыйДокумент.ПолучитьТекст();
	
	ПерваяСтрока = СокрЛП(СтрПолучитьСтроку(Модуль.Значение, 1));
	
	ПозицияНачалаПроцедуры = СтрНайти(ТекстМодуля, ПерваяСтрока) - 1;
	ПозицияКонцаПроцедуры  = СтрНайти(ТекстМодуля, "КонецПроцедуры",,ПозицияНачалаПроцедуры) + СтрДлина("КонецПроцедуры") - 1;
	
	ТекстМодуля = Лев(ТекстМодуля, ПозицияНачалаПроцедуры) + Модуль.Значение + Прав(ТекстМодуля, СтрДлина(ТекстМодуля) - ПозицияКонцаПроцедуры);
	
	ПозицияНачалаНомераВерсии = СтрНайти(ТекстМодуля, "Описание.Версия = """) + СтрДлина("Описание.Версия = """);
	
	Если ПозицияНачалаНомераВерсии > СтрДлина("Описание.Версия = """) + 1 Тогда
		НовыйНомерСборки = Строка(Число(ТекущаяВерсияИзФайлаМассивом()[3]) + 1);
		
		ПозицияКонцаНомераВерсии = СтрНайти(ТекстМодуля, """;",,ПозицияНачалаНомераВерсии);
		
		СтараяВерсияМассивом    = СтрРазделить(Сред(ТекстМодуля, ПозицияНачалаНомераВерсии, ПозицияКонцаНомераВерсии - ПозицияНачалаНомераВерсии), ".");
		СтараяВерсияМассивом[3] = НовыйНомерСборки;
		
		ТекстМодуля = Лев(ТекстМодуля, ПозицияНачалаНомераВерсии - 1) + СтрСоединить(СтараяВерсияМассивом, ".") + Прав(ТекстМодуля, СтрДлина(ТекстМодуля) - ПозицияКонцаНомераВерсии + 1);
		
	КонецЕсли;
	
	ТекстовыйДокумент.УстановитьТекст(ТекстМодуля);
	ТекстовыйДокумент.Записать(ЦелевойКаталог + ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Функция ТекущаяВерсияИзФайлаМассивом()
	ЧтениеФайлаСНомеромВерсии = Новый ЧтениеТекста(ИмяФайлаСНомеромВерсииКонфигурации());
	Возврат СтрРазделить(ЧтениеФайлаСНомеромВерсии.ПрочитатьСтроку(), ".");
КонецФункции

&НаСервереБезКонтекста
Функция ТекстНастроекОбъединенияПромежуточнойБазыИВерсии()
	Возврат Обработки.РаботаСХранилищем.ПолучитьМакет("ФайлMergeSettings").ПолучитьТекст();	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстОписанияКонфигурации()
	
	Возврат Обработки.РаботаСХранилищем.ПолучитьМакет("ФайлConfiguration").ПолучитьТекст();
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбработкаСозданияФайлаОписанияОбработчиков(УникальныйИдентификатор)
	
	Возврат ПоместитьВоВременноеХранилище(Обработки.ЗагрузкаМетаданных.ПолучитьМакет("ВыгрузкаОбработчиков"), УникальныйИдентификатор); 
	
КонецФункции

&НаКлиенте
Функция СоздатьФайлДляМодулейОбновленияИБ()
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	
	ТекстДляЗахвата = "<Objects xmlns=""http://v8.1c.ru/8.3/config/objects"" version=""1.0"">";
	
	ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + "<Configuration includeChildObjects = ""false""/>";
	
	ТекстЗахватаМодулейОбновленияИБ = "";
	ШаблонТекстОбъектов = "<Object fullName = ""%1"" includeChildObjects= ""false"" />";
	
	Для Каждого Модуль из ТекстыОписанияОбработчиковОбновления Цикл
		ТекстОбъект = СтрШаблон(ШаблонТекстОбъектов, "ОбщийМодуль." + Модуль.Ключ);
	    ТекстЗахватаМодулейОбновленияИБ = 
				ТекстЗахватаМодулейОбновленияИБ 
				+ ?(ТекстЗахватаМодулейОбновленияИБ <> "", Символы.ПС, "") 
				+ ТекстОбъект;
				
	КонецЦикла;
	
	ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + ТекстЗахватаМодулейОбновленияИБ;
	ТекстДляЗахвата = ТекстДляЗахвата + Символы.ПС + "</Objects>";
	ТекстовыйДокумент.УстановитьТекст(ТекстДляЗахвата);
	
	
	ФайлОбъектов = ПолучитьИмяВременногоФайла("xml");
	ТекстовыйДокумент.Записать(ФайлОбъектов, КодировкаТекста.UTF8);
	
	Возврат ФайлОбъектов;

КонецФункции

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.СтраницаШаг3.Видимость              = ЕстьОбработчикиОбновления;
	
	Элементы.РасположениеИБТехпроекта.Видимость        = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.ПользовательИБТехпроекта.Видимость        = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.АдресХранилищаТехпроекта.Видимость        = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.ПользовательХранилищаТехпроекта.Видимость = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.ПарольХранилищаТехпроекта.Видимость       = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.ОткрытьКонфигураторТехПроекта.Видимость   = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.ФайлДляПереносаИзменений.Видимость        = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	
	Элементы.СтраницаШаг1.Видимость              = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.СтраницаШаг2.Видимость              = РежимЗапуска = "ПереносИзмененийТехническогоПроекта";
	Элементы.СтраницаШаг3.Видимость              = РежимЗапуска = "ПереносИзмененийТехническогоПроекта"
													Или РежимЗапуска = "ОбновлениеОписанияОбработчиковВХранилищеВерсии";
	
	Элементы.СтраницаШагЗахватОбъектов.Видимость = РежимЗапуска = "ЗахватОбъектов";
	
	Если РежимЗапуска = "ПереносИзмененийТехническогоПроекта" Тогда
		Элементы.ГруппаНастройкиОсновногоХранилища.Заголовок = СтрШаблон(НСтр("ru = 'База подключенная к хранилищу версии %1'"),
																	ВерсияПроектаПредставление);
		ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = 'Перенос изменений в хранилище версии %1'"),
											ВерсияПроектаПредставление);
		Элементы.ИнформацияШаг1.Заголовок = 
			СтрШаблон(НСтр("ru = 'На этом шаге необходимо обеспечить, чтобы конфигурация технического проекта отличалась от конфигурации версии %1 только на изменения, внесенные техническим проектом'"),
			ВерсияПроектаПредставление);
	
	ИначеЕсли РежимЗапуска = "ОбновлениеОписанияОбработчиковВХранилищеВерсии" Тогда
	    ЭтотОбъект.Заголовок = НСтр("ru = 'Обновление описания обработчиков обновления в хранилище версии'");
		Элементы.СтраницаШаг3.Заголовок = НСтр("ru = 'Выполнение действий'");
	ИначеЕсли РежимЗапуска = "ЗахватОбъектов" Тогда
	    ЭтотОбъект.Заголовок = НСтр("ru = 'Захват объектов в хранилище версии'");
	КонецЕсли;
	
	Если РежимЗапуска = "ПереносИзмененийТехническогоПроекта"
		Или РежимЗапуска = "ОбновлениеОписанияОбработчиковВХранилищеВерсии" Тогда
		СписокДействий = СписокДействийШага("Шаг3");
		
		ВыбраныВсеДействия = Истина;
		
		Для Каждого СтрМас из СписокДействий Цикл
			Если Не ВыбраныВсеДействия = ЭтотОбъект[СтрМас] Тогда
				ВыбраныВсеДействия = Ложь;
			КонецЕсли;
			Элементы[СтрМас].Доступность = ОбщегоНазначенияКлиентСервер.РежимОтладки();
		КонецЦикла;	
		
		Элементы.ЗаложитьИзмененияВХранилищеВерсии.Доступность = Истина;
		
		Элементы.НачатьЗаново4Шаг3.Видимость = Не ВыбраныВсеДействия;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗаполнитьТаблицуОбъектовМетаданныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоРезультатамПоискаСервер(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоРезультатамПоискаСервер(Результат, ДополнительныеПараметры)
	
	ТаблицаОбъектов = ЗахватываемыеОбъекты.Выгрузить();
	
	РаботаСОбъектамиМетаданных.ЗаполнитьТаблицуПоРезультатамПоиска(ТаблицаОбъектов, Результат, ДополнительныеПараметры); 
	
	ЗахватываемыеОбъекты.Загрузить(ТаблицаОбъектов);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗахватКорняСервер()
	
	НайденныеСтроки = ЗахватываемыеОбъекты.НайтиСтроки(Новый Структура("ПолноеИмя", ИмяКонфигурации));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		НоваяСтрока = ЗахватываемыеОбъекты.Добавить();
		НоваяСтрока.ПолноеИмя = ИмяКонфигурации;		
		
	КонецЕсли;
	
	Элементы.СтраницыКомандыШагЗахватОбъектов.ТекущаяСтраница = Элементы.СтраницаКомандыШагЗахватОбъектов_Начало;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСписокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗахватываемыеОбъекты.Очистить();
	
	Для Каждого СтрМас из Результат Цикл
		НоваяСтрока = ЗахватываемыеОбъекты.Добавить();
		НоваяСтрока.ПолноеИмя = СтрМас;
	КонецЦикла;
	
	Элементы.СтраницыКомандыШагЗахватОбъектов.ТекущаяСтраница = Элементы.СтраницаКомандыШагЗахватОбъектов_Начало;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
