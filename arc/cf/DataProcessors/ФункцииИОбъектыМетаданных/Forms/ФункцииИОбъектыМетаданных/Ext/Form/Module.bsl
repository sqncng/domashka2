#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Проект = ПараметрыСеанса.ТекущийПроект;
	
	УстановитьПараметрСпискаИменаКлассов(ОбъектыМетаданных);
	УстановитьПараметрСпискаИменаКлассов(РазделыПроекта);
	
	УстановитьПараметрСпискаФункция(ИсходящиеОбъектыМетаданных, Справочники.ФункцииСистемы.ПустаяСсылка());
	УстановитьПараметрСпискаФункция(ОтчетыСервисныеОбъекты, Справочники.ФункцииСистемы.ПустаяСсылка());
	
	Проекты.УстановитьОтборВСпискеПоПроекту(Функции, Проект);
	Проекты.УстановитьОтборВСпискеПоПроекту(ОбъектыМетаданных, Проект);
	Проекты.УстановитьОтборВСпискеПоПроекту(РазделыПроекта, Проект);
	
	Справочники.ОбъектыМетаданных.УстановитьТекстИндексаКартикиВТекстеЗапроса(Элементы.ОбъектыМетаданных);
	Справочники.ОбъектыМетаданных.УстановитьТекстИндексаКартикиВТекстеЗапроса(Элементы.ИсходящиеОбъектыМетаданных);
	Справочники.ОбъектыМетаданных.УстановитьТекстИндексаКартикиВТекстеЗапроса(Элементы.ОтчетыСервисныеОбъекты);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтображениеСтраницМетаданных(ОтображениеОбъектовМетаданных, Элементы, ОбъектыМетаданных);
	УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях);
	
	УстановитьПометкиКомандОтображения(Элементы, ОтображениеОбъектовМетаданных);
	УстановитьПометкиКомандИспользования(Элементы, ИспользованиеОМВФункциях);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ФункцииСистемы" Тогда
		
		Элементы.ОбъектыМетаданных.Обновить();
		Элементы.ОбъектыМетаданныхПоРазделамПроекта.Обновить();
		
	ИначеЕсли ИмяСобытия = "ИзмененТекущийПроект" Тогда
		
		ИзменитьПооектНаСервере();
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтображениеОбъектовМетаданныхПриИзменении(Элемент)
	
	УстановитьОтображениеСтраницМетаданных(ОтображениеОбъектовМетаданных, Элементы, ОбъектыМетаданных);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеОМВФункцияхПриИзменении(Элемент)
	
	УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФункции                                

&НаКлиенте
Процедура ФункцииПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСпискаФункций",0.1,Истина);
	
КонецПроцедуры

&НаКлиенте                                                                                        
Процедура ФункцииПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ПроверитьПеретаскиваниеВФункцию(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФункцииПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбработатьПеретаскиваниеВФункцию(ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, "ИсходящиеОбъектыМетаданных");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыИсходящиеОбъектыМетаданных

&НаКлиенте
Процедура ИсходящиеОбъектыМетаданныхПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ПроверитьПеретаскиваниеВФункцию(Элементы.Функции, ПараметрыПеретаскивания,
	                                СтандартнаяОбработка, Элементы.Функции.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеОбъектыМетаданныхПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбработатьПеретаскиваниеВФункцию(ПараметрыПеретаскивания, СтандартнаяОбработка,
	                                 Элементы.Функции.ТекущаяСтрока, "ИсходящиеОбъектыМетаданных");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыОтчетыСервисныеОбъекты

&НаКлиенте
Процедура ОтчетыСервисныеОбъектыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ПроверитьПеретаскиваниеВФункцию(Элементы.Функции, ПараметрыПеретаскивания,
	                                СтандартнаяОбработка, Элементы.Функции.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыСервисныеОбъектыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбработатьПеретаскиваниеВФункцию(ПараметрыПеретаскивания, СтандартнаяОбработка,
	                                 Элементы.Функции.ТекущаяСтрока, "ОтчетыСервисныеОбъекты");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыОбъектыМетаданных

&НаКлиенте
Процедура ОбъектыМетаданныхНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ОбработатьНачалоПеретаскиванияОбъектовМетаданных(Элемент, ПараметрыПеретаскивания, Выполнение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийМассивТаблицыОбъектыМетаданныхПоРазделамПроекта

&НаКлиенте
Процедура ОбъектыМетаданныхПоРазделамПроектаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ОбработатьНачалоПеретаскиванияОбъектовМетаданных(Элемент, ПараметрыПеретаскивания, Выполнение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыРазделыПроекта

&НаКлиенте
Процедура РазделыПроектаПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСпискаРазделов",0.1,Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользованиеВФункцияхВсе(Команда)
	
	ИспользованиеОМВФункциях = 0;
	УстановитьПометкиКомандИспользования(Элементы, ИспользованиеОМВФункциях);
	УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеВФункцияхИспользуются(Команда)
	
	ИспользованиеОМВФункциях = 1;
	УстановитьПометкиКомандИспользования(Элементы, ИспользованиеОМВФункциях);
	УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеВФункцияхНеИспользуются(Команда)
	
	ИспользованиеОМВФункциях = 2;
	УстановитьПометкиКомандИспользования(Элементы, ИспользованиеОМВФункциях);
	УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеМетаданныхПоИерархии(Команда)
	
	ОтображениеОбъектовМетаданных = 0;
	УстановитьПометкиКомандОтображения(Элементы, ОтображениеОбъектовМетаданных);
	УстановитьОтображениеСтраницМетаданных(ОтображениеОбъектовМетаданных, Элементы, ОбъектыМетаданных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеМетаданныхПоРазделамПроекта(Команда)
	
	ОтображениеОбъектовМетаданных = 1;
	УстановитьПометкиКомандОтображения(Элементы, ОтображениеОбъектовМетаданных);
	УстановитьОтображениеСтраницМетаданных(ОтображениеОбъектовМетаданных, Элементы, ОбъектыМетаданных);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФункцию(Команда)
	
	Если Элементы.СтраницыОбъектыМетаданных.ТекущаяСтраница = Элементы.СтраницаОбъектыМетаданныхПоИерархии Тогда
		ВыделенныеСтроки = Элементы.ОбъектыМетаданных.ВыделенныеСтроки;
		ТаблицаСписка = Элементы.ОбъектыМетаданных;
	Иначе
		ВыделенныеСтроки = Элементы.ОбъектыМетаданныхПоРазделамПроекта.ВыделенныеСтроки;
		ТаблицаСписка = Элементы.ОбъектыМетаданныхПоРазделамПроекта;
	КонецЕсли;
	
	ОбъектыДляВключенияВФункцию = Новый Массив;
	Для Каждого СтрокаСписка из ВыделенныеСтроки Цикл
		ДанныеСтроки = ТаблицаСписка.ДанныеСтроки(СтрокаСписка);
		Если НЕ ДанныеСтроки.ЭтоГруппа Тогда
			ОбъектыДляВключенияВФункцию.Добавить(СтрокаСписка);
		КонецЕсли;
	КонецЦикла;
	
	Если ОбъектыДляВключенияВФункцию.Количество()=0 Тогда
		ТекстСообщения = НСтр("ru='Не выбраны элементы для создания функции'");
		ОбщегоНазначенияКЛиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
		
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ИсходящиеОбъектыМетаданных", ОбъектыДляВключенияВФункцию);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ОткрытьФорму("Справочник.ФункцииСистемы.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФункцииИспользующиеОбъектМетаданных(Команда)
	
	Если Элементы.СтраницыОбъектыМетаданных.ТекущаяСтраница = Элементы.СтраницаОбъектыМетаданныхПоИерархии Тогда
		ВыделенныеСтроки = Элементы.ОбъектыМетаданных.ВыделенныеСтроки;
		ТаблицаСписка = Элементы.ОбъектыМетаданных;
	Иначе
		ВыделенныеСтроки = Элементы.ОбъектыМетаданныхПоРазделамПроекта.ВыделенныеСтроки;
		ТаблицаСписка = Элементы.ОбъектыМетаданныхПоРазделамПроекта;
	КонецЕсли;
	
	ОбъектыМетаданныхДляАнализа = Новый Массив;
	Для Каждого СтрокаСписка из ВыделенныеСтроки Цикл
		ДанныеСтроки = ТаблицаСписка.ДанныеСтроки(СтрокаСписка);
		Если НЕ ДанныеСтроки.ЭтоГруппа Тогда
			ОбъектыМетаданныхДляАнализа.Добавить(СтрокаСписка);
		КонецЕсли;
	КонецЦикла;
	
	Если ОбъектыМетаданныхДляАнализа.Количество()<>1 Тогда
		ТекстСообщения = НСтр("ru='Необходимо выбрать один объект метаданных для перехода к использующим функциям'");
		ОбщегоНазначенияКЛиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОбъектМетаданных", ОбъектыМетаданныхДляАнализа[0]);
	
	ОткрытьФорму("Справочник.ФункцииСистемы.Форма.ФункцииИспользующиеОбъектМетаданных", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСпискаФункций();
	
	ТекущиеДанные = Элементы.Функции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		СсылкаФункции = ПредопределенноеЗначение("Справочник.ФункцииСистемы.ПустаяСсылка");
	Иначе
		СсылкаФункции = ТекущиеДанные.Ссылка;
	КонецЕсли;
		
	УстановитьПараметрСпискаФункция(ИсходящиеОбъектыМетаданных, СсылкаФункции);
	УстановитьПараметрСпискаФункция(ОтчетыСервисныеОбъекты, СсылкаФункции);
	
КонецПроцедуры
																		
&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСпискаРазделов();
	
	ТекущиеДанные = Элементы.РазделыПроекта.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		СсылкаРаздела = ПредопределенноеЗначение("Справочник.РазделыПроекта.ПустаяСсылка");
	Иначе
		СсылкаРаздела = ТекущиеДанные.Ссылка;
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыМетаданных,
	                                                                        "РазделПроекта",
	                                                                        СсылкаРаздела,
																			ВидСравненияКомпоновкиДанных.ВИерархии,
																			,
																			Истина);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоИспользованиюОМ(ОбъектыМетаданных, РазделыПроекта, ИспользованиеОМВФункциях)
	
	ЗначениеИспользования = ?(ИспользованиеОМВФункциях=1, Истина, Ложь);
	ИспользоватьОтбор = (ИспользованиеОМВФункциях>0);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыМетаданных,
	                                                                        "ИспользуетсяВФункции",
	                                                                        ЗначениеИспользования,
																			ВидСравненияКомпоновкиДанных.Равно,
																			,
																			ИспользоватьОтбор);
																			
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(РазделыПроекта,
	                                                                        "ИспользуетсяВФункции",
	                                                                        ЗначениеИспользования,
																			ВидСравненияКомпоновкиДанных.Равно,
																			,
																			ИспользоватьОтбор);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеСтраницМетаданных(ОтображениеОбъектовМетаданных, Элементы, ОбъектыМетаданных)
	
	Если ОтображениеОбъектовМетаданных = 1 Тогда
		Элементы.СтраницыОбъектыМетаданных.ТекущаяСтраница = Элементы.СтраницаОбъектыМетаданныхПоРазделамПроекта;
	Иначе
		Элементы.СтраницыОбъектыМетаданных.ТекущаяСтраница = Элементы.СтраницаОбъектыМетаданныхПоИерархии;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыМетаданных,
	                                                                        "РазделПроекта",
	                                                                        Неопределено,
																			ВидСравненияКомпоновкиДанных.ВИерархии,
																			,
																			Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрСпискаИменаКлассов(Список)
	
	ИменаКлассовДляФункций = ИменаКлассовОбъектовМетаданныхДляФункций();
	Список.Параметры.УстановитьЗначениеПараметра("ИменаКлассовДляФункций", ИменаКлассовДляФункций);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрСпискаФункция(Список, ТекущаяФункция)
	
	Список.Параметры.УстановитьЗначениеПараметра("Функция", ТекущаяФункция);
	
КонецПроцедуры

&НаСервере
Функция ИменаКлассовОбъектовМетаданныхДляФункций()
	
	Имена = Новый Массив;
	Имена.Добавить("ПланыОбмена");
	Имена.Добавить("ХранилищаНастроек");
	Имена.Добавить("Константы");
	Имена.Добавить("Справочники");
	Имена.Добавить("Документы");
	Имена.Добавить("ПланыВидовХарактеристик");
	Имена.Добавить("ПланыСчетов");
	Имена.Добавить("ПланыВидовРасчета");
	Имена.Добавить("РегистрыСведений");
	Имена.Добавить("РегистрыНакопления");
	Имена.Добавить("РегистрыБухгалтерии");
	Имена.Добавить("РегистрыРасчета");
	Имена.Добавить("БизнесПроцессы");
	Имена.Добавить("Задачи");
	Имена.Добавить("Отчеты");
	Имена.Добавить("Обработки");
	
	Возврат Имена;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьНачалоПеретаскиванияОбъектовМетаданных(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	МассивЗначений = Новый Массив;
	
	Для Каждого ЗначениеПеретаскивания из ПараметрыПеретаскивания.Значение Цикл
		ДанныеСтроки = Элемент.ДанныеСтроки(ЗначениеПеретаскивания);
		Если НЕ ДанныеСтроки.ЭтоГруппа Тогда                                                        
			МассивЗначений.Добавить(ЗначениеПеретаскивания);                                  
		КонецЕсли;
	КонецЦикла;
	
	Если МассивЗначений.Количество()=0 Тогда
		Выполнение = Ложь;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = МассивЗначений;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВключениеМетаданныхВФункцию(КоллекцияОбъектовМетаданных, СсылкаФункции, ИмяТабличнойЧасти)
	
	Попытка
		ФункцияОбъект = СсылкаФункции.ПолучитьОбъект();
		ФункцияОбъект.Заблокировать();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось заблокировать Функцию'");
		ВызватьИсключение(ТекстСообщения);
	КонецПопытки;
	
	Для Каждого ОбъектМетаданных из КоллекцияОбъектовМетаданных Цикл
		НоваяСтрока = ФункцияОбъект[ИмяТабличнойЧасти].Добавить();
		НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
	КонецЦикла;
	
	Попытка
		ФункцияОбъект.Записать();
		ФункцияОбъект.Разблокировать();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось записать Функцию: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ВызватьИсключение(ТекстСообщения);
	КонецПопытки;
	
	Элементы.ОбъектыМетаданных.Обновить();
	Элементы.ОбъектыМетаданныхПоРазделамПроекта.Обновить();
	
	Элементы.ИсходящиеОбъектыМетаданных.Обновить();
	Элементы.ОтчетыСервисныеОбъекты.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкиКомандОтображения(Элементы, ОтображениеОбъектовМетаданных)
	
	Элементы.ОбъектыМетаданныхОтображениеМетаданныхПоИерархии.Пометка = (ОтображениеОбъектовМетаданных = 0);
	Элементы.ОбъектыМетаданныхОтображениеМетаданныхПоРазделамПроекта.Пометка = (ОтображениеОбъектовМетаданных = 1);
	
	Элементы.РазделыПроектаОтображениеМетаданныхПоИерархии.Пометка = (ОтображениеОбъектовМетаданных = 0);
	Элементы.РазделыПроектаОтображениеМетаданныхПоРазделамПроекта.Пометка = (ОтображениеОбъектовМетаданных = 1);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкиКомандИспользования(Элементы, ИспользованиеОМВФункциях)
	
	Элементы.ОбъектыМетаданныхИспользованиеВФункцияхВсе.Пометка = (ИспользованиеОМВФункциях = 0);
	Элементы.ОбъектыМетаданныхИспользованиеВФункцияхИспользуются.Пометка = (ИспользованиеОМВФункциях = 1);
	Элементы.ОбъектыМетаданныхИспользованиеВФункцияхНеИспользуются.Пометка = (ИспользованиеОМВФункциях = 2);
	
	Элементы.РазделыПроектаИспользованиеВФункцияхВсе.Пометка = (ИспользованиеОМВФункциях = 0);
	Элементы.РазделыПроектаИспользованиеВФункцияхИспользуются.Пометка = (ИспользованиеОМВФункциях = 1);
	Элементы.РазделыПроектаИспользованиеВФункцияхНеИспользуются.Пометка = (ИспользованиеОМВФункциях = 2);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПооектНаСервере()
	
	Проект = ПараметрыСеанса.ТекущийПроект;
	
	Проекты.УстановитьОтборВСпискеПоПроекту(Функции, Проект);
	Проекты.УстановитьОтборВСпискеПоПроекту(ОбъектыМетаданных, Проект);
	Проекты.УстановитьОтборВСпискеПоПроекту(РазделыПроекта, Проект);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПеретаскиваниеВФункцию(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка)
	
	ЗначениеПеретаскивания = ПараметрыПеретаскивания.Значение;
	
	Если ТипЗнч(ЗначениеПеретаскивания) = Тип("Массив") Тогда
		Если ЗначениеПеретаскивания.Количество()>0 Тогда
			Если ТипЗнч(ЗначениеПеретаскивания[0]) = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
				
				Если Строка = Неопределено ИЛИ Строка = ПредопределенноеЗначение("Справочник.ФункцииСистемы.ПустаяСсылка") Тогда
					ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		            ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
					СтандартнаяОбработка = Ложь;
				Иначе
					ДанныеСтроки = Элемент.ДанныеСтроки(Строка);
					
					Если ДанныеСтроки.ЭтоГруппа Тогда
						ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
						ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
						СтандартнаяОбработка = Ложь;
					Иначе
						СтандартнаяОбработка = Ложь;
					КонецЕсли;
					                                                                              
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;                                                                   
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПеретаскиваниеВФункцию(ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, ИмяТабличнойЧасти)
	
	ЗначениеПеретаскивания = ПараметрыПеретаскивания.Значение;
	
	Если ТипЗнч(ЗначениеПеретаскивания) = Тип("Массив") Тогда
		Если ЗначениеПеретаскивания.Количество()>0 Тогда
			Если ТипЗнч(ЗначениеПеретаскивания[0]) = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
				ОбработатьВключениеМетаданныхВФункцию(ЗначениеПеретаскивания, Строка, ИмяТабличнойЧасти);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;                                                                            
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти