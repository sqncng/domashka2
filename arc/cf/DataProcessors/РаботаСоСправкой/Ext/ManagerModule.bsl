#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Формирует дерево метаданных
//
// Параметры:
//  Проект  - СправочникСсылка.Проект - Проект
//  Отметка - Булево - Проставляет отметку для всех элементов дерева
// 
// Возвращаемое значение:
//   - ДеревоЗначений - Дерево метаданных
//
Функция ДеревоМетаданныхДляСправки(Проект, Отметка = Ложь) Экспорт
	
	ДеревоМетаданных = Новый ДеревоЗначений;
	ДеревоМетаданных.Колонки.Добавить("Представление");
	ДеревоМетаданных.Колонки.Добавить("ОбъектСправки");
	ДеревоМетаданных.Колонки.Добавить("ОбъектПоставщика");
	ДеревоМетаданных.Колонки.Добавить("Поставщик");
	ДеревоМетаданных.Колонки.Добавить("ПравилоПоддержки");
	ДеревоМетаданных.Колонки.Добавить("ПравилоПоддержкиКартинка");
	ДеревоМетаданных.Колонки.Добавить("Наименование");
	ДеревоМетаданных.Колонки.Добавить("ЭтоГруппа",             Новый ОписаниеТипов("Булево"));
	ДеревоМетаданных.Колонки.Добавить("Предок");
	ДеревоМетаданных.Колонки.Добавить("Имя");
	ДеревоМетаданных.Колонки.Добавить("ИндексКартинки");
	ДеревоМетаданных.Колонки.Добавить("Порядок",               Новый ОписаниеТипов("Число"));
	ДеревоМетаданных.Колонки.Добавить("Код",                   Новый ОписаниеТипов("Число"));
	ДеревоМетаданных.Колонки.Добавить("Отметка",               Новый ОписаниеТипов("Число"));
	ДеревоМетаданных.Колонки.Добавить("СтароеЗначениеОтметки", Новый ОписаниеТипов("Число"));
	ДеревоМетаданных.Колонки.Добавить("ИмяФайла");
	ДеревоМетаданных.Колонки.Добавить("ИмяФайлаEDT");
	ДеревоМетаданных.Колонки.Добавить("ИмяОбъектаЗахвата");
	ДеревоМетаданных.Колонки.Добавить("ВключатьВСправку",      Новый ОписаниеТипов("Булево"));
	ДеревоМетаданных.Колонки.Добавить("ВеткаИсточник");
	ДеревоМетаданных.Колонки.Добавить("СправкаБерется",        Новый ОписаниеТипов("Булево"));
	
	СоответствиеКартинокГруппОбъектовМетаданных     = РаботаСОбъектамиМетаданных.ПолучитьСоответствиеКартинокГруппОбъектовМетаданных(Проект);
	СоответствиеКартинокЭлементовОбъектовМетаданных = РаботаСОбъектамиМетаданных.ПолучитьСоответствиеКартинокЭлементовОбъектовМетаданных(Проект);
	
	// Замечание. Структура объектов метаданных в этой ИБ
	// не в полной мере соответствует структуре объектов метаданных,
	// как она показывается в конфигураторе
	
	// Чтобы структура была подобной тому, как она отображается в конфигураторе
	// она будет собираться последовательно
		
	Запрос = Новый Запрос;
	
	СтруктураГрупп = РаботаСОбъектамиМетаданных.СтруктураГруппОбъектовМетаданных(Проект);
	
	Запрос.Текст = ТекстЗапросаДляФормированияДерева();
	Запрос.УстановитьПараметр("Проект",                     Проект);
	Запрос.УстановитьПараметр("СписокКлассов",              СписокКлассов(СтруктураГрупп));
	Запрос.УстановитьПараметр("СписокКлассовОбщихОбъектов", СписокКлассовОбщихОбъектов(СтруктураГрупп));
	Запрос.УстановитьПараметр("СписокКлассовИсключений",    СписокКлассовИсключений(СтруктураГрупп));
	
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатЗапросаПоПодсистемам    = Результат[1];
	РезультатЗапросаПоОбщимОбъектам  = Результат[2];
	РезультатЗапросаПоОбъектам       = Результат[3];
	РезультатЗапросаПоФормамОбъектов = Результат[4];
	
	// Общие объекты
	ДеревоРезультата = РезультатЗапросаПоОбщимОбъектам.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
	РекурсивноеДобавлениеСтрокВДерево(ДеревоМетаданных, ДеревоРезультата.Строки, СоответствиеКартинокГруппОбъектовМетаданных, 
	                                  СоответствиеКартинокЭлементовОбъектовМетаданных, Отметка);
	
	// Получить ссылку на узел общих объектов.	
	УзелОбщие = УзелОбщихОбъектов(ДеревоМетаданных);

	// Подсистемы
	
	УзелПодсистемы = УзелОбщие.Строки.Добавить();
	УзелПодсистемы.Представление  = "Подсистемы";
	УзелПодсистемы.Наименование   = "Подсистемы";
	УзелПодсистемы.ОбъектСправки  = Справочники.Подсистемы.ПустаяСсылка();
	УзелПодсистемы.ЭтоГруппа      = Истина;
	УзелПодсистемы.Предок         = Неопределено;
	УзелПодсистемы.ИндексКартинки = 19;
	УзелПодсистемы.Порядок        = 0;
	УзелПодсистемы.Отметка        = Отметка;
	
	ДеревоРезультата = РезультатЗапросаПоПодсистемам.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	РекурсивноеДобавлениеСтрокВДерево(УзелПодсистемы, ДеревоРезультата.Строки, СоответствиеКартинокГруппОбъектовМетаданных, 
	                                  СоответствиеКартинокЭлементовОбъектовМетаданных, Отметка);
	
	УзелОбщие.Строки.Сортировать("Порядок, Код");
		
	// Основные прикладные объекты
	
	ДеревоРезультата = РезультатЗапросаПоОбъектам.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	РекурсивноеДобавлениеСтрокВДерево(ДеревоМетаданных, ДеревоРезультата.Строки, СоответствиеКартинокГруппОбъектовМетаданных, 
	                                  СоответствиеКартинокЭлементовОбъектовМетаданных, Отметка);
		
	// Формы объектов метаданных
	
	ДеревоРезультата = РезультатЗапросаПоФормамОбъектов.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	// Обход владельцев
	Для Каждого УзелВладельца Из ДеревоРезультата.Строки Цикл
		
		УзелОбъектаМетаданных = ДеревоМетаданных.Строки.Найти(УзелВладельца.ОбъектМетаданных, "ОбъектСправки", Истина);
		Если УзелОбъектаМетаданных <> Неопределено Тогда
			
			УзелФорм = УзелОбъектаМетаданных.Строки.Добавить();
			УзелФорм.Представление  = "Формы";
			УзелФорм.Наименование   = УзелОбъектаМетаданных.Наименование + ".Формы";
			УзелФорм.ОбъектСправки  = Справочники.ФормыОбъектовМетаданных.ПустаяСсылка();
			УзелФорм.ЭтоГруппа      = Истина;
			УзелФорм.Предок         = Неопределено;
			УзелФорм.ИндексКартинки = 47;
			УзелФорм.Отметка        = Отметка;
			
			РекурсивноеДобавлениеСтрокВДерево(УзелФорм, УзелВладельца.Строки, СоответствиеКартинокГруппОбъектовМетаданных, 
			                                  СоответствиеКартинокЭлементовОбъектовМетаданных, Отметка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДеревоМетаданных.Строки.Сортировать("Порядок, Код");
	
	Возврат ДеревоМетаданных;
	
КонецФункции

// Функция - Сформировать файлы справки
//
// Параметры:
//  ДеревоМетаданных - ДеревоЗначений - Дерево метаданных формируемых функцией РаботаСоСправкой.ДеревоМетаданныхДляСправки()
//  Проект           - СправочникСсылка - Проект
//  ДополнительныеПараметры - Структура
//    * ВключатьСсылкиНаСправкуПоискаВСписках                 - Булево
//    * ФормироватьФайлыСправкиПоОбъектамНеВключаемымВСправку - Булево
//    * КаталогВыгрузки - Строка - Директория в которую будет выгружена справка,
//                                 нужна для корректого формирования файлов частичной загрузки
// 
// Возвращаемое значение:
//   - Структура
//     * СоответствиеФайловСправки - Соответствие
//     * АдресФайлаЗахвата         - Адрес во временном хранилище
//     * АдресФайлаЗагрузки        - Адрес во временном хранилище
//     * ИменаОбъектовДляЗахвата   - Массив
//     * ИменаОбъектовДляЗагрузки  - Массив
//     * СоответствиеИменДляЗахватаИЗагрузки - Соответсвие
//
Функция СформироватьФайлыСправки(ДеревоМетаданных, Проект, ДополнительныеПараметры) Экспорт
	
	ВключатьСсылкиНаСправкуПоискаВСписках                 = ДополнительныеПараметры.ВключатьСсылкиНаСправкуПоискаВСписках;
	ФормироватьФайлыСправкиПоОбъектамНеВключаемымВСправку = ДополнительныеПараметры.ФормироватьФайлыСправкиПоОбъектамНеВключаемымВСправку;
	КаталогВыгрузки         = ДополнительныеПараметры.КаталогВыгрузки;
	РежимРазработкиПроекта  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "РежимРазработки");
	
	ФорматВыгрузкиЗадан = Ложь;
	ВыгружатьВФорматеEDT = Ложь;
	
	Если ДополнительныеПараметры.Свойство("ФорматВыгрузки") Тогда
		Если ДополнительныеПараметры.ФорматВыгрузки = 1 Тогда
			ВыгружатьВФорматеEDT = Истина;
			ФорматВыгрузкиЗадан = Истина;
		ИначеЕсли ДополнительныеПараметры.ФорматВыгрузки = 2 Тогда
			ВыгружатьВФорматеEDT = Ложь;
			ФорматВыгрузкиЗадан = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ФорматВыгрузкиЗадан Тогда
		// Если явно не указали формат при выгрузке- берется с учетом режима разработки проекта
		ВыгружатьВФорматеEDT    = (РежимРазработкиПроекта = Перечисления.РежимРазработки.ВGitРепозитории);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КаталогВыгрузки) Тогда
		КаталогВыгрузки = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВыгрузки);
	КонецЕсли; 
	
	СоответствиеФайловСправки = Новый Соответствие;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Отметка", 1);
	
	ИменаОбъектовДляЗахвата             = Новый Массив;
	ИменаОбъектовДляЗагрузки            = Новый Массив;
	СоответствиеИменДляЗахватаИЗагрузки = Новый Соответствие;
	
	МассивОтмеченныхСтрок = ДеревоМетаданных.Строки.НайтиСтроки(СтруктураОтбора, Истина);
	
	Если МассивОтмеченныхСтрок.Количество() = 0 Тогда
		
		Ответ = Новый Структура;
		Ответ.Вставить("АдресФайлаЗахвата",         Неопределено);
		Ответ.Вставить("АдресФайлаЗагрузки",        Неопределено);
		Ответ.Вставить("ИменаОбъектовДляЗахвата",             ИменаОбъектовДляЗахвата);
		Ответ.Вставить("ИменаОбъектовДляЗагрузки",            ИменаОбъектовДляЗагрузки);
		Ответ.Вставить("СоответствиеИменДляЗахватаИЗагрузки", СоответствиеИменДляЗахватаИЗагрузки);
		Ответ.Вставить("СоответствиеФайловСправки", СоответствиеФайловСправки);
		
		Возврат Ответ;
		
	КонецЕсли;
	
	ВариантПроекты = РаботаСоСправкойПовтИсп.ПроектыДляКоторыхВедетсяСправка(Проект);
	Если ВариантПроекты.Количество() > 0 Тогда
		ВариантПроектПоУмолчанию = Проект;
	Иначе 
		ВариантПроектПоУмолчанию = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли; 
	
	Для Каждого СтрокаОбъекта Из МассивОтмеченныхСтрок Цикл
		
		Если СтрокаОбъекта.Отметка = 1 Тогда
			
			// Пропускаем библиотечные объекты на поддержке
			Если ЗначениеЗаполнено(СтрокаОбъекта.Поставщик)
			   И СтрокаОбъекта.ПравилоПоддержки = Перечисления.ПравилаПоддержки.НеРедактируется Тогда
				Продолжить;
			КонецЕсли; 
			
			Если   ЗначениеЗаполнено(СтрокаОбъекта.ОбъектСправки)
			     И НЕ СтрокаОбъекта.ЭтоГруппа
			     И ЗначениеЗаполнено(СтрокаОбъекта.Родитель)
			     И (    КлассОбъектовСоСправкой(СтрокаОбъекта.Родитель.Имя)
			        ИЛИ ТипЗнч(СтрокаОбъекта.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы")
			        ИЛИ ТипЗнч(СтрокаОбъекта.ОбъектСправки) = Тип("СправочникСсылка.ФормыОбъектовМетаданных")) Тогда
				
				Если ТипЗнч(СтрокаОбъекта.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы") Тогда
					НаименованиеФайла    = ?(ВыгружатьВФорматеEDT,
					                         ПолноеИмяПодсистемы(СтрокаОбъекта, "ИмяФайлаEDT", "Subsystems", "/"),
					                         ПолноеИмяПодсистемы(СтрокаОбъекта));
					ИмяОбъектаДляЗахвата = ПолноеИмяПодсистемы(СтрокаОбъекта, "ИмяОбъектаЗахвата", "Подсистема");
				Иначе
					НаименованиеФайла    = ?(ВыгружатьВФорматеEDT, СтрокаОбъекта.ИмяФайлаEDT, СтрокаОбъекта.ИмяФайла);
					ИмяОбъектаДляЗахвата = СтрокаОбъекта.ИмяОбъектаЗахвата;
				КонецЕсли;
				
				ИмяФайла = ?(ВыгружатьВФорматеEDT, СтрШаблон("%1/Help/ru.html", НаименованиеФайла),
				                                   СтрШаблон("%1.Help.ru.html", НаименованиеФайла));
				
				ТекстСправки = "";
				
				Если СтрокаОбъекта.ВключатьВСправку Тогда
					
					Если СтрокаОбъекта.СправкаБерется И ЗначениеЗаполнено(СтрокаОбъекта.ОбъектПоставщика) Тогда
						ОбъектСправки        = СтрокаОбъекта.ОбъектПоставщика;
						ВариантПроектСправки = Проект;
					Иначе 
						ОбъектСправки        = СтрокаОбъекта.ОбъектСправки;
						ВариантПроектСправки = ВариантПроектПоУмолчанию;
					КонецЕсли; 
					
					
					ПараметрыФормированияСправки = ФормированиеСправкиСервер.ПараметрыФормированияСправки();
					ПараметрыФормированияСправки.Вставить("ВариантПроектСправки",                  ВариантПроектСправки);
					ПараметрыФормированияСправки.Вставить("ВключатьСсылкиНаСправкуПоискаВСписках", ВключатьСсылкиНаСправкуПоискаВСписках);
					НеобработанныйТекстСправки = ФормированиеСправкиСервер.СформироватьСправку(ОбъектСправки,
					                                 ПараметрыФормированияСправки,
					                                 ,
					                                 СоответствиеФайловСправки);
					
					ЗаголовокВставлен = Ложь;
					
					Пока СтрДлина(НеобработанныйТекстСправки) > 0 Цикл
						
						ПозицияТегаНачала = Найти(НеобработанныйТекстСправки, "<A href=");
						
						Если ПозицияТегаНачала = 0 Тогда
							// В тексте нет переходов
							ТекстСправки = ТекстСправки + НеобработанныйТекстСправки;
							НеобработанныйТекстСправки = "";
						Иначе
							ТекстСправки         = ТекстСправки + Сред(НеобработанныйТекстСправки, 1, ПозицияТегаНачала - 1);
							ОстатокТекстаСправки = Сред(НеобработанныйТекстСправки,ПозицияТегаНачала + 9);
							ПозицияТегаКонца     = Найти(ОстатокТекстаСправки, "</A>");
							
							Если ПозицияТегаКонца = 0 Тогда
								// Это ошибка, обрезаем тэг начала и выдаем справку
								НеобработанныйТекстСправки = ОстатокТекстаСправки;
							Иначе
								НеобработанныйТекстСправки = Сред(ОстатокТекстаСправки,ПозицияТегаКонца + 4);
								СодержаниеТэга             = Сред(ОстатокТекстаСправки,1, ПозицияТегаКонца - 1);
								ПозицияКонцаСсылки         = Найти(СодержаниеТэга, """>");
								ТекстСсылки                = Сред(СодержаниеТэга, ПозицияКонцаСсылки + 2);
								СодержаниеТэга             = Сред(СодержаниеТэга, 1, ПозицияКонцаСсылки - 1);
								
								// Определение, есть ли в ссылке закладка
								ПозицияРазделителя = Найти(СодержаниеТэга, "#");
								Закладка = "";
								
								Если ПозицияРазделителя <> 1 Тогда
									// Когда ПозицияРазделителя = 1 - Это внутренний переход
									// ссылка остается неизменной
									
									Если ПозицияРазделителя > 0 Тогда
										Закладка = Сред(СодержаниеТэга, ПозицияРазделителя + 1);
										СодержаниеТэга = Сред(СодержаниеТэга, 1, ПозицияРазделителя - 1);
									КонецЕсли;
									
								КонецЕсли;
								
								Если ПустаяСтрока(СодержаниеТэга) Тогда
									ТекстСправки = ТекстСправки + ТекстСсылки;
								Иначе
									ТекстСправки = ТекстСправки + "<A href=""" + СодержаниеТэга + """>" + ТекстСсылки + "</A>";
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Если НЕ СтрокаОбъекта.ВключатьВСправку И НЕ ФормироватьФайлыСправкиПоОбъектамНеВключаемымВСправку Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ВыгружатьВФорматеEDT Тогда
					ИмяФайлаОписания = ДобавитьОписаниеСправкиОбъекта(СтрокаОбъекта, СоответствиеФайловСправки);
					Если Не ЗначениеЗаполнено(СтрокаОбъекта.ВеткаИсточник) Тогда
						ИменаОбъектовДляЗагрузки.Добавить(ИмяФайлаОписания);
					КонецЕсли; 
				КонецЕсли; 
				
				ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
				
				Если ЗначениеЗаполнено(ТекстСправки) Тогда
					ЗаголовокФайла = "<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.0 Transitional//EN"">";
					ТекстСправки = ЗаголовокФайла + ТекстСправки;
				КонецЕсли;
				
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.УстановитьТекст(ТекстСправки);
				ТекстовыйДокумент.Записать(ИмяВременногоФайла);
				
				АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла));
				СоответствиеФайловСправки.Вставить(ИмяФайла, АдресВоВременномХранилище);
				
				Если Не ЗначениеЗаполнено(СтрокаОбъекта.ВеткаИсточник) Тогда
					ИменаОбъектовДляЗахвата.Добавить(ИмяОбъектаДляЗахвата);
					СоответствиеИменДляЗахватаИЗагрузки.Вставить(ИмяОбъектаДляЗахвата, ИмяФайлаОписания);
				КонецЕсли;
				
				Попытка
					УдалитьФайлы(ИмяВременногоФайла);
				Исключение
				КонецПопытки;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Ответ = Новый Структура;
	Ответ.Вставить("СоответствиеФайловСправки", СоответствиеФайловСправки);
	Ответ.Вставить("АдресФайлаЗахвата",         ПолучитьФайлЗахвата(ИменаОбъектовДляЗахвата));
	Ответ.Вставить("АдресФайлаЗагрузки",        ПолучитьФайлЗагрузки(ИменаОбъектовДляЗагрузки, КаталогВыгрузки));
	Ответ.Вставить("ИменаОбъектовДляЗахвата",             ИменаОбъектовДляЗахвата);
	Ответ.Вставить("ИменаОбъектовДляЗагрузки",            ИменаОбъектовДляЗагрузки);
	Ответ.Вставить("СоответствиеИменДляЗахватаИЗагрузки", СоответствиеИменДляЗахватаИЗагрузки);
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УзелОбщихОбъектов(ДеревоМетаданных)
	
	Для Каждого СтрокаДерева Из ДеревоМетаданных.Строки Цикл
		
		Если СтрокаДерева.Имя = "ОбщиеОбъекты" Тогда
			Возврат СтрокаДерева;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Процедура РекурсивноеДобавлениеСтрокВДерево(РодительскийУзел, ДобавляемыеСтроки, СоответствиеКартинокГруппОбъектовМетаданных, 
          СоответствиеКартинокЭлементовОбъектовМетаданных, Отметка)
	
	Для Каждого ДобавляемаяСтрока Из ДобавляемыеСтроки Цикл
		
		Если ЗначениеЗаполнено(ДобавляемаяСтрока.ОбъектСправки) И ДобавляемаяСтрока.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДобавляемаяСтрока.ОбъектСправки.Пустая() 
			ИЛИ (ДобавляемаяСтрока.Родитель <> Неопределено И ДобавляемаяСтрока.ОбъектСправки = ДобавляемаяСтрока.Родитель.ОбъектСправки) Тогда
			
			Если ТипЗнч(ДобавляемаяСтрока.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы") Тогда
				
				Если (ДобавляемаяСтрока.Родитель <> Неопределено И ДобавляемаяСтрока.ОбъектСправки = ДобавляемаяСтрока.Родитель.ОбъектСправки) Тогда
					РодительскийУзел.ВключатьВСправку = ДобавляемаяСтрока.ВключатьВСправку;
					РодительскийУзел.ОбъектПоставщика = ДобавляемаяСтрока.ОбъектПоставщика;
					РодительскийУзел.СправкаБерется   = ДобавляемаяСтрока.СправкаБерется;
				КонецЕсли;
				
			КонецЕсли; 
			
			НовыйУзел = РодительскийУзел;
			
		Иначе
			НовыйУзел = РодительскийУзел.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйУзел, ДобавляемаяСтрока);
			
			Если ТипЗнч(ДобавляемаяСтрока.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы") Тогда
				НовыйУзел.ИндексКартинки = 41;
			ИначеЕсли ТипЗнч(ДобавляемаяСтрока.ОбъектСправки) = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
				НовыйУзел.ИндексКартинки = 47;
			ИначеЕсли ТипЗнч(ДобавляемаяСтрока.ОбъектСправки) = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
				Если ЗначениеЗаполнено(ДобавляемаяСтрока.ЭтоГруппа) И НЕ ДобавляемаяСтрока.ЭтоГруппа Тогда
					НовыйУзел.ИндексКартинки = СоответствиеКартинокЭлементовОбъектовМетаданных[ДобавляемаяСтрока.Предок];
				Иначе
					НовыйУзел.ИндексКартинки = СоответствиеКартинокГруппОбъектовМетаданных[ДобавляемаяСтрока.ОбъектСправки];
					НовыйУзел.Порядок = 3;
					НовыйУзел.Код     = ДобавляемаяСтрока.ОбъектСправки.Код;
				КонецЕсли;
			Иначе
				НовыйУзел.ИндексКартинки = -1;
			КонецЕсли;
			НовыйУзел.Отметка = Отметка;
			
		КонецЕсли;
		
		Если ТипЗнч(ДобавляемаяСтрока) = Тип("СтрокаДереваЗначений") Тогда
			
			РекурсивноеДобавлениеСтрокВДерево(НовыйУзел,
			                                  ДобавляемаяСтрока.Строки,
			                                  СоответствиеКартинокГруппОбъектовМетаданных,
			                                  СоответствиеКартинокЭлементовОбъектовМетаданных,
			                                  Отметка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаДляФормированияДерева()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПроектыВключаемыеПроекты.Ссылка КАК Проект,
	|	ПроектыВключаемыеПроекты.Проект КАК ПроектБиблиотека
	|ПОМЕСТИТЬ СвязиПроектовБиблиотек
	|ИЗ
	|	Справочник.Проекты.ВключаемыеПроекты КАК ПроектыВключаемыеПроекты
	|ГДЕ
	|	ПроектыВключаемыеПроекты.СправкаВедетсяВБиблиотеке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Подсистемы.Ссылка       КАК ОбъектСправки,
	|	Подсистемы.Наименование КАК Наименование,
	|	Подсистемы.Имя          КАК Имя,
	|	Подсистемы.Синоним      КАК Представление,
	|	ЛОЖЬ                    КАК ЭтоГруппа,
	|	Подсистемы.ПометкаУдаления       КАК ПометкаУдаления,
	|	NULL                             КАК Предок,
	|	Подсистемы.Код                   КАК Код,
	|	""Subsystems/"" + Подсистемы.Имя КАК ИмяФайлаEDT,
	|	""Subsystem."" + Подсистемы.Имя  КАК ИмяФайла,
	|	""Подсистема."" + Подсистемы.Имя КАК ИмяОбъектаЗахвата,
	|	ВЫБОР
	|		КОГДА (СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправки.Ссылка) > 0)
	|				ИЛИ (НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправкиПоставщика.Ссылка) > 0)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВСправку,
	|	Подсистемы.ВеткаИсточник,
	|	Подсистемы.Поставщик,
	|	Подсистемы.ПравилоПоддержки,
	|	ВЫБОР
	|	КОГДА Подсистемы.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.НеРедактируется)
	|		ТОГДА 1
	|	КОГДА Подсистемы.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.РедактируетсяССохранениемПоддержки)
	|		ТОГДА 2
	|	КОГДА Подсистемы.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.СнятСПоддержки)
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|	КОНЕЦ КАК ПравилоПоддержкиКартинка,
	|	ВЫБОР
	|		КОГДА НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаБерется,
	|	ЕСТЬNULL(ПодсистемыПоставщика.Ссылка, ЗНАЧЕНИЕ(Справочник.Подсистемы.ПустаяСсылка)) КАК ОбъектПоставщика
	|ИЗ
	|	Справочник.Подсистемы КАК Подсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиПроектовБиблиотек КАК СвязиПроектовБиблиотек
	|		ПО Подсистемы.Владелец = СвязиПроектовБиблиотек.Проект
	|			И Подсистемы.Поставщик = СвязиПроектовБиблиотек.ПроектБиблиотека
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подсистемы КАК ПодсистемыПоставщика
	|		ПО 	Подсистемы.uuid = ПодсистемыПоставщика.uuid
	|				И НЕ ПодсистемыПоставщика.uuid = """"
	|				И Подсистемы.Поставщик = ПодсистемыПоставщика.Владелец 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправки
	|		ПО ЭлементыСправки.Владелец = Подсистемы.Ссылка
	|			И (ЭлементыСправки.ВключатьВСправку)
	|			И НЕ (ЭлементыСправки.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправкиПоставщика
	|		ПО 	ЭлементыСправкиПоставщика.Владелец = ПодсистемыПоставщика.Ссылка
	|			И (ЭлементыСправкиПоставщика.ВключатьВСправку)
	|			И НЕ (ЭлементыСправкиПоставщика.ПометкаУдаления)
	|ГДЕ
	|	НЕ Подсистемы.ПометкаУдаления
	|	И Подсистемы.Владелец = &Проект
	|
	|СГРУППИРОВАТЬ ПО
	|	Подсистемы.Ссылка,
	|	Подсистемы.Код,
	|	Подсистемы.Наименование,
	|	Подсистемы.Имя,
	|	Подсистемы.Синоним,
	|	Подсистемы.ПометкаУдаления,
	|	ПодсистемыПоставщика.Ссылка,
	|	СвязиПроектовБиблиотек.ПроектБиблиотека
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|ИТОГИ ПО
	|	ОбъектСправки ТОЛЬКО ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка       КАК ОбъектСправки,
	|	ОбъектыМетаданных.Наименование КАК Наименование,
	|	ОбъектыМетаданных.Имя          КАК Имя,
	|	ЕСТЬNULL(ОбъектыМетаданных.Синоним, ОбъектыМетаданных.Наименование) КАК Представление,
	|	ЕСТЬNULL(ОбъектыМетаданных.ЭтоГруппа, ЛОЖЬ) КАК ЭтоГруппа,
	|	ОбъектыМетаданных.ПометкаУдаления КАК ПометкаУдаления,
	|	ОбъектыМетаданных.Родитель КАК Предок,
	|	ОбъектыМетаданных.Код КАК Код,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ExchangePlans/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеФормы""
	|			ТОГДА ""CommonForms/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеКоманды""
	|			ТОГДА ""CommonCommands/"" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайлаEDT,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ExchangePlan."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеФормы""
	|			ТОГДА ""CommonForm."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеКоманды""
	|			ТОГДА ""CommonCommand."" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайла,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ПланОбмена."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеФормы""
	|			ТОГДА ""ОбщаяФорма."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ОбщиеКоманды""
	|			ТОГДА ""ОбщаяКоманда."" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяОбъектаЗахвата,
	|	ВЫБОР
	|		КОГДА СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправки.Ссылка) > 0
	|				ИЛИ НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправкиПоставщика.Ссылка) > 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВСправку,
	|	ОбъектыМетаданных.ВеткаИсточник,
	|	ОбъектыМетаданных.Поставщик,
	|	ОбъектыМетаданных.ПравилоПоддержки,
	|	ВЫБОР
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.НеРедактируется)
	|		ТОГДА 1
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.РедактируетсяССохранениемПоддержки)
	|		ТОГДА 2
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.СнятСПоддержки)
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ КАК ПравилоПоддержкиКартинка,
	|	ВЫБОР
	|		КОГДА НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаБерется,
	|	ЕСТЬNULL(ОбъектыМетаданныхПоставщика.Ссылка, ЗНАЧЕНИЕ(Справочник.ОбъектыМетаданных.ПустаяСсылка)) КАК ОбъектПоставщика
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиПроектовБиблиотек КАК СвязиПроектовБиблиотек
	|		ПО ОбъектыМетаданных.Владелец = СвязиПроектовБиблиотек.Проект
	|			И ОбъектыМетаданных.Поставщик = СвязиПроектовБиблиотек.ПроектБиблиотека
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыМетаданных КАК ОбъектыМетаданныхПоставщика
	|		ПО 	ОбъектыМетаданных.uuid = ОбъектыМетаданныхПоставщика.uuid
	|				И НЕ ОбъектыМетаданныхПоставщика.uuid = """"
	|				И ОбъектыМетаданных.Поставщик = ОбъектыМетаданныхПоставщика.Владелец 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправки
	|		ПО ЭлементыСправки.Владелец = ОбъектыМетаданных.Ссылка
	|			И (ЭлементыСправки.ВключатьВСправку)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправкиПоставщика
	|		ПО 	ЭлементыСправкиПоставщика.Владелец = ОбъектыМетаданныхПоставщика.Ссылка
	|			И (ЭлементыСправкиПоставщика.ВключатьВСправку)
	|ГДЕ
	|	ОбъектыМетаданных.Ссылка В ИЕРАРХИИ(&СписокКлассовОбщихОбъектов)
	|	И НЕ ОбъектыМетаданных.ПометкаУдаления
	|	И ОбъектыМетаданных.Владелец = &Проект
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыМетаданных.Ссылка,
	|	ОбъектыМетаданных.Наименование,
	|	ОбъектыМетаданных.Имя,
	|	ОбъектыМетаданных.Синоним,
	|	ОбъектыМетаданных.ЭтоГруппа,
	|	ОбъектыМетаданных.ПометкаУдаления,
	|	ОбъектыМетаданных.Родитель,
	|	ОбъектыМетаданных.Код,
	|	ОбъектыМетаданныхПоставщика.Ссылка,
	|	СвязиПроектовБиблиотек.ПроектБиблиотека
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|ИТОГИ ПО
	|	ОбъектСправки ТОЛЬКО ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК ОбъектСправки,
	|	ОбъектыМетаданных.Наименование КАК Наименование,
	|	ОбъектыМетаданных.Имя КАК Имя,
	|	ЕСТЬNULL(ОбъектыМетаданных.Синоним, ОбъектыМетаданных.Наименование) КАК Представление,
	|	ЕСТЬNULL(ОбъектыМетаданных.ЭтоГруппа, ЛОЖЬ) КАК ЭтоГруппа,
	|	ОбъектыМетаданных.ПометкаУдаления КАК ПометкаУдаления,
	|	ОбъектыМетаданных.Родитель КАК Предок,
	|	ОбъектыМетаданных.Код КАК Код,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Catalogs/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Документы""
	|			ТОГДА ""Documents/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""DocumentJournals/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Enums/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Reports/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Обработки""
	|			ТОГДА ""DataProcessors/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ChartsOfCharacteristicTypes/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ChartsOfAccounts/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ChartsOfCalculationTypes/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""InformationRegisters/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""AccumulationRegisters/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""AccountingRegisters/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""CalculationRegisters/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""BusinessProcesses/"" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Tasks/"" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайлаEDT,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Catalog."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Документы""
	|			ТОГДА ""Document."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""DocumentJournal."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Enum."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Report."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Обработки""
	|			ТОГДА ""DataProcessor."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ChartOfCharacteristicTypes."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ChartOfAccounts."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ChartOfCalculationTypes."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""InformationRegister."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""AccumulationRegister."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""AccountingRegister."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""CalculationRegister."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""BusinessProcess."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Task."" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайла,
	|	ВЫБОР
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Справочник."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Документы""
	|			ТОГДА ""Документ."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""ЖурналДокументов."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Перечисление."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Отчет."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Обработки""
	|			ТОГДА ""Обработка."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ПланВидовХарактеристик."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ПланСчетов."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ПланВидовРасчета."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""РегистрСведений."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""РегистрНакопления."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""РегистрБухгалтерии."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""РегистрРасчета."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""БизнесПроцесс."" + ОбъектыМетаданных.Имя
	|		КОГДА ОбъектыМетаданных.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Задача."" + ОбъектыМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяОбъектаЗахвата,
	|	ВЫБОР
	|		КОГДА СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправки.Ссылка) > 0
	|				ИЛИ НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправкиПоставщика.Ссылка) > 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВСправку,
	|	ОбъектыМетаданных.ВеткаИсточник,
	|	ОбъектыМетаданных.Поставщик,
	|	ОбъектыМетаданных.ПравилоПоддержки,
	|	ВЫБОР
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.НеРедактируется)
	|		ТОГДА 1
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.РедактируетсяССохранениемПоддержки)
	|		ТОГДА 2
	|	КОГДА ОбъектыМетаданных.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.СнятСПоддержки)
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ КАК ПравилоПоддержкиКартинка,
	|	ВЫБОР
	|		КОГДА НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаБерется,
	|	ЕСТЬNULL(ОбъектыМетаданныхПоставщика.Ссылка, ЗНАЧЕНИЕ(Справочник.ОбъектыМетаданных.ПустаяСсылка)) КАК ОбъектПоставщика
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиПроектовБиблиотек КАК СвязиПроектовБиблиотек
	|		ПО ОбъектыМетаданных.Владелец = СвязиПроектовБиблиотек.Проект
	|			И ОбъектыМетаданных.Поставщик = СвязиПроектовБиблиотек.ПроектБиблиотека
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыМетаданных КАК ОбъектыМетаданныхПоставщика
	|		ПО 	ОбъектыМетаданных.uuid = ОбъектыМетаданныхПоставщика.uuid
	|				И НЕ ОбъектыМетаданныхПоставщика.uuid = """"
	|				И ОбъектыМетаданных.Поставщик = ОбъектыМетаданныхПоставщика.Владелец 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправки
	|		ПО ЭлементыСправки.Владелец = ОбъектыМетаданных.Ссылка
	|			И (ЭлементыСправки.ВключатьВСправку)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправкиПоставщика
	|		ПО 	ЭлементыСправкиПоставщика.Владелец = ОбъектыМетаданныхПоставщика.Ссылка
	|			И (ЭлементыСправкиПоставщика.ВключатьВСправку)
	|ГДЕ
	|	ОбъектыМетаданных.Ссылка В ИЕРАРХИИ(&СписокКлассов)
	|	И НЕ ОбъектыМетаданных.Ссылка В ИЕРАРХИИ(&СписокКлассовИсключений)
	|	И НЕ ОбъектыМетаданных.ПометкаУдаления
	|	И ОбъектыМетаданных.Владелец = &Проект
	|	
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыМетаданных.Ссылка,
	|	ОбъектыМетаданных.Наименование,
	|	ОбъектыМетаданных.Имя,
	|	ОбъектыМетаданных.Синоним,
	|	ОбъектыМетаданных.ЭтоГруппа,
	|	ОбъектыМетаданных.ПометкаУдаления,
	|	ОбъектыМетаданных.Родитель,
	|	ОбъектыМетаданных.Код,
	|	ОбъектыМетаданныхПоставщика.Ссылка,
	|	СвязиПроектовБиблиотек.ПроектБиблиотека
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектыМетаданных.Код
	|ИТОГИ ПО
	|	ОбъектСправки ТОЛЬКО ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФормыОбъектовМетаданных.Ссылка КАК ОбъектСправки,
	|	ФормыОбъектовМетаданных.Синоним КАК Представление,
	|	ФормыОбъектовМетаданных.Владелец КАК ОбъектМетаданных,
	|	ФормыОбъектовМетаданных.Наименование КАК Наименование,
	|	ФормыОбъектовМетаданных.Имя КАК Имя,
	|	ЛОЖЬ КАК ЭтоГруппа,
	|	ФормыОбъектовМетаданных.ПометкаУдаления КАК ПометкаУдаления,
	|	NULL КАК Предок,
	|	ФормыОбъектовМетаданных.Код КАК Код,
	|	ВЫБОР
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ExchangePlans/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""КритерииОтбора""
	|			ТОГДА ""FilterCriteria/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ХранилищаНастроек""
	|			ТОГДА ""SettingsStorages/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Catalogs/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Документы""
	|			ТОГДА ""Documents/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""DocumentJournals/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Enums/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Reports/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Обработки""
	|			ТОГДА ""DataProcessors/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ChartsOfCharacteristicTypes/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ChartsOfAccounts/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ChartsOfCalculationTypes/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""InformationRegisters/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""AccumulationRegisters/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""AccountingRegisters/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""CalculationRegisters/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""BusinessProcesses/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Tasks/"" + ФормыОбъектовМетаданных.Владелец.Имя + ""/Forms/"" + ФормыОбъектовМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайлаEDT,
	|	ВЫБОР
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ExchangePlan."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""КритерииОтбора""
	|			ТОГДА ""FilterCriterion."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ХранилищаНастроек""
	|			ТОГДА ""SettingsStorage."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Catalog."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Документы""
	|			ТОГДА ""Document."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""DocumentJournal."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Enum."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Report."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Обработки""
	|			ТОГДА ""DataProcessor."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ChartOfCharacteristicTypes."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ChartOfAccounts."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ChartOfCalculationTypes."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""InformationRegister."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""AccumulationRegister."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""AccountingRegister."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""CalculationRegister."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""BusinessProcess."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Task."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Form."" + ФормыОбъектовМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяФайла,
	|	ВЫБОР
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыОбмена""
	|			ТОГДА ""ПланОбмена."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""КритерииОтбора""
	|			ТОГДА ""КритерийОтбора."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ХранилищаНастроек""
	|			ТОГДА ""ХранилищеНастроек."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Справочники""
	|			ТОГДА ""Справочник."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Документы""
	|			ТОГДА ""Документ."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ЖурналыДокументов""
	|			ТОГДА ""ЖурналДокументов."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Перечисления""
	|			ТОГДА ""Перечисление."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Отчеты""
	|			ТОГДА ""Отчет."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Обработки""
	|			ТОГДА ""Обработка."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовХарактеристик""
	|			ТОГДА ""ПланВидовХарактеристик."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыСчетов""
	|			ТОГДА ""ПланСчетов."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""ПланыВидовРасчета""
	|			ТОГДА ""ПланВидовРасчета."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыСведений""
	|			ТОГДА ""РегистрСведений."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыНакопления""
	|			ТОГДА ""РегистрНакопления."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыБухгалтерии""
	|			ТОГДА ""РегистрБухгалтерии."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""РегистрыРасчета""
	|			ТОГДА ""РегистрРасчета."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""БизнесПроцессы""
	|			ТОГДА ""БизнесПроцесс."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		КОГДА ФормыОбъектовМетаданных.Владелец.Родитель.Имя = ""Задачи""
	|			ТОГДА ""Задача."" + ФормыОбъектовМетаданных.Владелец.Имя + "".Форма."" + ФормыОбъектовМетаданных.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИмяОбъектаЗахвата,
	|	ВЫБОР
	|		КОГДА (НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И НЕ ФормыОбъектовМетаданныхПоставщика.Ссылка ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправкиПоставщика.Ссылка) > 0)
	|		  ИЛИ (НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И ФормыОбъектовМетаданныхПоставщика.Ссылка ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправки.Ссылка) > 0)
	|		  ИЛИ (СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL И КОЛИЧЕСТВО(ЭлементыСправки.Ссылка) > 0)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВСправку,
	|	ФормыОбъектовМетаданных.ВеткаИсточник,
	|	ФормыОбъектовМетаданных.Владелец.Поставщик КАК Поставщик,
	|	ФормыОбъектовМетаданных.Владелец.ПравилоПоддержки КАК ПравилоПоддержки,
	|	ВЫБОР
	|	КОГДА ФормыОбъектовМетаданных.Владелец.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.НеРедактируется)
	|		ТОГДА 1
	|	КОГДА ФормыОбъектовМетаданных.Владелец.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.РедактируетсяССохранениемПоддержки)
	|		ТОГДА 2
	|	КОГДА ФормыОбъектовМетаданных.Владелец.ПравилоПоддержки = ЗНАЧЕНИЕ(Перечисление.ПравилаПоддержки.СнятСПоддержки)
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ КАК ПравилоПоддержкиКартинка,
	|	ВЫБОР
	|		КОГДА НЕ СвязиПроектовБиблиотек.ПроектБиблиотека ЕСТЬ NULL
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаБерется,
	|	ЕСТЬNULL(ФормыОбъектовМетаданныхПоставщика.Ссылка, ЗНАЧЕНИЕ(Справочник.ФормыОбъектовМетаданных.ПустаяСсылка)) КАК ОбъектПоставщика
	|ИЗ
	|	Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиПроектовБиблиотек КАК СвязиПроектовБиблиотек
	|		ПО ФормыОбъектовМетаданных.Владелец.Владелец = СвязиПроектовБиблиотек.Проект
	|			И ФормыОбъектовМетаданных.Владелец.Поставщик = СвязиПроектовБиблиотек.ПроектБиблиотека
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданныхПоставщика
	|		ПО 	ФормыОбъектовМетаданных.uuid = ФормыОбъектовМетаданныхПоставщика.uuid
	|			И НЕ ФормыОбъектовМетаданныхПоставщика.uuid = """"
	|			И СвязиПроектовБиблиотек.ПроектБиблиотека = ФормыОбъектовМетаданныхПоставщика.Владелец.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправки
	|		ПО ЭлементыСправки.Владелец = ФормыОбъектовМетаданных.Ссылка
	|			И (ЭлементыСправки.ВключатьВСправку)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыСправки КАК ЭлементыСправкиПоставщика
	|		ПО 	ЭлементыСправкиПоставщика.Владелец = ФормыОбъектовМетаданныхПоставщика.Ссылка
	|			И (ЭлементыСправкиПоставщика.ВключатьВСправку)
	|ГДЕ
	|	НЕ ФормыОбъектовМетаданных.ПометкаУдаления
	|	И ФормыОбъектовМетаданных.Владелец.Владелец = &Проект
	|
	|СГРУППИРОВАТЬ ПО
	|	ФормыОбъектовМетаданных.Ссылка,
	|	ФормыОбъектовМетаданных.Синоним,
	|	ФормыОбъектовМетаданных.Владелец,
	|	ФормыОбъектовМетаданных.Наименование,
	|	ФормыОбъектовМетаданных.Имя,
	|	ФормыОбъектовМетаданных.ПометкаУдаления,
	|	ФормыОбъектовМетаданных.Код,
	|	ФормыОбъектовМетаданныхПоставщика.Ссылка,
	|	СвязиПроектовБиблиотек.ПроектБиблиотека
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|ИТОГИ ПО
	|	ОбъектМетаданных";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция СписокКлассов(СтруктураГрупп)
	
	СписокЗначений = Новый СписокЗначений;
	
	Для Каждого ЭлементСтруктуры из СтруктураГрупп Цикл
		
		Если ЭлементСтруктуры.Ключ = "ПланыОбмена"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеОбъекты"
			ИЛИ ЭлементСтруктуры.Ключ = "Роли"
			ИЛИ ЭлементСтруктуры.Ключ = "Константы"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеМодули"
			ИЛИ ЭлементСтруктуры.Ключ = "КритерииОтбора" 
			ИЛИ ЭлементСтруктуры.Ключ = "ПодпискиНаСобытия" 
			ИЛИ ЭлементСтруктуры.Ключ = "РегламентныеЗадания" 
			ИЛИ ЭлементСтруктуры.Ключ = "ФункциональныеОпции" 	
			ИЛИ ЭлементСтруктуры.Ключ = "ХранилищаНастроек" 
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеФормы" 
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеКоманды" 
			ИЛИ ЭлементСтруктуры.Ключ = "ГруппыКоманд" 
			ИЛИ ЭлементСтруктуры.Ключ = "ПакетыXDTO" 
			ИЛИ ЭлементСтруктуры.Ключ = "WebСервисы" 
			ИЛИ ЭлементСтруктуры.Ключ = "WSСсылки"
			ИЛИ ЭлементСтруктуры.Ключ = "ПараметрыСеанса"
			ИЛИ ЭлементСтруктуры.Ключ = "HTTPСервисы"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеРеквизиты"
			ИЛИ ЭлементСтруктуры.Ключ = "ПараметрыФункциональныхОпций"
			ИЛИ ЭлементСтруктуры.Ключ = "ОпределяемыеТипы"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеМакеты"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеКартинки"
			ИЛИ ЭлементСтруктуры.Ключ = "ЭлементыСтиля"
			ИЛИ ЭлементСтруктуры.Ключ = "Стили"
			ИЛИ ЭлементСтруктуры.Ключ = "Языки"
			ИЛИ ЭлементСтруктуры.Ключ = "ВнешниеИсточникиДанных"
			ИЛИ ЭлементСтруктуры.Ключ = "Последовательности" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СписокЗначений.Добавить(ЭлементСтруктуры.Значение);
		
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

Функция СписокКлассовОбщихОбъектов(СтруктураГрупп)
	
	СписокЗначений = Новый СписокЗначений;
	
	Для Каждого ЭлементСтруктуры из СтруктураГрупп Цикл
		
		Если ЭлементСтруктуры.Ключ = "ПланыОбмена"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеКоманды"
			ИЛИ ЭлементСтруктуры.Ключ = "ОбщиеФормы"
			ИЛИ ЭлементСтруктуры.Ключ = "КритерииОтбора"
			ИЛИ ЭлементСтруктуры.Ключ = "ХранилищаНастроек" Тогда
			
			СписокЗначений.Добавить(ЭлементСтруктуры.Значение);
			
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

Функция СписокКлассовИсключений(СтруктураГрупп)
	
	СписокЗначений = Новый СписокЗначений;
	
	Для Каждого ЭлементСтруктуры из СтруктураГрупп Цикл
		
		Если ЭлементСтруктуры.Ключ = "Последовательности"
			ИЛИ ЭлементСтруктуры.Ключ = "Нумераторы" Тогда
			
			СписокЗначений.Добавить(ЭлементСтруктуры.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

Функция ДобавитьОписаниеСправкиОбъекта(СтрокаОбъекта, СоответствиеФайлов)
	
	Если ТипЗнч(СтрокаОбъекта.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы") Тогда
		ИмяФайла = ПолноеИмяПодсистемы(СтрокаОбъекта);
	Иначе
		ИмяФайла = СтрокаОбъекта.ИмяФайла;
	КонецЕсли;
	
	ТекстОписанияСправки = ТекстОписанияСправки(СтрокаОбъекта, ИмяФайла);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстОписанияСправки);
	ТекстовыйДокумент.Записать(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла));
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);	
	Исключение
	КонецПопытки;
	
	ИмяФайлаОписания = ИмяФайла + ".Help.xml";
	СоответствиеФайлов.Вставить(ИмяФайлаОписания, АдресВоВременномХранилище);
	
	Возврат ИмяФайлаОписания
	
КонецФункции

Функция ТекстОписанияСправки(СтрокаДерева, ИмяФайлаСправки)
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Help");
	ЗаписьXML.ЗаписатьАтрибут("version", "2.16");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xs",  "http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("",    "http://v8.1c.ru/8.3/xcf/extrnprops");
	
	ЗаписатьXML(ЗаписьXML, ИмяФайлаСправки + ".Help.ru", "Page", НазначениеТипаXML.Неявное);
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

// Функция - Генерирует файл захвата и помещает во временное хранилище
//
// Параметры:
//  ИменаОбъектовДляЗахвата - Массив - Имена объектов метаданных
// 
// Возвращаемое значение:
//   - Адрес во временном хранилище
//
Функция ПолучитьФайлЗахвата(ИменаОбъектовДляЗахвата) Экспорт
	
	ТекстФайлаЗахвата = ТекстФайлаЗахвата(ИменаОбъектовДляЗахвата);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстФайлаЗахвата);
	ТекстовыйДокумент.Записать(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла));
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

Функция ТекстФайлаЗахвата(ИменаОбъектовДляЗахвата)
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Objects");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("",    "http://v8.1c.ru/8.3/config/objects");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xs",  "http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьАтрибут("version", "1.0");
	
	Для Каждого ИмяОбъекта Из ИменаОбъектовДляЗахвата Цикл
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Object");
		ЗаписьXML.ЗаписатьАтрибут("fullName",            ИмяОбъекта);
		ЗаписьXML.ЗаписатьАтрибут("includeChildObjects", "false");
		ЗаписьXML.ЗаписатьКонецЭлемента(); //Object
		
	КонецЦикла; 
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); //Objects
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

// Функция - Генерирует файл захвата и помещает его во временное хранилище
//
// Параметры:
//  ИменаОбъектовДляЗагрузки - Массив - Имена объектов метаданных
//  КаталогВыгрузки          - Строка - Директория в которую будет выгружена справка,
//                                      нужна для корректого формирования файлов частичной загрузки
// 
// Возвращаемое значение:
//   - Адрес во временном хранилище
//
Функция ПолучитьФайлЗагрузки(ИменаОбъектовДляЗагрузки, КаталогВыгрузки) Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	
	Текст = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
	
	Для Каждого ИмяОбъектаДляЗагрузки Из ИменаОбъектовДляЗагрузки Цикл
		Текст.ЗаписатьСтроку(КаталогВыгрузки + ИмяОбъектаДляЗагрузки);
	КонецЦикла; 
	
	Текст.Закрыть();
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла));
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

Функция ПолноеИмяПодсистемы(СтрокаДерева, ИмяПоля = "ИмяФайла", ТипОбъекта = "Subsystem", Разделитель = ".")
	
	ПолноеИмя      = СтрокаДерева[ИмяПоля];
	СтрокаРодителя = СтрокаДерева.Родитель;
	
	Пока ЗначениеЗаполнено(СтрокаРодителя) Цикл
		
		Если ТипЗнч(СтрокаРодителя.ОбъектСправки) = Тип("СправочникСсылка.Подсистемы") 
			И ЗначениеЗаполнено(СтрокаРодителя.ОбъектСправки) Тогда
			
			ПолноеИмя = ТипОбъекта + Разделитель + СтрокаРодителя.Имя + Разделитель + ПолноеИмя;
			
			СтрокаРодителя = СтрокаРодителя.Родитель;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПолноеИмя;
	
КонецФункции

Функция КлассОбъектовСоСправкой(Имя)
	
	Если Имя = "Справочники"
		ИЛИ Имя = "Документы" 
		ИЛИ Имя = "ЖурналыДокументов"
		ИЛИ Имя = "Отчеты"
		ИЛИ Имя = "Обработки"
		ИЛИ Имя = "ПланыВидовХарактеристик"
		ИЛИ Имя = "ПланыСчетов"
		ИЛИ Имя = "ПланыВидовРасчета"
		ИЛИ Имя = "РегистрыСведений"
		ИЛИ Имя = "РегистрыНакопления"
		ИЛИ Имя = "РегистрыБухгалтерии"
		ИЛИ Имя = "РегистрыРасчета"
		ИЛИ Имя = "БизнесПроцессы"
		ИЛИ Имя = "Задачи"
		ИЛИ Имя = "ПланыОбмена"
		ИЛИ Имя = "ОбщиеФормы"
		ИЛИ Имя = "ОбщиеКоманды"
		ИЛИ Имя = "Подсистемы" Тогда
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли