#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщаяЗадача = Параметры.ОбщаяЗадача;
	Раздел = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбщаяЗадача, "Раздел");
	
	ЗаполнитьТаблицуДанными();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ВыбраныСтрокиДляПланирования = Ложь;
	
	МассивСтрокДублей = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		НомерСтроки = ТаблицаДанных.Индекс(СтрокаТаблицы) + 1;
		
		Если СтрокаТаблицы.Планировать И НЕ ЗначениеЗаполнено(СтрокаТаблицы.Проект) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='В строке %НомерСтроки% не заполнено поле Проект'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", НомерСтроки);
			ПутьКРеквизиту = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаДанных", НомерСтроки, "Проект");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКРеквизиту,, Отказ);
		КонецЕсли;
		
		Если СтрокаТаблицы.Планировать И НЕ ЗначениеЗаполнено(СтрокаТаблицы.Ответственный) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='В строке %НомерСтроки% не заполнено поле Ответственный'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", НомерСтроки);
			ПутьКРеквизиту = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаДанных", НомерСтроки, "Ответственный");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКРеквизиту,, Отказ);
		КонецЕсли;
		
		Если СтрокаТаблицы.Планировать Тогда
			ВыбраныСтрокиДляПланирования = Истина;
		КонецЕсли;
		
		Если СтрокаТаблицы.Планировать Тогда
			
			Если МассивСтрокДублей.Найти(СтрокаТаблицы) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Планировать", Истина);
			СтруктураОтбора.Вставить("Проект", СтрокаТаблицы.Проект);
			
			МассивСтрок = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
			
			Если МассивСтрок.Количество()>1 Тогда
				
				Для Каждого СтрокаДубля Из МассивСтрок Цикл
					МассивСтрокДублей.Добавить(СтрокаДубля);
				КонецЦикла;
				
				Отказ = Истина;
				
				ТекстСообщения = НСтр("ru='Для строки %НомерСтроки%  имеются дубли. Необходимо удалить дублирующие строки'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ВыбраныСтрокиДляПланирования Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Не указано ни одного проекта для планирования задачи'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьВсеОтметки(Команда)
	
	УстановитьОтметки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	УстановитьОтметки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеПланирования();
	
	ТекстОповещения = НСтр("ru='Общая задача запланирована по проектам'");
    ПоказатьОповещениеПользователя(ТекстОповещения, ПолучитьНавигационнуюСсылку(ОбщаяЗадача), ОбщаяЗадача, БиблиотекаКартинок.Информация32);
    ИсторияРаботыПользователя.Добавить(ОбщаяЗадача);
		
	ОповеститьОбИзменении(ОбщаяЗадача);
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ВыполнениеОбщихЗадач"));
	
	Закрыть();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуДанными()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыполнениеОбщихЗадачСрезПоследних.Проект КАК Проект,
	|	МАКСИМУМ(ВыполнениеОбщихЗадачСрезПоследних.Ответственный) КАК Ответственный,
	|	ИСТИНА КАК Планировать,
	|	ВыполнениеОбщихЗадачСрезПоследних.Проект.Наименование КАК ПроектНаименование
	|ИЗ
	|	РегистрСведений.ВыполнениеОбщихЗадач.СрезПоследних КАК ВыполнениеОбщихЗадачСрезПоследних
	|ГДЕ
	|	ВыполнениеОбщихЗадачСрезПоследних.ОбщаяЗадача.Раздел = &Раздел
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыполнениеОбщихЗадачСрезПоследних.Проект,
	|	ВыполнениеОбщихЗадачСрезПоследних.Проект.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПроектНаименование"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Раздел", Раздел);
	
	ДанныеРегистра = Запрос.Выполнить().Выгрузить();
	ТаблицаДанных.Загрузить(ДанныеРегистра);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметки(Отметка)
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		СтрокаТаблицы.Планировать = Отметка;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПланирования()
	
	ТекущаяДата = ТекущаяДата();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗапланированныеЗаписи = ЗапланированныеЗадачиПоПроектам();
	
	НаборЗаписей = РегистрыСведений.ВыполнениеОбщихЗадач.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОБщаяЗадача.Установить(ОбщаяЗадача, Истина);
	НаборЗаписей.Отбор.Период.Установить(ТекущаяДата, Истина);
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		Если СтрокаТаблицы.Планировать Тогда
			
			СтруктураОтбора = Новый Структура("Проект", Строкатаблицы.Проект);
			
			МассивСтрок = ЗапланированныеЗаписи.НайтиСтроки(СтруктураОтбора);
			
			Если МассивСтрок.Количество()>0 Тогда
				Продолжить;
			КонецЕсли;
			
			Запись = НаборЗаписей.Добавить();
			
			Запись.Период = ТекущаяДата;
			Запись.ОбщаяЗадача = ОбщаяЗадача;
			Запись.Проект = СтрокаТаблицы.Проект;
			Запись.Ответственный = СтрокаТаблицы.Ответственный;
			Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.ТребуетсяЗапланировать;
			Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.Версия;
			Запись.Пользователь = ТекущийПользователь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НаборЗаписей.Количество()>0 Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапланированныеЗадачиПоПроектам()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыполнениеОбщихЗадачСрезПоследних.Проект КАК Проект
	|ИЗ
	|	РегистрСведений.ВыполнениеОбщихЗадач.СрезПоследних(, ОбщаяЗадача = &ОбщаяЗадача) КАК ВыполнениеОбщихЗадачСрезПоследних"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбщаяЗадача", ОбщаяЗадача);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецфУНКЦИИ

#КонецОбласти