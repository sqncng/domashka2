
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	НастройкиСервер.УстановитьТекущуюСтраницу("Справочник.Подсистемы.ФормаЭлемента", Элементы.ГруппаСтраницы, "ТекущаяСтраницаФормыПодсистемы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьИндексыКартинок();
	Оповестить("Запись_Подсистемы", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ПриИзмененииВладельцаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов(Элементы, Объект.Родитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	
	УстановитьДоступностьПравилаПоддержки(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Объект.Поставщик) И НЕ ЗначениеЗаполнено(Объект.ПравилоПоддержки) Тогда
		Объект.ПравилоПоддержки = ПредопределенноеЗначение("Перечисление.ПравилаПоддержки.НеРедактируется");
	Иначе
		Объект.ПравилоПоддержки = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтоитНаПоддержкеПриИзменении(Элемент)
	
	Если НЕ СтоитНаПоддержке Тогда
		Объект.Поставщик = Неопределено;
		Объект.ПравилоПоддержки = Неопределено;
	КонецЕсли;
	
	УстановитьДоступностьПравилаПоддержки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПоставщика(Команда)
	
	Если ЗначениеЗаполнено(Объект.Поставщик) Тогда
		
		СсылкаНаОбъектПоставщика = ПолучитьСсылкуНаОбъектПоставщика(Объект.Поставщик, Объект.uuid);
		Если ЗначениеЗаполнено(СсылкаНаОбъектПоставщика) Тогда
			ПараметрыФормы = Новый Структура("Ключ", СсылкаНаОбъектПоставщика);
			ОткрытьФорму("Справочник.Подсистемы.ФормаОбъекта", ПараметрыФормы);
		Иначе 
			ПоказатьПредупреждение(, НСтр("ru = 'Не удалось найти подсистему поставщика'"));
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСостав

&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТипЗнч(ТекущиеДанные.ОбъектМетаданных) = Тип("СправочникСсылка.ОбъектыМетаданных")
	   И Не ТекущиеДанные.ОбъектМетаданных.Пустая() Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ОбъектМетаданных);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенныеОбъектыМетаданных(Команда)
	
	Список = Элементы.Состав;
	
	ВыделенныеСтроки = Список.ВыделенныеСтроки;
	
	ПараметрыФормы = Новый Структура("МассивОбъектов", Новый Массив);
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		ТекущаяСтрока = Список.ДанныеСтроки(ВыделеннаяСтрока);
		
		Если ТекущаяСтрока <> Неопределено Тогда
			ПараметрыФормы.МассивОбъектов.Добавить(ТекущаяСтрока.ОбъектМетаданных);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПараметрыФормы.МассивОбъектов.Количество() = 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
		
	ОткрытьФорму("Обработка.ГрупповоеИзменениеРеквизитов.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРазделы(Команда)
	
	ПараметрыФормы = Новый Структура;
	МассивРазделов = Новый Массив;
	
	Для Каждого СтрокаТЧ из Объект.РазделыПроекта Цикл
		МассивРазделов.Добавить(СтрокаТЧ.Раздел);
	КонецЦикла;
	
	ПараметрыФормы.Вставить("Проект", Объект.Владелец);
	ПараметрыФормы.Вставить("МассивРазделов", МассивРазделов);
    ПараметрыФормы.Вставить("ИзмененияДоступны", ДоступноИзменениеПодсистемы);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДополнительныеРазделыЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.РазделыПроекта", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРазделыЗавершение(РезультатДействия, ДополнительныеПараметры) Экспорт
    
    Результат = РезультатДействия;
    
    Если ТипЗнч(Результат) = Тип("Массив") Тогда
        
        Объект.РазделыПроекта.Очистить();
        
        КоличествоРазделов = 0;
        Для Каждого Раздел из Результат Цикл
            НоваяСтрока = Объект.РазделыПроекта.Добавить();
            НоваяСтрока.Раздел = Раздел;
            
            КоличествоРазделов = КоличествоРазделов + 1;
        КонецЦикла;
        
        ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы,
			КоличествоРазделов);
			
		Модифицированность = Истина;
		
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьРольДляПросмотра(Команда)
	
	РаботаСОбъектамиМетаданныхКлиентСервер.СоздатьРоль(ЭтаФорма, "РольДляПросмотра");
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьЗначения()
	
	НастройкиСервер.СохранитьТекущуюСтраницу("Справочник.Подсистемы.ФормаЭлемента", Элементы.ГруппаСтраницы, "ТекущаяСтраницаФормыПодсистемы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИндексыКартинок()
	
	МассивОбъектов =  Объект.Состав.Выгрузить().ВыгрузитьКолонку("ОбъектМетаданных");
	СоответствиеКартинок = РаботаСОбъектамиМетаданных.ПолучитьСоответствиеКартинок(МассивОбъектов);
	
	Для Каждого СтрокаТЧ из Объект.Состав Цикл
		
		ИндексКартинки = СоответствиеКартинок.Получить(СтрокаТЧ.ОбъектМетаданных);
		Если ИндексКартинки <>Неопределено Тогда
			СтрокаТЧ.ИндексКартинки = ИндексКартинки;
		Иначе
			СтрокаТЧ.ИндексКартинки = 1000;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Элементы, Родитель)
	
	// Роль для просмотра указывается только для подсистем верхнего уровня
	Элементы.ГруппаРольДляПросмотра.Доступность = НЕ ЗначениеЗаполнено(Родитель);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПравилаПоддержки(Форма)
	
	Форма.Элементы.Поставщик.Доступность        = Форма.СтоитНаПоддержке;
	Форма.Элементы.ПравилоПоддержки.Доступность = ЗначениеЗаполнено(Форма.Объект.Поставщик);
	Форма.Элементы.ОбъектПоставщика.Доступность = ЗначениеЗаполнено(Форма.Объект.Поставщик);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокПоставщиков(Список, Проект)

	Список.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Проекты.Ссылка КАК Поставщик
		|ИЗ
		|	Справочник.Проекты.ВключаемыеПроекты КАК ПроектыВключаемыеПроекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ПроектыВключаемыеПроекты.Проект = Проекты.Ссылка
		|ГДЕ
		|	ПроектыВключаемыеПроекты.Ссылка = &Проект
		|
		|УПОРЯДОЧИТЬ ПО
		|	Проекты.Наименование";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Список.Добавить(ВыборкаДетальныеЗаписи.Поставщик);
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ДоступноИзменениеПодсистемы = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеПодсистем", Объект.Владелец);
	
	ЗаполнитьИндексыКартинок();
	
	ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы,
		Объект.РазделыПроекта.Количество());
	
	СтоитНаПоддержке = ЗначениеЗаполнено(Объект.Поставщик);
	ЗаполнитьСписокПоставщиков(Элементы.Поставщик.СписокВыбора, Объект.Владелец);
	
	УстановитьДоступностьЭлементов(Элементы, Объект.Родитель);
	УстановитьДоступностьПравилаПоддержки(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВладельцаСервер()
	
	ДоступноИзменениеПодсистемы = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеПодсистем", Объект.Владелец);
		
	ЗаполнитьСписокПоставщиков(Элементы.Поставщик.СписокВыбора, Объект.Владелец);
	
	Если Элементы.Поставщик.СписокВыбора.НайтиПоЗначению(Объект.Владелец) = Неопределено Тогда
	
		СтоитНаПоддержке = Ложь;
		Объект.Поставщик = Неопределено;
		Объект.ПравилоПоддержки = Неопределено;
	
	КонецЕсли; 
	
	Объект.РазделыПроекта.Очистить();
	
	ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы, 
		Объект.РазделыПроекта.Количество());
		
	// СтандартныеПодсистемы.Свойства
	ОбновитьЭлементыДополнительныхРеквизитов();
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаОбъектПоставщика(Поставщик, uuid)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("uuid",     uuid);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Подсистемы.Ссылка
	|ИЗ
	|	Справочник.Подсистемы КАК Подсистемы
	|ГДЕ
	|	Подсистемы.uuid = &uuid
	|	И Подсистемы.Владелец = &Поставщик";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Неопределено);
	
КонецФункции

#КонецОбласти