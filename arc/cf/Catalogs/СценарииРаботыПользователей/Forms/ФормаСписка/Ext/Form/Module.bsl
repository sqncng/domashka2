#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьОтборПоПроекту();
	УстановитьДоступностьЭлементов();
	
	Если Параметры.Свойство("ОтборФункцияСистемы") Тогда
		ОтборФункцияСистемы = Параметры.ОтборФункцияСистемы;
		
		ОтборПоГруппе = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ФункцияСистемы");
		ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоГруппе.ПравоеЗначение = ОтборФункцияСистемы;
		
		ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
		ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Отображать",Истина);
		
		ОтборПоГруппе = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоГруппе.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ФункцияСистемы");
		ОтборПоГруппе.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоГруппе.ПравоеЗначение = ОтборФункцияСистемы;	
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Возврат;
	КонецЕсли;	
	
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		НашлиОтборПоФункции = Ложь;
		Для Каждого ЭлемтОтбора Из Список.Отбор.Элементы Цикл
			Если НЕ ЭлемтОтбора.Использование Тогда
				Продолжить;
			КонецЕсли;	 
			          
			Если ТипЗнч(ЭлемтОтбора.ПравоеЗначение) = Тип("СправочникСсылка.ФункцииСистемы") Тогда
				Отказ = Истина;
				ПараметрыФормы     = Новый Структура;
				ЗначенияЗаполнения = Новый Структура;
				ЗначенияЗаполнения.Вставить("ФункцияСистемы",ЭлемтОтбора.ПравоеЗначение);
				ПараметрыФормы.Вставить("ЗначенияЗаполнения",ЗначенияЗаполнения);
				Если Группа Тогда
					ПараметрыФормы.Вставить("ЭтоГруппа",Истина);
					ОткрытьФорму("Справочник.СценарииРаботыПользователей.ФормаГруппы",ПараметрыФормы,ЭтаФорма);
				Иначе	
					ОткрытьФорму("Справочник.СценарииРаботыПользователей.ФормаОбъекта",ПараметрыФормы,ЭтаФорма);
				КонецЕсли;	 
				
				Возврат;
			КонецЕсли;	 
			
		КонецЦикла;	
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОтключитьОбработчикОжидания("ОбновитьТекущийPIDTestManager");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененТекущийПроект" Тогда
		УстановитьОтборПоПроекту();
		УстановитьДоступностьЭлементов();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапускТестов(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗапускСценария",Истина);
	ПараметрыОткрытия.Вставить("СТекущегоШага",Ложь);
	ПараметрыОткрытия.Вставить("ЗагрузкаСценария",Ложь);
	ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура РедакитрованиеВGit(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийПроект", ТекущийПроект);
	ОткрытьФорму("Справочник.СценарииРаботыПользователей.Форма.ФормаСпискаGit", ПараметрыФормы, ЭтаФорма)
КонецПроцедуры

&НаКлиенте
Процедура ЗапускФреймворкаТестирования(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗапускСценария",Ложь);
	ПараметрыОткрытия.Вставить("СТекущегоШага",Ложь);
	ПараметрыОткрытия.Вставить("ЗагрузкаСценария",Истина);
	ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаБДДляЗапускаТестов(Команда)
	ПараметрыЗапускаТестов = ТестированиеКлиент.ПараметрыЗапускаТестов();
	ПараметрыЗапускаТестов.Вставить("ЗапускИзСценария",Ложь);
	
	ОткрытьФорму("Обработка.НастройкиЛокальногоЗапускаСценариев.Форма", 
		ПараметрыЗапускаТестов, 
		ЭтаФорма,
		УникальныйИдентификатор,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСценарийБезПроверкиНаКорректность(Команда)
	ФормаПараметры = Новый Структура;
	ФормаПараметры.Вставить("Ключ", Элементы.Список.ТекущаяСтрока);
	ФормаПараметры.Вставить("СтроитьДерево", Ложь);
	ОткрытьФорму("Справочник.СценарииРаботыПользователей.ФормаОбъекта",ФормаПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуФреймворкаТестированияПродолжение(Результат,Адрес,ПомещаемыйФайл,ДополнительныеПараметры) Экспорт
	Если НЕ Результат Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			   НСтр("ru = 'Не получилось подключить файл %1.'"),ПомещаемыйФайл);
	КонецЕсли;	 
	
	#Если НЕ ВебКлиент Тогда
		
	ИмяОбработки = ТестированиеСлужебныйВызовСервера.ПодключитьВнешнююОбработкуСервер(Адрес);
		
	ПараметрыОткрытия = ДополнительныеПараметры;
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДелатьРаскраску",Ложь);
	ДополнительныеПараметры.Вставить("ИсключитьСлужебныеСловаИзТекстаСценария",Истина);
	
	МассивСценариевДляПолученияТекста = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Элементы.Список.ВыделенныеСтроки);
	ИсключитьГруппыИзМассива(МассивСценариевДляПолученияТекста);
	
	Если МассивСценариевДляПолученияТекста.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не найдено сценариев для запуска.'"));
		Возврат;
	КонецЕсли;	 
	
	МассивРолей = Новый Массив;
	НастройкиБДДляЗапускаТестовИзСценария = Неопределено;
	ПрисоединенныеФайлы                   = Неопределено;
	ТекстСценариев = ДанныеДляЗапускаСценариев(МассивСценариевДляПолученияТекста,МассивРолей,
	        НастройкиБДДляЗапускаТестовИзСценария,ПрисоединенныеФайлы,ДополнительныеПараметры);
	
	Если ТекстСценариев = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	НастройкиБДДляЗапускаТестовИзСценария = НастройкиБДДляЗапускаТестовИзСценария();
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ТекстСценариев",ТекстСценариев);
	ПараметрыЗапуска.Вставить("МассивРолей",МассивРолей);
	ПараметрыЗапуска.Вставить("УникальныйИдентификатор",УникальныйИдентификатор);
	ПараметрыЗапуска.Вставить("ПараметрыОткрытия",ПараметрыОткрытия);
	ПараметрыЗапуска.Вставить("НастройкиБДДляЗапускаТестовИзСценария",НастройкиБДДляЗапускаТестовИзСценария);
	ПараметрыЗапуска.Вставить("ПрисоединенныеФайлы",ПрисоединенныеФайлы);
	ПараметрыЗапуска.Вставить("СТекущегоШага",ПараметрыОткрытия.СТекущегоШага);
	ПараметрыЗапуска.Вставить("ЗагрузкаСценария",ПараметрыОткрытия.ЗагрузкаСценария);
	ПараметрыЗапуска.Вставить("ЗапускСценария",ПараметрыОткрытия.ЗапускСценария);
	ПараметрыЗапуска.Вставить("ЭтоПроцесс",Ложь);
	ПараметрыЗапуска.Вставить("ИмяОбработки",ИмяОбработки);
	
	ПараметрыЗапуска.Вставить("НадоСчитатьТекущийPIDTestManager",Ложь);
	
	ТестированиеКлиент.ОткрытьФормуФреймворкаТестирования(ПараметрыЗапуска);
	
	
	Если ПараметрыЗапуска.НадоСчитатьТекущийPIDTestManager Тогда
		КоличествоСекундПроверкиPIDTestManager = 0;
		Если НастройкиБДДляЗапускаТестовИзСценария.Свойство("ТаймаутЗапускаTestManager") Тогда
			Если ЗначениеЗаполнено(НастройкиБДДляЗапускаТестовИзСценария.ТаймаутЗапускаTestManager) Тогда
				КоличествоСекундПроверкиPIDTestManager = НастройкиБДДляЗапускаТестовИзСценария.ТаймаутЗапускаTestManager;
			КонецЕсли;	 
		КонецЕсли;	 
		Если Не ЗначениеЗаполнено(КоличествоСекундПроверкиPIDTestManager) Тогда
			КоличествоСекундПроверкиPIDTestManager = 60;
		КонецЕсли;	 
		
		ПрошлоСекундПроверкиPIDTestManager = 0;
		ИмяФайлаPIDTestManager             = ПараметрыЗапуска.ИмяФайлаPIDTestManager; 
	КонецЕсли;	 
	
	#КонецЕсли
КонецПроцедуры 

&НаСервереБезКонтекста
Функция НастройкиБДДляЗапускаТестовИзСценария()
	Возврат Тестирование.НастройкиБДДляЗапускаТестовИзСценария();
КонецФункции	

&НаКлиенте
Процедура ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия) 
	#Если НЕ ВебКлиент Тогда
		
	ТестированиеКлиент.ПодключитьФреймВоркТестирования(ЭтаФорма.УникальныйИдентификатор,
	"ОткрытьФормуФреймворкаТестированияПродолжение",ЭтаФорма,ПараметрыОткрытия);	
		
	#КонецЕсли
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДобавитьНулей(ПараметрЧисло,КолСимволов)
	Стр = СтрЗаменить(Строка(ПараметрЧисло),Символы.НПП,"");
	
	Пока СтрДлина(Стр) < КолСимволов Цикл
		Стр = "0" + Стр;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

&НаСервере
Функция ДанныеДляЗапускаСценариев(МассивСценариевДляПолученияТекста,МассивРолей,
	          НастройкиБДДляЗапускаТестовИзСценария,ПрисоединенныеФайлы,ДополнительныеПараметры)
			  
	ПрисоединенныеФайлы = Новый Массив;
	
	НастройкиБДДляЗапускаТестовИзСценария = Тестирование.НастройкиБДДляЗапускаТестовИзСценария();
	СтрокаТекста = "#language: ru" + Символы.ПС 
		+ "@tree" + Символы.ПС + "Функциональность: " + СокрЛП("Запуск нескольких сценариев");
	
	СценарииИФайлы = Новый Массив;
	ИдСценария = 0;
	
	Для Каждого ТекСценарий Из МассивСценариевДляПолученияТекста Цикл
		ИдСценария = ИдСценария + 1;
		МассивСценариевДляПолученияФайлов = Новый Массив;
		МассивСценариевДляПолученияФайлов.Добавить(ТекСценарий.Ссылка);
		Тестирование.ДополнитьВложенныеСценарии(МассивСценариевДляПолученияФайлов,ТекСценарий.Ссылка);
		
		ДанныеФайлов = Тестирование.ДанныеФайлов(МассивСценариевДляПолученияФайлов);
		Для Каждого ДанныеФайла Из ДанныеФайлов Цикл
			ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеФайла.Файл);
			ПрисоединенныеФайлы.Добавить(Новый Структура("ДвоичныеДанныеФайла,Имя,Расширение,ИмяКаталога",
			     ДвоичныеДанныеФайла,ДанныеФайла.Наименование,ДанныеФайла.Расширение,ДобавитьНулей(ИдСценария,4)));
		КонецЦикла;	
		
		ОбъектТекстыСценариев = ОбъектнуюМодельТекстыСценариевСервер(ТекСценарий,Ложь,ДополнительныеПараметры);
		Для Каждого ДанныеСценария Из ОбъектТекстыСценариев.ТекстыСценариев Цикл
			Если ЗначениеЗаполнено(ДанныеСценария.Сценарий.ПрофильПользователя) Тогда
				МассивСтрок = СтрРазделить(ДанныеСценария.ТекстСценария,Символы.ПС);
				МассивСтрок.Вставить(4,"	И я подключаю TestClient");
				МассивСтрок.Вставить(5,"	И Я закрыл все окна клиентского приложения");
				ДанныеСценария.ТекстСценария = СтрСоединить(МассивСтрок,Символы.ПС);
				
				Тестирование.ЗаменитьСтрокуПодключенияПрофиляTestClient(
				  ДанныеСценария.ТекстСценария,НастройкиБДДляЗапускаТестовИзСценария,ДанныеСценария.Сценарий.ПрофильПользователя);
			КонецЕсли;	 
			
			Если НЕ ДополнительныеПараметры.ДелатьРаскраску Тогда
				ТестированиеГрафическиеСхемыСервер.ВернутьУгловыеСкобки(ДанныеСценария.ТекстСценария);
			КонецЕсли;	 
			
			СтрокаТекста = СтрокаТекста + Символы.ПС + Символы.ПС + ДанныеСценария.ТекстСценария;
		КонецЦикла;	 
		
		Если МассивРолей.Найти(ТекСценарий.ПрофильПользователя) = Неопределено Тогда
			МассивРолей.Добавить(ТекСценарий.ПрофильПользователя);
		КонецЕсли;	 
	КонецЦикла;	
	
	СтрокаТекста = Тестирование.ОбработкаСлужебныхСловНаДругихЯзыках(СтрокаТекста);
	
	Возврат СтрокаТекста;
КонецФункции	

&НаСервере
Функция ОбъектнуюМодельТекстыСценариевСервер(ТекСценарий,ФлагМодифицированности,ДополнительныеПараметры)
	ТаблицаПараметрыВходящие = ТекСценарий.ПараметрыВходящие.Выгрузить();
	ТаблицаПараметрыВходящие.Колонки.Добавить("НесколькоЗначений",Новый ОписаниеТипов("Булево"));
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаПараметров",ТаблицаПараметрыВходящие);
	СтруктураПараметров.Вставить("ДоТеста",Новый ТаблицаЗначений);
	СтруктураПараметров.Вставить("ПроверкаТеста",Новый ТаблицаЗначений);
	СтруктураПараметров.Вставить("ПослеТеста",Новый ТаблицаЗначений);
	СтруктураПараметров.Вставить("ДеревоСхемы",Неопределено);
	СтруктураПараметров.Вставить("ИспользоватьИмяСценария",Истина);
	СтруктураПараметров.Вставить("ИсключитьСлужебныеСловаИзТекстаСценария",ДополнительныеПараметры.ИсключитьСлужебныеСловаИзТекстаСценария);
	
	Возврат ТестированиеГрафическиеСхемыСервер.ТекстыСценариев(ТекСценарий,СтруктураПараметров);
КонецФункции	

&НаСервереБезКонтекста
Процедура ИсключитьГруппыИзМассива(МассивСценариевДляПолученияТекста)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СценарииРаботыПользователей.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СценарииРаботыПользователей КАК СценарииРаботыПользователей
		|ГДЕ
		|	СценарииРаботыПользователей.Ссылка В(&Ссылка)
		|	И НЕ СценарииРаботыПользователей.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Ссылка", МассивСценариевДляПолученияТекста);
	
	МассивСценариевДляПолученияТекста = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПроекту()
	
	Проекты.УстановитьОтборВСпискеПоПроекту(Список);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	ТекущийПроект = ПараметрыСеанса.ТекущийПроект;
КонецПроцедуры 

#КонецОбласти