#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресСлужебныеДанныеСценариев = Параметры.АдресСлужебныеДанныеСценариев;
	Ветка = Параметры.Ветка;
	Проект = Параметры.Проект;
	UIDСценария = Параметры.UIDСценария;
	
	ДанныеСценариевКеш = ПолучитьИзВременногоХранилища(АдресСлужебныеДанныеСценариев);
	ДанныеСценарияИзКеш = ДанныеСценариевКеш.UIDCценариев[UIDСценария];
	Если ДанныеСценарияИзКеш <> Неопределено Тогда
		Если ДанныеСценарияИзКеш.Свойство("НовыйПутьВДереве") Тогда
			ФайлГруппа = Новый Файл(ДанныеСценарияИзКеш.НовыйПутьВДереве);
		Иначе	
			ФайлПолныйПутьКеш = Новый Файл(ДанныеСценарияИзКеш.ПолноеИмяФайла);
			ФайлКаталогСценария = Новый Файл(ФайлПолныйПутьКеш.Путь);
			ФайлГруппа = Новый Файл(ФайлКаталогСценария.Путь);
		КонецЕсли;	 
		ПутьКСценариюВДереве = ФайлГруппа.ПолноеИмя;
	КонецЕсли;	 
	
	ДанныеРанееИзмененныхСценариев = Параметры.ДанныеРанееИзмененныхСценариев;
	ОбновитьДерево(АдресСлужебныеДанныеСценариев, ДанныеРанееИзмененныхСценариев);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ПутьКСценариюВДереве) Тогда
		АктивизироватьСтрокуДерева(СтрЗаменить(ПутьКСценариюВДереве, "\", "/"));
	КонецЕсли;	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлемент(Команда)
	ТекущиеДанные = Элементы.ДеревоСценариев.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Данные = Новый Структура;
	Данные.Вставить("ИзменениеГруппы", Истина);
	Данные.Вставить("ПолноеИмя", ТекущиеДанные.ПолноеИмя);
	ОповеститьОВыборе(Данные);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДеревоСценариев

&НаКлиенте
Процедура ДеревоСценариевПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСценариевПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСценариевПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСценариевВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтрокаДерева = ДеревоСценариев.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Данные = Новый Структура;
	Данные.Вставить("ИзменениеГруппы", Истина);
	Данные.Вставить("ПолноеИмя", СтрокаДерева.ПолноеИмя);
	ОповеститьОВыборе(Данные);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДерево(АдресСлужебныеДанныеСценариев, ДанныеРанееИзмененныхСценариев)
	КешИзмененныеUID = Новый Соответствие;
	Для Каждого ИзмененныйUID Из ДанныеРанееИзмененныхСценариев.ИзмененныеUID Цикл
		КешИзмененныеUID.Вставить(ИзмененныйUID.UID, ИзмененныйUID);
	КонецЦикла;	 
	ДанныеРанееИзмененныхСценариев.Вставить("КешИзмененныеUID", КешИзмененныеUID);
	
	КешУдаленныеUID = Новый Соответствие;
	Для Каждого УдаленныйUID Из ДанныеРанееИзмененныхСценариев.СценарииСПометкойНаУдаление Цикл
		КешУдаленныеUID.Вставить(УдаленныйUID.UID, ИзмененныйUID);
	КонецЦикла;	 
	ДанныеРанееИзмененныхСценариев.Вставить("КешУдаленныеUID", КешУдаленныеUID);
	
	ДанныеСценариев = ПолучитьИзВременногоХранилища(АдресСлужебныеДанныеСценариев); 
	Данные = ДанныеСценариев.UIDCценариев;
	КодыСценариев = ДанныеСценариев.КодыСценариев;

	Дерево = РеквизитФормыВЗначение("ДеревоСценариев");

	Дерево.Строки.Очистить();
	
	УровниКаталогов = Новый Соответствие;
	СценарииВКорне = Новый Массив;
	
	// Создание каталогов
	СписокСтрокКаталогов = Новый СписокЗначений;
	Для Каждого Элемент Из Данные Цикл
		ДанныеФайла = Элемент.Значение;
		
		СписокСтрокКаталогов.Добавить(Элемент.Значение.ПолноеИмяФайла);
	КонецЦикла;	
	Для Каждого Стр Из ДанныеРанееИзмененныхСценариев.НовыеКаталоги Цикл
		СписокСтрокКаталогов.Добавить(Стр);
	КонецЦикла;	 
	СписокСтрокКаталогов.СортироватьПоЗначению();
	Для Каждого Элем Из СписокСтрокКаталогов Цикл
		РассчитатьКаталогиДерева(Дерево, Элем.Значение, УровниКаталогов);
	КонецЦикла;	
	СписокСтрокКаталогов.Очистить();
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСценариев");
	
КонецПроцедуры 

&НаСервере
Процедура РассчитатьКаталогиДерева(Дерево, СтрокаИерархии, УровниКаталогов)
	ДанныеИерархииФайла = СтрРазделить(СтрокаИерархии, "/");
	ТекКаталог = Неопределено;
	
	Если ДанныеИерархииФайла.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ДанныеИерархииФайла[ДанныеИерархииФайла.Количество()-1] = "meta.yaml"
		И ДанныеИерархииФайла.Количество() >= 2 Тогда
		ДанныеИерархииФайла.Удалить(ДанныеИерархииФайла.Количество() - 1);
		ДанныеИерархииФайла.Удалить(ДанныеИерархииФайла.Количество() - 1);
	КонецЕсли;	 
	
	ИдКаталога = "";
	Для Сч = 0 По ДанныеИерархииФайла.Количество() - 1 Цикл
		Если ПустаяСтрока(ИдКаталога) Тогда
			ИдКаталога = ДанныеИерархииФайла[Сч];
		Иначе	
			ИдКаталога = ИдКаталога + "/" + ДанныеИерархииФайла[Сч];
		КонецЕсли;	
		
		СтрокаДереваКаталог = УровниКаталогов[ИдКаталога];
		Если СтрокаДереваКаталог = Неопределено Тогда
			Если Сч = 0 Тогда
				СтрокаДереваКаталог = Дерево.Строки.Добавить();
			Иначе	
				СтрокаДереваКаталог = ТекКаталог.Строки.Добавить();
			КонецЕсли;	 
			
			СтрокаДереваКаталог.Наименование = ДанныеИерархииФайла[Сч];
			СтрокаДереваКаталог.КартинкаЕстьФайлы = -1;
			СтрокаДереваКаталог.КартинкаЕстьНастройки = -1;
			УровниКаталогов.Вставить(ИдКаталога, СтрокаДереваКаталог);
			СтрокаДереваКаталог.ИдКаталога = ИдКаталога;
			СтрокаДереваКаталог.ПолноеИмя = ПолноеИмяСтрокиДерева(СтрокаДереваКаталог);
			
		КонецЕсли;	 
		
		ТекКаталог = СтрокаДереваКаталог;
	КонецЦикла;	
КонецПроцедуры 

&НаСервере
Функция ПолноеИмяСтрокиДерева(СтрокаДерева)
	Результат = "";
	ТекСтрокаДерева = СтрокаДерева;
	Если ТекСтрокаДерева  = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;	 
	
	ТекРодитель = ТекСтрокаДерева.Родитель;
	Результат = ТекСтрокаДерева.Наименование;
	Пока ТекРодитель <> Неопределено Цикл
		Результат = ТекРодитель.Наименование + "/" + Результат;
		ТекРодитель = ТекРодитель.Родитель;
	КонецЦикла;	
	
	Возврат Результат; 
КонецФункции	 

&НаКлиенте
Процедура АктивизироватьСтрокуДереваРекурсивно(СтрокаДерева, Стр)
	Для Каждого ТекСтрока Из СтрокаДерева.ПолучитьЭлементы() Цикл
		Если ТекСтрока.ПолноеИмя = Стр Тогда
			Элементы.ДеревоСценариев.ТекущаяСтрока = ТекСтрока.ПолучитьИдентификатор();
		КонецЕсли;	 
		
		АктивизироватьСтрокуДереваРекурсивно(ТекСтрока, Стр);
	КонецЦикла;	 
КонецПроцедуры 

&НаКлиенте
Процедура АктивизироватьСтрокуДерева(Стр)
	АктивизироватьСтрокуДереваРекурсивно(ДеревоСценариев, Стр);
КонецПроцедуры 

#КонецОбласти