#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	UIDСценария = Параметры.UIDСценария;
	КодСценария = Параметры.КодСценария;
	ПрофильПользователяСценарий = Параметры.ПрофильПользователяСценарий;
	ТокенПользователя = Параметры.ТокенПользователя;
	Проект = Параметры.Проект;
	Ветка = Параметры.Ветка;
	АдресСлужебныеДанныеСценариев = Параметры.АдресСлужебныеДанныеСценариев;
	ИдентификаторКоммита = Параметры.ИдентификаторКоммита;
	СценарийНаименование = Параметры.СценарийНаименование;
	ЭтоНовыйСценарий = Параметры.ЭтоНовыйСценарий;
	СценарийУжеЗаписывался = Параметры.СценарийУжеЗаписывался;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьСписокНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытьСписокНастроек" Тогда
		Если Параметр.UIDСценария = UIDСценария Тогда
			Закрыть();
		КонецЕсли;	 
	ИначеЕсли ИмяСобытия = "ОтменаИзмененийСценариевРаботыПользователя" Тогда
		ОбновитьСписокНастроек();
	ИначеЕсли ИмяСобытия = "СозданиеНовойНастройкиСценарияРаботыПользователяGit" Тогда
		ОбновитьСписокНастроек();
	КонецЕсли;	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьНастройку()
	Если ЭтоНовыйСценарий И НЕ СценарийУжеЗаписывался Тогда
		ВызватьИсключение 
			НСтр("ru = 'Сначала необходимо записать сценарий.'")
	КонецЕсли;	 
	
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("UIDСценария", UIDСценария);
	ДанныеНастройки.Вставить("Код", "");
	ДанныеНастройки.Вставить("UID", "");
	ДанныеНастройки.Вставить("ПутьВРепозитории", "");
	ДанныеНастройки.Вставить("Наименование", "");
	ДанныеНастройки.Вставить("СценарийНаименование", СценарийНаименование);
	ДанныеНастройки.Вставить("ПрофильПользователя", "");
	ДанныеНастройки.Вставить("ПараметрыЗапуска", "");
	ДанныеНастройки.Вставить("ЭталоннаяБаза", "");
	ДанныеНастройки.Вставить("КодСценария", КодСценария);
	ДанныеНастройки.Вставить("ЭтоНовыйЭлемент", Истина);
	
	ОткрытьНастройкуНаРедактирование(ДанныеНастройки);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройку()
	ТекущиеДанные = Элементы.СписокНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("UIDСценария", UIDСценария);
	ДанныеНастройки.Вставить("Код", ТекущиеДанные.Код);
	ДанныеНастройки.Вставить("UID", ТекущиеДанные.UID);
	ДанныеНастройки.Вставить("ПутьВРепозитории", ТекущиеДанные.ПутьВРепозитории);
	ДанныеНастройки.Вставить("Наименование", "");
	ДанныеНастройки.Вставить("СценарийНаименование", СценарийНаименование);
	ДанныеНастройки.Вставить("ПрофильПользователя", "");
	ДанныеНастройки.Вставить("ПараметрыЗапуска", "");
	ДанныеНастройки.Вставить("ЭталоннаяБаза", "");
	ДанныеНастройки.Вставить("КодСценария", КодСценария);
	ДанныеНастройки.Вставить("ЭтоНовыйЭлемент", Истина);
	ДанныеНастройки.Вставить("КопированиеЭлемента", Истина);
	ДанныеНастройки.Вставить("КопируетсяНастройкаКоторойНетВРепозитории", ТекущиеДанные.ЭтоНовыйЭлемент);
	ДанныеНастройки.Вставить("UIDКопируемойНастройки", ТекущиеДанные.UID);
	
	ОткрытьНастройкуНаРедактирование(ДанныеНастройки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписокНастроек

&НаКлиенте
Процедура СписокНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработчикВыбора(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	Если Элементы.СписокНастроек.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Элементы.СписокНастроек.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	ОбработчикВыбора(Элементы.СписокНастроек.ТекущаяСтрока)
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.СписокНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	УстановкаПометки = Истина;
	Если Элементы.СписокНастроек.ВыделенныеСтроки.Количество() > 1 Тогда
		Если ТекущиеДанные.ПометкаУдаления Тогда
			УстановкаПометки = Ложь;
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Снять с выделенных элементов пометку на удаление?'"), ТекущиеДанные.Наименование);
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пометить выделенные элементы на удаление?'"), ТекущиеДанные.Наименование);
		КонецЕсли;	 
	Иначе	
		Если ТекущиеДанные.ПометкаУдаления Тогда
			УстановкаПометки = Ложь;
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Снять с ""%1"" пометку на удаление?'"), ТекущиеДанные.Наименование);
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пометить ""%1"" на удаление?'"), ТекущиеДанные.Наименование);
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("УстановкаПометки", УстановкаПометки);
	ДопПараметры.Вставить("ВыделенныеСтроки", Элементы.СписокНастроек.ВыделенныеСтроки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВопросаОПометкеНаУдаление", ЭтотОбъект, ДопПараметры);
	ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да); 
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	Если Копирование Тогда
		СкопироватьНастройку();
		Возврат;
	КонецЕсли;	 
	
	СоздатьНастройку();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ДанныеНастройкиПоСтроке(СтрокаСписка)
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("UIDСценария", UIDСценария);
	ДанныеНастройки.Вставить("Код", СтрокаСписка.Код);
	ДанныеНастройки.Вставить("UID", СтрокаСписка.UID);
	ДанныеНастройки.Вставить("ПутьВРепозитории", СтрокаСписка.ПутьВРепозитории);
	ДанныеНастройки.Вставить("Наименование", СтрокаСписка.Наименование);
	ДанныеНастройки.Вставить("СценарийНаименование", СтрокаСписка.СценарийНаименование);
	ДанныеНастройки.Вставить("ПрофильПользователя", СтрокаСписка.ПрофильПользователя);
	ДанныеНастройки.Вставить("ПараметрыЗапуска", СтрокаСписка.ПараметрыЗапуска);
	ДанныеНастройки.Вставить("ЭталоннаяБаза", СтрокаСписка.ЭталоннаяБаза);
	ДанныеНастройки.Вставить("ЭтоНовыйЭлемент", СтрокаСписка.ЭтоНовыйЭлемент);
	ДанныеНастройки.Вставить("КодСценария", КодСценария);
	
	Возврат ДанныеНастройки; 
КонецФункции	 

&НаКлиенте
Процедура ОткрытьНастройкуНаРедактирование(ДанныеНастройки)
	ДанныеНастройки.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	ДанныеНастройки.Вставить("ТокенПользователя", ТокенПользователя);
	ДанныеНастройки.Вставить("Ветка", Ветка);
	ДанныеНастройки.Вставить("Проект", Проект);
	ДанныеНастройки.Вставить("ИдентификаторКоммита", ИдентификаторКоммита);
	ДанныеНастройки.Вставить("ПрофильПользователяСценарий", ПрофильПользователяСценарий);
	ТестированиеКлиент.ОткрытьНастройкуСценарияДляРедактированияВРепозитории(ДанныеНастройки);
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьСписокНастроек()
	Если ЭтоНовыйСценарий И НЕ СценарийУжеЗаписывался Тогда
		Возврат;
	КонецЕсли;	 
	
	ДанныеРанееИзмененныхСценариев = ТестированиеКлиент.ДанныеРанееИзмененныхСценариев(Ветка, Проект);
	
	ДанныеДляПолученияФайловНастроек = ДанныеРепозитория();
	ДанныеДляПолученияФайловНастроек.Вставить("ДанныеДляПолученияНастроек", ДанныеДляПолученияНастроек());
	ДанныеДляПолученияФайловНастроек.Вставить("ДанныеРанееИзмененныхСценариев", ДанныеРанееИзмененныхСценариев);
	НастройкиСценарияИзРепозитория = ТестированиеКлиент.ДанныеНастроекСценарияИзРепозитория(ДанныеДляПолученияФайловНастроек);
	АдресСлужебныеДанныеСценариев = ДанныеДляПолученияФайловНастроек.АдресСлужебныеДанныеСценариев;
	
	Для Каждого Элем Из ДанныеРанееИзмененныхСценариев.НовыеНастройки Цикл
		Если Элем["ДанныеТеста"]["UIDСценария"] <> UIDСценария Тогда
			Продолжить;
		КонецЕсли;	 
		
		ДанныеНовойНастройки = Новый Структура;
		ДанныеНовойНастройки.Вставить("Наименование", Элем["ДанныеТеста"]["Имя"]);
		ДанныеНовойНастройки.Вставить("СценарийНаименование", Элем["ДанныеТеста"]["СценарийНаименование"]);
		ДанныеНовойНастройки.Вставить("ЭталоннаяБаза", Элем["ДанныеТеста"]["ЭталоннаяБазаИмя"]);
		ДанныеНовойНастройки.Вставить("ПрофильПользователя", Элем["ДанныеТеста"]["ПрофильПользователя"]);
		ДанныеНовойНастройки.Вставить("ПараметрыЗапуска", Элем["ДанныеТеста"]["ПараметрыЗапуска"]);
		ДанныеНовойНастройки.Вставить("Код", Элем["ДанныеТеста"]["Код"]);
		ДанныеНовойНастройки.Вставить("UID", Элем["ДанныеТеста"]["UID"]);
		ДанныеНовойНастройки.Вставить("ПутьВРепозитории", "");
		ДанныеНовойНастройки.Вставить("ЭтоНовыйЭлемент", Истина);
		
		НастройкиСценарияИзРепозитория.ДанныеНастроек.Добавить(ДанныеНовойНастройки);
	КонецЦикла;	 
	
	ОбновитьСписокНастроекПоДаннымИзРепозитория(НастройкиСценарияИзРепозитория, ДанныеРанееИзмененныхСценариев);
	
	УпорядочитьСписок();
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьСписокНастроекПоДаннымИзРепозитория(НастройкиСценарияИзРепозитория, ДанныеРанееИзмененныхСценариев)
	СписокНастроек.Очистить();
	
	Для Каждого Элем Из НастройкиСценарияИзРепозитория.ДанныеНастроек Цикл
		СтрокаНастройки = СписокНастроек.Добавить();
		СтрокаНастройки.Наименование = Элем.Наименование;
		СтрокаНастройки.СценарийНаименование = Элем.СценарийНаименование;
		СтрокаНастройки.ЭталоннаяБаза = Элем.ЭталоннаяБаза;
		СтрокаНастройки.ПрофильПользователя = Элем.ПрофильПользователя;
		СтрокаНастройки.ПараметрыЗапуска = Элем.ПараметрыЗапуска;
		СтрокаНастройки.Код = Элем.Код;
		СтрокаНастройки.UID = Элем.UID;
		Если Элем.Свойство("path") Тогда
			СтрокаНастройки.ПутьВРепозитории = Элем.path;
		КонецЕсли;	 
		
		Если Элем.Свойство("ЭтоНовыйЭлемент") Тогда
			СтрокаНастройки.ЭтоНовыйЭлемент = Элем.ЭтоНовыйЭлемент;
		Иначе
			Для Каждого ДанныеНастройки Из ДанныеРанееИзмененныхСценариев.ИзмененныеНастройки Цикл
				Если ДанныеНастройки["ДанныеТеста"]["UID"] = СтрокаНастройки.UID  Тогда
					СтрокаНастройки.ЭтоИзмененныйЭлемент = Истина;
				КонецЕсли;	 
			КонецЦикла;	 
		КонецЕсли;	 
		
		Для Каждого ДанныеНастройки Из ДанныеРанееИзмененныхСценариев.УдаленныеНастройки Цикл
			Если СтрокаНастройки.UID = ДанныеНастройки.UID Тогда
				СтрокаНастройки.ПометкаУдаления = Истина;
				Прервать;
			КонецЕсли;	 
		КонецЦикла;	 
	КонецЦикла;	 
	
КонецПроцедуры 

&НаКлиенте
Функция ДанныеДляПолученияНастроек()
	
	Структура = Новый Структура;
	Структура.Вставить("UIDСценария", UIDСценария);
	Структура.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	
	Возврат Структура;
КонецФункции	 

&НаСервере
Функция ДанныеРепозитория()
	Структура = Новый Структура;
	Структура.Вставить("Проект", Проект);
	Структура.Вставить("ТокенПользователя", ТокенПользователя);
	Структура.Вставить("Ветка", Ветка);
	Структура.Вставить("ИдентификаторКоммита", ИдентификаторКоммита);
	Структура.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	
	Возврат Структура; 
КонецФункции	 

&НаКлиенте
Процедура ОбработчикВыбора(ВыбраннаяСтрока)
	Если ПустаяСтрока(ВыбраннаяСтрока) Тогда
		Возврат;
	КонецЕсли;	 
	
	ТекущиеДанные = СписокНастроек.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ДанныеНастройки = ДанныеНастройкиПоСтроке(ТекущиеДанные);
	ОткрытьНастройкуНаРедактирование(ДанныеНастройки);
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВопросаОПометкеНаУдаление(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Для Каждого ИдСтроки Из ДополнительныеПараметры.ВыделенныеСтроки Цикл
			СтрокаНастройки = СписокНастроек.НайтиПоИдентификатору(ИдСтроки);
			СтрокаНастройки.ПометкаУдаления = ДополнительныеПараметры.УстановкаПометки;
		КонецЦикла;
	КонецЕсли;
	
	НастройкиСПометкойНаУдаление = НастройкиСПометкойНаУдаление();
	ТестированиеКлиент.ЗаписатьДанныеОбУдаленныхНастройках(НастройкиСПометкойНаУдаление, Ветка, Проект, КодСценария);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("UIDСценария", UIDСценария);
	Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя", ПараметрыОповещения);
	
КонецПроцедуры

&НаКлиенте
Функция НастройкиСПометкойНаУдаление()
	Результат = Новый Массив;
	
	Для Каждого СтрокаСписокНастроек Из СписокНастроек Цикл
		Если НЕ СтрокаСписокНастроек.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;	 
		
		Структура = Новый Структура;
		Структура.Вставить("UID", СтрокаСписокНастроек.UID);
		Структура.Вставить("UIDСценария", UIDСценария);
		Структура.Вставить("КодСценария", КодСценария);
		Структура.Вставить("СценарийНаименование", СценарийНаименование);
		Структура.Вставить("ПутьВРепозитории", СтрокаСписокНастроек.ПутьВРепозитории);
		Структура.Вставить("Код", СтрокаСписокНастроек.Код);
		Результат.Добавить(Структура);
	КонецЦикла;	 
	
	Возврат Результат; 
КонецФункции	 

&НаСервере
Процедура УпорядочитьСписок()
	СписокНастроекСервер = РеквизитФормыВЗначение("СписокНастроек");
	СписокНастроекСервер.Сортировать("Наименование");
	ЗначениеВРеквизитФормы(СписокНастроекСервер,"СписокНастроек"); 
КонецПроцедуры 

#КонецОбласти
