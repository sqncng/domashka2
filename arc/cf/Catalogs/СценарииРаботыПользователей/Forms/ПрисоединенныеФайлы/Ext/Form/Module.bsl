
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	UIDСценария = Параметры.UIDСценария;
	КодСценария = Параметры.Код;
	ТокенПользователя = Параметры.ТокенПользователя;
	Проект = Параметры.Проект;
	Ветка = Параметры.Ветка;
	АдресСлужебныеДанныеСценариев = Параметры.АдресСлужебныеДанныеСценариев;
	ИдентификаторКоммита = Параметры.ИдентификаторКоммита;
	НаименованиеСценария = Параметры.НаименованиеСценария;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьСписокФайлов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ФиксацияИзмененийСценариевПользователей" Тогда
		ОбновитьСписокФайлов();
	ИначеЕсли ИмяСобытия = "Запись_ТабличныйДокумент" Тогда
		Для Каждого СтрокаСписокФайлов Из СписокФайлов Цикл
			Если СтрокаСписокФайлов.ПутьЛокально = Параметр.ПутьКФайлу и ЗначениеЗаполнено(Параметр.ПутьКФайлу) Тогда
				Если ПустаяСтрока(СтрокаСписокФайлов.Действие) Тогда
					СтрокаСписокФайлов.Действие = "Изменение";
					
					ДанныеДляПолученияФайлов = ДанныеРепозитория();
					ДанныеСценария = ДанныеСценария();
					ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария);
					ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
					Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя", ДанныеСценария);
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЦикла;	 
	КонецЕсли;	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНаДиск(Команда)
	Если Элементы.СписокФайлов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.СписокФайлов.ТекущиеДанные;
	
	Если ПустаяСтрока(ТекущиеДанные.Действие) Тогда
		ПутьВРепозитории = ТекущиеДанные.ПутьВРепозитории;
		ДвоичныеДанныеФайла = ДвоичныеДанныеФайлаСервер(ПутьВРепозитории);
		Файл = Новый Файл(ПутьВРепозитории);
	Иначе	
		Файл = Новый Файл(ТекущиеДанные.ПутьЛокально);
		ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ТекущиеДанные.ПутьЛокально);
	КонецЕсли;	 
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Фильтр = Сред(Файл.Расширение, 2) + "|*" + Файл.Расширение;
	ДиалогВыбораФайла.ПолноеИмяФайла = ТекущиеДанные.Наименование;
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;	 
	
	ДвоичныеДанныеФайла.Записать(ДиалогВыбораФайла.ПолноеИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлИзСписка(Команда)
	ОбработкаУдаленияСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлВСписок(Команда)
	
	ОбработкаДобавленияФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаНаДиске(Команда)
	Если Элементы.СписокФайлов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.СписокФайлов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Элементы.СписокФайлов.ТекущиеДанные.Действие = "Удаление" Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Элементы.СписокФайлов.ТекущиеДанные.Действие = "Добавление" Тогда
		Файл = Новый Файл(Элементы.СписокФайлов.ТекущиеДанные.ПутьЛокально);
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Фильтр = Сред(Файл.Расширение, 2) + "|*" + Файл.Расширение;
		ДиалогВыбораФайла.ПолноеИмяФайла = Файл.Имя;
	Иначе	
		ПутьВРепозитории = Элементы.СписокФайлов.ТекущиеДанные.ПутьВРепозитории;
		ДвоичныеДанныеФайла = ДвоичныеДанныеФайлаСервер(ПутьВРепозитории);
		Файл = Новый Файл(ПутьВРепозитории);
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Фильтр = Сред(Файл.Расширение, 2) + "|*" + Файл.Расширение;
		ДиалогВыбораФайла.ПолноеИмяФайла = Файл.Имя;
		Элементы.СписокФайлов.ТекущиеДанные.Действие = "Изменение";
	КонецЕсли;	 
	
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;	 
	
	Элементы.СписокФайлов.ТекущиеДанные.ПутьЛокально = ДиалогВыбораФайла.ПолноеИмяФайла;
	
	ДанныеДляПолученияФайлов = ДанныеРепозитория();
	ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
	ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
	Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя");
	
КонецПроцедуры

&НаКлиенте
Процедура Фиксировать(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ветка", Ветка);
	ПараметрыФормы.Вставить("Проект", Проект);
	ПараметрыФормы.Вставить("ТокенПользователя", ТокенПользователя);
	ПараметрыФормы.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	ПараметрыФормы.Вставить("ИдентификаторКоммита", ИдентификаторКоммита);
	ОткрытьФорму("Справочник.СценарииРаботыПользователей.Форма.ФормаФиксироватьИзменения", ПараметрыФормы, , Ветка); 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзменения(Команда)
	
	ТекстВопроса = НСтр("ru = 'Отменить изменения по присоединенным файлам сценария?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВопросаОбОтменеИзменений", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК); 
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФайл(Команда)
	#Если НЕ ВебКлиент Тогда
	Если Элементы.СписокФайлов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.СписокФайлов.ТекущиеДанные;
	
	Если ТекущиеДанные.Действие = "Удаление" Тогда
		Возврат;
	КонецЕсли;	 
	
	Если ТекущиеДанные.Действие = "Добавление" Тогда
		ПутьВРепозитории = ТекущиеДанные.ПутьЛокально;
	Иначе	
		ПутьВРепозитории = ТекущиеДанные.ПутьВРепозитории;
	КонецЕсли;	 
	
	Файл = Новый Файл(ПутьВРепозитории);
	Если НРег(Файл.Расширение) <> ".mxl" Тогда
		Возврат;
	КонецЕсли;	 
	
	Если ТекущиеДанные.Действие = "Добавление" Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяДокумента", Файл.Имя);
		ПараметрыОткрытия.Вставить("ПутьКФайлу", Файл.ПолноеИмя);
		ПараметрыОткрытия.Вставить("ТабличныйДокумент", ТабличныйДокументИзДвоичныхДанных(Новый ДвоичныеДанные(Файл.ПолноеИмя)));
		ПараметрыОткрытия.Вставить("Редактирование", Истина);
		ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", "");
		ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия);
	Иначе	
		Если ТекущиеДанные.Действие = "Изменение" Тогда
			ИмяФайла = ТекущиеДанные.ПутьЛокально;
			ТабличныйДокумент = ТабличныйДокументИзДвоичныхДанных(Новый ДвоичныеДанные(ИмяФайла));
		Иначе	
			ДвоичныеДанныеФайла = ДвоичныеДанныеФайлаСервер(ПутьВРепозитории);
			ТабличныйДокумент = ТабличныйДокументИзДвоичныхДанных(ДвоичныеДанныеФайла);
			ИмяФайла = ПолучитьИмяВременногоФайла("mxl");
			ВременныйФайл = Новый Файл(ИмяФайла);
			
			КаталогВременныхФайловВетки = ТестированиеКлиент.КаталогВременныхФайловВетки("", Ветка, ИмяПроектаСтрокой(Проект));
			ИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайловВетки) + ВременныйФайл.Имя;
			
			ТабличныйДокумент.Записать(ИмяФайла);
			ТекущиеДанные.ПутьЛокально = ИмяФайла; 
		КонецЕсли;	 
		ВременныйФайл = Новый Файл(ИмяФайла);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяДокумента", Файл.Имя);
		ПараметрыОткрытия.Вставить("ПутьКФайлу", ВременныйФайл.ПолноеИмя);
		ПараметрыОткрытия.Вставить("ТабличныйДокумент", ТабличныйДокумент);
		ПараметрыОткрытия.Вставить("Редактирование", Истина);
		ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", "");
		ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия);
	КонецЕсли;	 
	
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияФайлов(Команда)
	Элементы.СписокФайловДатаИзменения.Видимость = Истина;
	ОбновитьДатуИзмененияФайлов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписокФайлов

&НаКлиенте
Процедура СписокФайловПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ОбработкаУдаленияСтроки();
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;	 
	
	ОбработкаДобавленияФайла();
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	БылиИзменения = Ложь;
	
	Если Элементы.СписокФайлов.ТекущиеДанные <> Неопределено Тогда
		НовоеНаименование = Элементы.СписокФайлов.ТекущиеДанные.Наименование;
		Сч = 0;
		Для Каждого СтрокаСписокФайлов Из СписокФайлов Цикл
			Если НРег(СтрокаСписокФайлов.Наименование) = НРег(НовоеНаименование) Тогда
				Сч = Сч + 1;
				Если Сч > 1 Тогда
					Отказ = Истина;
					ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Файл с именем <%1> уже существует.'"), СтрокаСписокФайлов.Наименование);
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЦикла;	 
	КонецЕсли;	 
	
	Если НЕ НоваяСтрока Тогда
		Если Элементы.СписокФайлов.ТекущиеДанные <> Неопределено
			И ЗначениеЗаполнено(Элементы.СписокФайлов.ТекущиеДанные.ПутьВРепозитории) Тогда
			
			Файл = Новый Файл(Элементы.СписокФайлов.ТекущиеДанные.ПутьВРепозитории);
			
			Если Элементы.СписокФайлов.ТекущиеДанные.Наименование <> Файл.Имя Тогда
				Элементы.СписокФайлов.ТекущиеДанные.СтароеИмяФайла = Файл.Имя;
				Элементы.СписокФайлов.ТекущиеДанные.ИзмененоИмяФайла = Истина;
				БылиИзменения = Истина;
			Иначе
				Если Элементы.СписокФайлов.ТекущиеДанные.ИзмененоИмяФайла Тогда
					Элементы.СписокФайлов.ТекущиеДанные.ИзмененоИмяФайла = Ложь;
					БылиИзменения = Истина;
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если ЗначениеЗаполнено(Элементы.СписокФайлов.ТекущиеДанные.НаименованиеОригинал) Тогда
			Если Элементы.СписокФайлов.ТекущиеДанные.Наименование <> Элементы.СписокФайлов.ТекущиеДанные.НаименованиеОригинал Тогда
				Элементы.СписокФайлов.ТекущиеДанные.ИзмененоИмяФайла = Истина;
				БылиИзменения = Истина;
			КонецЕсли;	 
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	ОбновитьИндексыКартинокСервер();
	
	Если БылиИзменения Тогда
		ДанныеДляПолученияФайлов = ДанныеРепозитория();
		ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
		ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
		Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя");
	КонецЕсли;	 

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСписокФайлов()
	ДанныеРанееИзмененныхСценариев = ТестированиеКлиент.ДанныеРанееИзмененныхСценариев(Ветка, Проект);	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДанныеРанееИзмененныхСценариев", ДанныеРанееИзмененныхСценариев);
	СтруктураПараметров.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	ОбновитьСписокФайловСервер(СтруктураПараметров);
	
	ДанныеДляПолученияФайлов = ДанныеРепозитория();
	ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
	СостояниеФайловЛокальнойКопииРепозитория = ТестированиеКлиент.СостояниеФайловЛокальнойКопииРепозитория(ДанныеДляПолученияФайлов);
	
	ОбновитьСостояниеФайловСогласноЛокальнымДанным(СостояниеФайловЛокальнойКопииРепозитория);
КонецПроцедуры 

&НаСервере
Функция ДанныеСценария()
	Структура = Новый Структура;
	Структура.Вставить("UIDСценария", UIDСценария);
	Структура.Вставить("Код", КодСценария);
	
	ДанныеФайлов = Новый Массив;
	
	Для Каждого СтрокаСписокФайлов Из СписокФайлов Цикл
		ДанныеФайла = Новый Структура;
		ДанныеФайла.Вставить("Наименование", СтрокаСписокФайлов.Наименование);
		ДанныеФайла.Вставить("ПутьВРепозитории", СтрокаСписокФайлов.ПутьВРепозитории);
		ДанныеФайла.Вставить("ПутьЛокально", СтрокаСписокФайлов.ПутьЛокально);
		ДанныеФайла.Вставить("Действие", СтрокаСписокФайлов.Действие);
		ДанныеФайла.Вставить("СтароеИмяФайла", СтрокаСписокФайлов.СтароеИмяФайла);
		ДанныеФайла.Вставить("ИзмененоИмяФайла", СтрокаСписокФайлов.ИзмененоИмяФайла);
		ДанныеФайла.Вставить("UIDСценария", UIDСценария);
		ДанныеФайла.Вставить("ИмяСценария", НаименованиеСценария);
		ДанныеФайла.Вставить("КодСценария", КодСценария);
		ДанныеФайла.Вставить("КоличествоФайлов", СписокФайлов.Количество());
	
		ДанныеФайлов.Добавить(ДанныеФайла);
	КонецЦикла;	 
	
	Структура.Вставить("ДанныеФайлов", ДанныеФайлов);
	
	Возврат Структура;
КонецФункции	 

&НаСервере
Процедура ОбновитьСписокФайловСервер(СтруктураПараметров)
	ДанныеДляПолученияФайлов = ДанныеРепозитория();
	ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
	ДанныеДляПолученияФайлов.Вставить("ДанныеРанееИзмененныхСценариев", СтруктураПараметров.ДанныеРанееИзмененныхСценариев);
	ФайлыСценария = Тестирование.ФайлыСценарияИзРепозитория(ДанныеДляПолученияФайлов);
	АдресСлужебныеДанныеСценариев = ДанныеДляПолученияФайлов.АдресСлужебныеДанныеСценариев;
		
	ОбновитьСписокФайловПоДаннымИзРепозитория(ФайлыСценария);	
		
КонецПроцедуры 

&НаСервере
Процедура ОбновитьСписокФайловПоДаннымИзРепозитория(ФайлыСценария)
	СписокФайловСервер = РеквизитФормыВЗначение("СписокФайлов");
	СписокФайловСервер.Очистить();
	
	Для Каждого Элем Из ФайлыСценария Цикл
		СтрокаФайлы = СписокФайловСервер.Добавить();
		СтрокаФайлы.Наименование = Элем.name;
		СтрокаФайлы.ПутьВРепозитории = Элем.path;
	КонецЦикла;	 
	
	СписокФайловСервер.Сортировать("Наименование");
	
	ЗначениеВРеквизитФормы(СписокФайловСервер,"СписокФайлов"); 
КонецПроцедуры 

&НаСервере
Функция ДанныеРепозитория()
	Структура = Новый Структура;
	Структура.Вставить("Проект", Проект);
	Структура.Вставить("ТокенПользователя", ТокенПользователя);
	Структура.Вставить("Ветка", Ветка);
	Структура.Вставить("ИдентификаторКоммита", ИдентификаторКоммита);
	Структура.Вставить("АдресСлужебныеДанныеСценариев", АдресСлужебныеДанныеСценариев);
	
	Возврат Структура; 
КонецФункции	 

&НаСервере
Функция ДвоичныеДанныеФайлаСервер(ПутьВРепозитории)
	ДанныеДляПолученияФайла = ДанныеРепозитория();
	ДанныеДляПолученияФайла.Вставить("ДанныеСценария", ДанныеСценария());
	ДанныеДляПолученияФайла.Вставить("ПутьВРепозитории", ПутьВРепозитории);
	
	Возврат Тестирование.ДвоичныеДанныеФайлаИзРепозитория(ДанныеДляПолученияФайла); 
КонецФункции	 

&НаКлиенте
Процедура ОбработкаУдаленияСтроки()
	Если Элементы.СписокФайлов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекстВопроса = НСтр("ru = 'Вы уверены?'");
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыделенныеСтроки", Элементы.СписокФайлов.ВыделенныеСтроки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВопросаУдалениеФайла", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК); 
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВопросаУдалениеФайла(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		СтрокиКУдалению = Новый Массив;
		Для Каждого НомерСтроки Из ДополнительныеПараметры.ВыделенныеСтроки Цикл
			СтрокаТаблицы = СписокФайлов.НайтиПоИдентификатору(НомерСтроки);
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
		КонецЦикла;	 
		
		ДанныеСтрокиДляАктивизации = Неопределено;
		Если СтрокиКУдалению.Количество() = 1 Тогда
			ДанныеСтрокиДляАктивизации = СтрокиКУдалению[0];
		КонецЕсли;	 
		
		Для Каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
			Если СтрокаТаблицы.Действие = "Удаление" Тогда
				СтрокаТаблицы.Действие = Неопределено;
			ИначеЕсли СтрокаТаблицы.Действие = "Добавление"  Тогда
				СписокФайлов.Удалить(СписокФайлов.Индекс(СтрокаТаблицы));
			Иначе
				СтрокаТаблицы.Действие = "Удаление";
			КонецЕсли;	 
			
		КонецЦикла;	 
		
		ДанныеДляПолученияФайлов = ДанныеРепозитория();
		ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
		ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
		Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя");
		
		ОбновитьИндексыКартинокСервер();
		
		Если ДанныеСтрокиДляАктивизации <> Неопределено Тогда
			Для Каждого СтрокаСписокФайлов Из СписокФайлов Цикл
				Если СтрокаСписокФайлов.ПутьВРепозитории = ДанныеСтрокиДляАктивизации.ПутьВРепозитории Тогда
					Элементы.СписокФайлов.ТекущаяСтрока = СтрокаСписокФайлов.ПолучитьИдентификатор();
				КонецЕсли;	 
			КонецЦикла;	 
			
		КонецЕсли;	 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИндексыКартинокСервер()
	СписокФайловСервер = РеквизитФормыВЗначение("СписокФайлов");
	
	ОбновитьИндексыКартинокФайлов(СписокФайловСервер);
	
	ЗначениеВРеквизитФормы(СписокФайловСервер, "СписокФайлов"); 
КонецПроцедуры 

&НаСервере
Процедура ОбновитьСостояниеФайловСогласноЛокальнымДанным(СостояниеФайловЛокальнойКопииРепозитория)
	СписокФайловСервер = РеквизитФормыВЗначение("СписокФайлов");
	
	СтрокиКУдалению = Новый Массив;
	
	Для Каждого ДанныеФайла Из СостояниеФайловЛокальнойКопииРепозитория Цикл
		
		Если ДанныеФайла.UIDСценария  <> UIDСценария Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если ДанныеФайла.Действие = "Удаление" Тогда
			Для Каждого СтрокаСписокФайловСервер Из СписокФайловСервер Цикл
				Если СтрокаСписокФайловСервер.ПутьВРепозитории = ДанныеФайла.ПутьВРепозитории Тогда
					СтрокаСписокФайловСервер.Действие = "Удаление";
				КонецЕсли;	 
			КонецЦикла;	 
		ИначеЕсли ДанныеФайла.Действие = "Изменение" Тогда
			Для Каждого СтрокаСписокФайловСервер Из СписокФайловСервер Цикл
				Если СтрокаСписокФайловСервер.ПутьВРепозитории = ДанныеФайла.ПутьВРепозитории Тогда
					СтрокаСписокФайловСервер.Действие = "Изменение";
					СтрокаСписокФайловСервер.ПутьЛокально = ДанныеФайла.ПутьЛокально;
				КонецЕсли;	 
			КонецЦикла;	 
		ИначеЕсли ДанныеФайла.Действие = "Добавление" Тогда
			СтрокаСписокФайловСервер = СписокФайловСервер.Добавить();
			СтрокаСписокФайловСервер.ПутьЛокально = ДанныеФайла.ПутьЛокально;
			Файл = Новый Файл(СтрокаСписокФайловСервер.ПутьЛокально); 
			СтрокаСписокФайловСервер.Наименование = ДанныеФайла.Наименование;
			СтрокаСписокФайловСервер.Действие = "Добавление";
		КонецЕсли;
		
		Если ДанныеФайла.ИзмененоИмяФайла Тогда
			Для Каждого СтрокаСписокФайловСервер Из СписокФайловСервер Цикл
				Если ЗначениеЗаполнено(СтрокаСписокФайловСервер.ПутьВРепозитории)
					И СтрокаСписокФайловСервер.ПутьВРепозитории = ДанныеФайла.ПутьВРепозитории Тогда
					СтрокаСписокФайловСервер.ИзмененоИмяФайла = Истина;
					СтрокаСписокФайловСервер.Наименование = ДанныеФайла.Наименование;
				КонецЕсли;	 
			КонецЦикла;	 
		КонецЕсли;
		
		СтрокаСписокФайловСервер.НаименованиеОригинал = СтрокаСписокФайловСервер.Наименование;
		
	КонецЦикла;	 
	
	ОбновитьИндексыКартинокФайлов(СписокФайловСервер);
	
	ЗначениеВРеквизитФормы(СписокФайловСервер,"СписокФайлов"); 
КонецПроцедуры 

&НаСервере
Процедура ОбновитьИндексыКартинокФайлов(Тзн)
	Для Каждого СтрокаТзн Из Тзн Цикл
		Файл = Новый Файл(СтрокаТзн.Наименование);
		
		СтрокаТзн.ИндексКартинки =
			РаботаСФайламиСлужебныйКлиентСервер.ПолучитьИндексПиктограммыФайла(Файл.Расширение);
			
		Если СтрокаТзн.Действие = "Удаление" Тогда
			СтрокаТзн.ИндексКартинки = СтрокаТзн.ИндексКартинки + 1;
		КонецЕсли;	 	
	КонецЦикла;	 
КонецПроцедуры 

&НаСервере
Функция СФормироватьНовоеИмяФайлаСИндексом(ИмяФайла, ТабицаФайлов)
	
	ЗанятыеИмена = Новый Соответствие;
	Для Каждого СтрокаТабицаФайлов Из ТабицаФайлов Цикл
		ЗанятыеИмена.Вставить(НРег(СтрокаТабицаФайлов.Наименование), Истина);
	КонецЦикла;	 
	
	Файл = Новый Файл(ИмяФайла);
	
	Сч = 0;
	Пока Истина Цикл
		Сч = Сч + 1;
		НовоеИмяФайла = Файл.ИмяБезРасширения + Формат(Сч, "ЧГ=; ЧН=0") + Файл.Расширение;
		
		Если ЗанятыеИмена[НРег(НовоеИмяФайла)] = Неопределено Тогда
			Возврат НовоеИмяФайла; 
		КонецЕсли;	 
		
	КонецЦикла;	
	
КонецФункции	 

&НаСервере
Процедура ДобавитьСтрокуСНовымФайлом(ИмяФайла)
	СписокФайловСервер = РеквизитФормыВЗначение("СписокФайлов");
	
	Файл = Новый Файл(ИмяФайла);
	
	ТекущееИмяФайла = Файл.Имя;
	Для Каждого СтрокаСписокФайловСервер Из СписокФайловСервер Цикл
		Если НРег(СтрокаСписокФайловСервер.Наименование) = НРег(ТекущееИмяФайла) Тогда
			ТекущееИмяФайла = СФормироватьНовоеИмяФайлаСИндексом(ТекущееИмяФайла, СписокФайловСервер);
		КонецЕсли;	 
	КонецЦикла;	 
	
	СтрокаСписокФайловСервер = СписокФайловСервер.Добавить();
	СтрокаСписокФайловСервер.Наименование = ТекущееИмяФайла;
	СтрокаСписокФайловСервер.НаименованиеОригинал = СтрокаСписокФайловСервер.Наименование;
	СтрокаСписокФайловСервер.ПутьЛокально = ИмяФайла;
	СтрокаСписокФайловСервер.Действие = "Добавление";
	
	ОбновитьИндексыКартинокФайлов(СписокФайловСервер);
	
	ЗначениеВРеквизитФормы(СписокФайловСервер,"СписокФайлов"); 
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаДобавленияФайла()
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;	 
	
	ДобавитьСтрокуСНовымФайлом(ДиалогВыбораФайла.ПолноеИмяФайла);
	
	ДанныеДляПолученияФайлов = ДанныеРепозитория();
	ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
	ДанныеДляПолученияФайлов.Вставить("ИмяФайла", ДиалогВыбораФайла.ПолноеИмяФайла);
	ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("UIDСценария", UIDСценария);
	Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя", ДопПараметры);
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ТабличныйДокументИзДвоичныхДанных(ДвоичныеДанныеФайла)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	УдалитьФайлы(ИмяВременногоФайла);
	Возврат ТабличныйДокумент; 
КонецФункции	 

&НаКлиенте
Процедура ОбработкаВопросаОбОтменеИзменений(Результат, ДополнительныеПараметры = Неопределено) Экспорт 
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ДанныеРанееИзмененныхСценариев = ТестированиеКлиент.ДанныеРанееИзмененныхСценариев(Ветка, Проект);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДанныеРанееИзмененныхСценариев", ДанныеРанееИзмененныхСценариев);
		ОбновитьСписокФайловСервер(СтруктураПараметров);
		
		ДанныеДляПолученияФайлов = ДанныеРепозитория();
		ДанныеДляПолученияФайлов.Вставить("ДанныеСценария", ДанныеСценария());
		ТестированиеКлиент.ОбновитьДанныеОСпискеЛокальноИзмененныхФайловРепозитория(ДанныеДляПолученияФайлов);
		ОбновитьИндексыКартинокСервер();
		Оповестить("ИзменениеВременныхФайловСценариевРаботыПользователя");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяПроектаСтрокой(Проект)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "Наименование"); 
КонецФункции	 

&НаСервере
Процедура ОбновитьДатуИзмененияФайлов()
	
	СписокФайловСервер = РеквизитФормыВЗначение("СписокФайлов");
	
	Для Каждого ТекСтрока Из СписокФайловСервер Цикл
		ТекСтрока.ДатаИзменения = ТестированиеЗапускТестирования.ДатаПоследнегоИзмененияФайла(Проект,Ветка,ТекСтрока.ПутьВРепозитории);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(СписокФайловСервер,"СписокФайлов");
	
КонецПроцедуры

#КонецОбласти
