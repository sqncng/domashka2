#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем СоздатьГруппыРеквизитов;
Перем СоздаватьОбъектРасширенногоХранения;

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
		Если ЭтоНовый() Тогда
			
			Если НЕ ЗначениеЗаполнено(Владелец) Тогда
				Владелец = Проекты.ПроектПоУмолчанию();
			КонецЕсли;
			
			СогласованиеИзменений = Справочники.Проекты.ВариантСогласованиеИзмененийМетаданныхПоУмолчанию(Владелец);
			ПрисутствуетВОсновномХранилище = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПрисутствуетВОсновномХранилище = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если ЭтоГруппа Тогда
		НепроверяемыеРеквизиты.Добавить("Родитель");
	КонецЕсли;
	
	Если Не ЭтоГруппа И Не ЗначениеЗаполнено(Поставщик) Тогда
		НепроверяемыеРеквизиты.Добавить("ПравилоПоддержки");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	Если Не ЭтоГруппа И НЕ ПометкаУдаления Тогда
		ПроверитьНаличиеДублей(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Заголовок = "Справочник ""Объекты метаданных"":";

	Если Не ЭтоГруппа Тогда
		Наименование = Родитель.ВидОбъектаМетаданныхВЕдЧисле + "." + Имя;
		
		СтруктураОбязательныхПолей = Новый Структура;
		СтруктураОбязательныхПолей.Вставить("Имя");
		
		Универсальные.ПроверитьЗаполнениеРеквизитов(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
		
		Если Отказ Тогда
			ТекстСообщения = НСтр("ru='Объект метаданных '") + СтрЗаменить(ПолныйКод(), "/", ".") + " <" + Наименование + "> " + НСтр("ru='Не записан.'") + Символы.ПС;
			Сообщить(ТекстСообщения, СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СоздаватьОбъектРасширенногоХранения = Ложь;
	Если ДополнительныеСвойства.Свойство("СоздаватьОбъектРасширенногоХранения") Тогда
		СоздаватьОбъектРасширенногоХранения = ДополнительныеСвойства.СоздаватьОбъектРасширенногоХранения;	
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		
		Если НЕ РегистрПодчиненРегистратору Тогда
			ОписаниеДвиженийПоРегистру.Очистить();
		КонецЕсли;
			
	КонецЕсли;
	
	СоздатьГруппыРеквизитов = НЕ ЭтоГруппа И ЭтоНовый();
	
	Если НЕ ЭтоГруппа Тогда
		СкорректироватьДанныеНеСоответствующиеПроекту();
	КонецЕсли;
		
	// Для роли очистим использование прав доступа к объектам метаданных, при установке пометки удаления.
	Если НЕ ЭтоНовый() Тогда
		
		ПометкаУдаленияСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления");
		ИмяКласса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Родитель, "Наименование");
		
		Если ПометкаУдаления И НЕ ПометкаУдаленияСсылки И ИмяКласса = "Роли" Тогда
			НаборЗаписей = РегистрыСведений.ПраваДоступаКОбъектамМетаданных.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Роль.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.Используется = Ложь;
			КонецЦикла;
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИзмененоИмяОбъекта = Ложь;

	Если НЕ ЭтоНовый() И НЕ ЭтоГруппа И ДополнительныеСвойства.Свойство("ЗаписьВФорме") Тогда
		
		СтароеИмя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Имя");
		
		Если СтароеИмя <> Имя Тогда
			ИзмененоИмяОбъекта = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ИзмененоИмяОбъекта", ИзмененоИмяОбъекта);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);

	ИмяКласса = РаботаСОбъектамиМетаданных.ИмяКлассаОбъектаМетаданных(Ссылка);
	
	Если СоздатьГруппыРеквизитов Тогда
		
		Если ИмяКласса = "Константы" Тогда
			
		ИначеЕсли ИмяКласса = "Справочники" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли ИмяКласса = "Документы" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли ИмяКласса = "ЖурналыДокументов" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Графы", "Графы", Перечисления.ВидыРеквизитов.Графы);
			
		ИначеЕсли ИмяКласса = "Перечисления" Тогда
			
		ИначеЕсли ИмяКласса = "Отчеты" Тогда
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли ИмяКласса = "Обработки" Тогда
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "ПланыВидовХарактеристик" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "ПланыСчетов" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("ПризнакиУчета", "Признаки учета", Перечисления.ВидыРеквизитов.ПризнакиУчета);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "ПланыВидовРасчета" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "РегистрыСведений" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Измерения", "Измерения", Перечисления.ВидыРеквизитов.Измерения);
			СоздатьГруппуРеквизитов("Ресурсы", "Ресурсы", Перечисления.ВидыРеквизитов.Ресурсы);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "РегистрыНакопления" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Измерения", "Измерения", Перечисления.ВидыРеквизитов.Измерения);
			СоздатьГруппуРеквизитов("Ресурсы", "Ресурсы", Перечисления.ВидыРеквизитов.Ресурсы);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "РегистрыБухгалтерии" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Измерения", "Измерения", Перечисления.ВидыРеквизитов.Измерения);
			СоздатьГруппуРеквизитов("Ресурсы", "Ресурсы", Перечисления.ВидыРеквизитов.Ресурсы);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "РегистрыРасчета" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Измерения", "Измерения", Перечисления.ВидыРеквизитов.Измерения);
			СоздатьГруппуРеквизитов("Ресурсы", "Ресурсы", Перечисления.ВидыРеквизитов.Ресурсы);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "БизнесПроцессы" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "Задачи" Тогда
			СоздатьГруппуРеквизитов("СтандартныеРеквизиты", "Стандартные реквизиты", Перечисления.ВидыРеквизитов.СтандартныеРеквизиты);
			СоздатьГруппуРеквизитов("РеквизитыАдресации", "Реквизиты адресации", Перечисления.ВидыРеквизитов.РеквизитыАдресации);
			СоздатьГруппуРеквизитов("Реквизиты", "Реквизиты", Перечисления.ВидыРеквизитов.Реквизиты);
			
		ИначеЕсли  ИмяКласса = "Последовательности" Тогда
			СоздатьГруппуРеквизитов("Измерения", "Измерения", Перечисления.ВидыРеквизитов.Измерения);
			
		КонецЕсли;
	КонецЕсли;
	
	// Создание объекта расширенного хранения
	Если РаботаСОбъектамиМетаданных.ЭтоКлассОбъектаРасширенногоХранения(ИмяКласса)  Тогда
		
		Если СоздаватьОбъектРасширенногоХранения Тогда
			Если ОбщегоНазначенияСППР.СвойстваОбъектаРасширенногоХранения(Ссылка) = Неопределено Тогда
				
				ИмяСправочникаРасширенныхСвойств = ИмяКласса + "Свойства";
				ДопОбъектМетаданных = Справочники[ИмяСправочникаРасширенныхСвойств].СоздатьЭлемент();
				Универсальные.УстановитьНовоеЗначение(ДопОбъектМетаданных.Владелец, Ссылка);
				Универсальные.УстановитьНовоеЗначение(ДопОбъектМетаданных.Наименование, Имя);
				ДопОбъектМетаданных.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ИзмененоИмяОбъекта") Тогда
		ИзменитьИмяПодчиненных = ДополнительныеСвойства.ИзмененоИмяОбъекта;
	Иначе
		ИзменитьИмяПодчиненных = Ложь;
	КонецЕсли;
	
	Если ИзменитьИмяПодчиненных Тогда
		
		ПодчиненныеОбъекты = ПодчиненныеОбъекты();
		
		Для Каждого ПодчиненныйОбъектСсылка из ПодчиненныеОбъекты Цикл
			
			Попытка
				ПодчиненныйОбъект = ПодчиненныйОбъектСсылка.ПолучитьОбъект();
				ПодчиненныйОбъект.Заблокировать();
				ПодчиненныйОбъект.Записать();
				ПодчиненныйОбъект.Разблокировать();
			Исключение
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодчиненныеОбъекты()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КомандыОбъектовМетаданных.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КомандыОбъектовМетаданных КАК КомандыОбъектовМетаданных
	|ГДЕ
	|	КомандыОбъектовМетаданных.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МакетыОбъектовМетаданных.Ссылка
	|ИЗ
	|	Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|ГДЕ
	|	МакетыОбъектовМетаданных.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФормыОбъектовМетаданных.Ссылка
	|ИЗ
	|	Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|ГДЕ
	|	ФормыОбъектовМетаданных.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредопределенныеДанные.Ссылка
	|ИЗ
	|	Справочник.ПредопределенныеДанные КАК ПредопределенныеДанные
	|ГДЕ
	|	ПредопределенныеДанные.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеквизитыОбъектовМетаданных.Ссылка
	|ИЗ
	|	Справочник.РеквизитыОбъектовМетаданных КАК РеквизитыОбъектовМетаданных
	|ГДЕ
	|	РеквизитыОбъектовМетаданных.Владелец = &Владелец"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Владелец", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Создание новой группы
Процедура СоздатьГруппуРеквизитов(ТекИмя, ТекСиноним, ВидРеквизита)

	НоваяГруппа = Справочники.РеквизитыОбъектовМетаданных.СоздатьГруппу();

	НоваяГруппа.ВидРеквизита = ВидРеквизита;
	НоваяГруппа.Владелец     = Ссылка;
	НоваяГруппа.Имя          = ТекИмя;
	НоваяГруппа.Синоним      = ТекСиноним;

	НоваяГруппа.Записать();

КонецПроцедуры

Процедура ПроверитьНаличиеДублей(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса=
	"ВЫБРАТЬ
	|	ОбъектыМетаданных.Ссылка КАК ОбъектыМетаданных
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	(ОбъектыМетаданных.Владелец = &Проект
	|	И ОбъектыМетаданных.Родитель = &Родитель
	|	И ОбъектыМетаданных.Имя = &Имя
	|	И ОбъектыМетаданных.Ссылка <> &Ссылка)
	|   И НЕ ОбъектыМетаданных.ПометкаУдаления"
	;
			
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.УстановитьПараметр("Проект", Владелец);
	Запрос.УстановитьПараметр("Имя", Имя);
	
	Запрос.Текст = ТекстЗапроса;
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		ТекстСообщения = НСтр("ru='В информационной базе уже существует объект метаданных с именем %Имя%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Имя%", Имя);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект, "Имя");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СкорректироватьДанныеНеСоответствующиеПроекту()
	
	Если ЗначениеЗаполнено(РазделПроекта) Тогда
		
		ПроектРаздела = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РазделПроекта, "Владелец");
		
		Если ПроектРаздела <> Владелец Тогда
			РазделПроекта = Справочники.РазделыПроекта.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

ДополнительныеСвойства.Вставить("СоздаватьОбъектРасширенногоХранения", Истина);

#КонецОбласти

#КонецЕсли