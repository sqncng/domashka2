
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтбиратьИсходящиеМетаданныеФункции  = Параметры.ОтбиратьИсходящиеМетаданныеФункции;
	ОтбиратьМетаданныеУчетныхМеханизмов = Параметры.ОтбиратьМетаданныеУчетныхМеханизмов;
	ОтбиратьОтчетыИСервисныеОбъекты     = Параметры.ОтбиратьОтчетыИСервисныеОбъекты;
	
	УстановитьВидимостьОтборовПоВидамОбъектов();
	
	Справочники.ОбъектыМетаданных.УстановитьТекстИндексаКартикиВТекстеЗапроса(Элементы.Список);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если Параметры.Свойство("РеквизитДляОтбораПоТипу") Тогда
		
		РеквизитДляОтбораПоТипу = Параметры.РеквизитДляОтбораПоТипу;
		
		Если ЗначениеЗаполнено(РеквизитДляОтбораПоТипу) Тогда
			СписокТипов = СписокТиповРеквизита(РеквизитДляОтбораПоТипу);
		Иначе
			СписокТипов = Новый СписокЗначений;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", СписокТипов, ВидСравненияКомпоновкиДанных.ВСписке, Истина);
		
	КонецЕсли;
	
	УстановленОтборПоВладельцу = Ложь;
	
	Если Параметры.Свойство("Отбор") Тогда
		
		ЗначениеВладельца = Неопределено;
		Параметры.Отбор.Свойство("Владелец", ЗначениеВладельца);
		
		Если ЗначениеВладельца <> Неопределено Тогда
			УстановленОтборПоВладельцу = Истина;
			Проект = ЗначениеВладельца;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ УстановленОтборПоВладельцу Тогда
		Проект = ПараметрыСеанса.ТекущийПроект;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Проект, ВидСравненияКомпоновкиДанных.Равно,,ЗначениеЗаполнено(Проект));
	КонецЕсли;
	
	УстановитьОтборыПоВидамОбъектов();
	
	УстановитьУсловноеОформлениеСписка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтбиратьИсходящиеМетаданныеФункцииПриИзменении(Элемент)
	
	УстановитьОтборыПоВидамОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтбиратьМетаданныеУчетныхМеханизмовПриИзменении(Элемент)
	
	УстановитьОтборыПоВидамОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтбиратьОтчетыИСервисныеОбъектыПриИзменении(Элемент)
	
	УстановитьОтборыПоВидамОбъектов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СписокТиповРеквизита(РеквизитОбъектаМетаданных)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РеквизитыОбъектовМетаданныхТипыЗначенияРеквизита.ТипЗначенияРеквизита КАК ОбъектМетаданных
	|ИЗ
	|	Справочник.РеквизитыОбъектовМетаданных.ТипыЗначенияРеквизита КАК РеквизитыОбъектовМетаданныхТипыЗначенияРеквизита
	|ГДЕ
	|	РеквизитыОбъектовМетаданныхТипыЗначенияРеквизита.Ссылка = &Ссылка"
	;
	
	СписокТипов = Новый СписокЗначений;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", РеквизитОбъектаМетаданных);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокТипов.Добавить(Выборка.ОбъектМетаданных);
	КонецЦикла;
	
	Возврат СписокТипов;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьОтборовПоВидамОбъектов()
	
	Элементы.ОтбиратьИсходящиеМетаданныеФункции.Видимость  = ОтбиратьИсходящиеМетаданныеФункции;
	Элементы.ОтбиратьМетаданныеУчетныхМеханизмов.Видимость = ОтбиратьМетаданныеУчетныхМеханизмов;
	Элементы.ОтбиратьОтчетыИСервисныеОбъекты.Видимость     = ОтбиратьОтчетыИСервисныеОбъекты;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыПоВидамОбъектов()
	
	ИспользоватьОтбор = ОтбиратьИсходящиеМетаданныеФункции
	                    ИЛИ ОтбиратьМетаданныеУчетныхМеханизмов
	                    ИЛИ ОтбиратьОтчетыИСервисныеОбъекты;
						
	Если ИспользоватьОтбор Тогда
		СписокРодителей = СписокРодителейДляОтбораПоВидамОбъектов();
	Иначе
		СписокРодителей = Новый СписокЗначений;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
	                                                                        "Родитель",
	                                                                        СписокРодителей,
																			ВидСравненияКомпоновкиДанных.ВСписке,
																			,
																			ИспользоватьОтбор);
	
КонецПроцедуры

&НаСервере
Функция СписокРодителейДляОтбораПоВидамОбъектов()
	
	ВидыОбъектов = Новый Массив;
	
	Если ОтбиратьИсходящиеМетаданныеФункции Тогда
		ВидыОбъектов.Добавить("ПланыОбмена");
		ВидыОбъектов.Добавить("Справочники");
		ВидыОбъектов.Добавить("Документы");
		ВидыОбъектов.Добавить("ПланыВидовХарактеристик");
		ВидыОбъектов.Добавить("ПланыСчетов");
		ВидыОбъектов.Добавить("ПланыВидовРасчета");
		ВидыОбъектов.Добавить("БизнесПроцессы");
		ВидыОбъектов.Добавить("Задачи");
	КонецЕсли;
	
	Если ОтбиратьМетаданныеУчетныхМеханизмов Тогда
		ВидыОбъектов.Добавить("РегистрыБухгалтерии");
		ВидыОбъектов.Добавить("РегистрыНакопления");
		ВидыОбъектов.Добавить("РегистрыРасчета");
		ВидыОбъектов.Добавить("РегистрыСведений");
	КонецЕсли;
	
	Если ОтбиратьОтчетыИСервисныеОбъекты Тогда
		ВидыОбъектов.Добавить("Отчеты");
		ВидыОбъектов.Добавить("Обработки");
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Владелец = &Проект
	|	И ОбъектыМетаданных.ЭтоГруппа
	|	И ОбъектыМетаданных.Имя В(&МассивКлассов)"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("МассивКлассов", ВидыОбъектов);
	
	СписокРодителей = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокРодителей.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокРодителей;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	УсловноеОформлениеСписка = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеСписка.Элементы.Очистить();
	
	ОбщегоНазначенияСППР.УстановитьУсловноеОформлениеСпискаОтветственный(УсловноеОформлениеСписка);
	
КонецПроцедуры

#КонецОбласти