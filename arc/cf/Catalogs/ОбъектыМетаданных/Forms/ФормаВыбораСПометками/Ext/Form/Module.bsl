#Область ОписаниеПеременных

&НаКлиенте
Перем ПометкаТекущейСтроки;

&НаКлиенте
Перем ПометкаФормыТекущейСтроки;

&НаКлиенте
Перем ПометкаМакетыТекущейСтроки;

&НаКлиенте
Перем ЭтоПодтвержденноеЗакрытие;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Проект) Тогда
		Проект = Параметры.Проект;		
	Иначе
		Проект = ПараметрыСеанса.ТекущийПроект;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ТекстИсключения = НСтр("ru = 'Не предусмотрено открытие формы без отбора по проекту.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ВыделенныеОбъектыТаблица = Новый ТаблицаЗначений;
	ВыделенныеОбъектыТаблица.Колонки.Добавить("ПолноеИмя", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000, ДопустимаяДлина.Переменная)));
	
	Если ТипЗнч(Параметры.ВыделенныеОбъекты) = Тип("ФиксированныйМассив") Тогда
		Для Каждого СтрМас из Параметры.ВыделенныеОбъекты Цикл
			ПолноеИмя = СтрМас;
			ПолноеИмя = СтрЗаменить(ПолноеИмя, ".Форма.",".");
			ПолноеИмя = СтрЗаменить(ПолноеИмя, ".Макет.",".");
			
			НоваяСтрока = ВыделенныеОбъектыТаблица.Добавить();
			НоваяСтрока.ПолноеИмя = ПолноеИмя;
		КонецЦикла;
	КонецЕсли;
			
	ТаблицаТипОбъектаИндексКартинки = РаботаСОбъектамиМетаданных.ТаблицаТипОбъектаИндексКартинки();
	КартинкаФормы = ТаблицаТипОбъектаИндексКартинки.Найти("ОбщиеФормы", "ТипОбъекта").ИндексКартинки;
	КартинкаМакета = ТаблицаТипОбъектаИндексКартинки.Найти("ОбщиеМакеты", "ТипОбъекта").ИндексКартинки;
	
	Элементы.ФормыИМакеты.ОтборСтрок = 
		Новый ФиксированнаяСтруктура("ОбъектМетаданных", Справочники.ОбъектыМетаданных.ПустаяСсылка());
	
	ЗаполнитьДерево(ВыделенныеОбъектыТаблица, ТаблицаТипОбъектаИндексКартинки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтоПодтвержденноеЗакрытие = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоПодтвержденноеЗакрытие Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Изменения, сделанные в форме не пересены в список объектов. Закрыть форму?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьБезПереноса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьБезПереноса(Результат, ДополнительныеПараметры = Неопределено) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтоПодтвержденноеЗакрытие = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ПометкаТекущейСтроки       = ТекущиеДанные.Пометка;
		ПометкаФормыТекущейСтроки  = ТекущиеДанные.ПометкаФормы;
		ПометкаМакетыТекущейСтроки = ТекущиеДанные.ПометкаМакеты;
	КонецЕсли;
		
	ПодключитьОбработчикОжидания("ОтобразитьТекущиеФормыИМакеты", 0.3, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПометкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ПометкаТекущейСтроки = 0 Тогда
		ТекущиеДанные.Пометка = 1;
	ИначеЕсли ПометкаТекущейСтроки = 1 Тогда
		ТекущиеДанные.Пометка = 0;
	ИначеЕсли ПометкаТекущейСтроки = 2 Тогда 
		ТекущиеДанные.Пометка = 1;
	КонецЕсли;
	
	ПометкаТекущейСтроки = ТекущиеДанные.Пометка;
	
	ОбработатьУстановкуПометки(ТекущиеДанные.ПолучитьИдентификатор(), ПометкаТекущейСтроки, "Пометка")
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПометкаФормыПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ПометкаФормыТекущейСтроки = 0 Тогда
		ТекущиеДанные.ПометкаФормы = 1;
	ИначеЕсли ПометкаФормыТекущейСтроки = 1 Тогда
		ТекущиеДанные.ПометкаФормы = 0;
	ИначеЕсли ПометкаФормыТекущейСтроки = 2 Тогда 
		ТекущиеДанные.ПометкаФормы = 1;
	ИначеЕсли ПометкаФормыТекущейСтроки = 4 Тогда 
		Возврат;	
	КонецЕсли;
	
	ПометкаФормыТекущейСтроки = ТекущиеДанные.ПометкаФормы;
	
	ОбработатьУстановкуПометки(ТекущиеДанные.ПолучитьИдентификатор(), ПометкаФормыТекущейСтроки, "ПометкаФормы")
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПометкаМакетыПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ПометкаМакетыТекущейСтроки = 0 Тогда
		ТекущиеДанные.ПометкаМакеты = 1;
	ИначеЕсли ПометкаМакетыТекущейСтроки = 1 Тогда
		ТекущиеДанные.ПометкаМакеты = 0;
	ИначеЕсли ПометкаМакетыТекущейСтроки = 2 Тогда 
		ТекущиеДанные.ПометкаМакеты = 1;
	ИначеЕсли ПометкаМакетыТекущейСтроки = 4 Тогда 
		Возврат;	
	КонецЕсли;
	
	ПометкаМакетыТекущейСтроки = ТекущиеДанные.ПометкаМакеты;
	
	ОбработатьУстановкуПометки(ТекущиеДанные.ПолучитьИдентификатор(), ПометкаМакетыТекущейСтроки, "ПометкаМакеты")
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыФормыИМакеты

&НаКлиенте
Процедура ФормыИМакетыПометкаПриИзменении(Элемент)
	ТекущиеДанныеДерево  = Элементы.Дерево.ТекущиеДанные;
	ТекущиеДанныеТаблица = Элементы.ФормыИМакеты.ТекущиеДанные;	
	
	ОтработатьУстановкуПометкуПодчиненногоСписка(ТекущиеДанныеДерево.ПолучитьИдентификатор(), ТекущиеДанныеТаблица.ПолучитьИдентификатор());	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтметитьПоПодсистеме(Команда)
	ОписанияОповещения = Новый ОписаниеОповещения("ОтметитьПоПодсистемеЗавершение", ЭтотОбъект);
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("Проект", Проект);
	
	ОткрытьФорму("Справочник.ОбъектыМетаданных.Форма.ФормаВыбораПодсистемы",
		ПараметрыФормыВыбора,
		ЭтотОбъект,
		,
		,
		,
		ОписанияОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВыбранныеОбъекты(Команда)

	ВыбранныеОбъекты =  ТекущиеВыделенныеОбъектыМассивом();
	
	Если ВыбранныеОбъекты.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите объекты, которые нужно перенести.'");
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
		Возврат;
		
	КонецЕсли;
	
	ЭтоПодтвержденноеЗакрытие = Истина;
	Закрыть(ВыбранныеОбъекты);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	СнятьОтметкиСервер()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтработатьУстановкуПометкуПодчиненногоСписка(ТекущиеДанныеДеревоИдентификтор, ТекущиеДанныеТаблицаИдентификатор)
	ТекущийРодитель  = ДеревоМетаданных.НайтиПоИдентификатору(ТекущиеДанныеДеревоИдентификтор);
	ТекущиеДанныеТаблица = ФормыИМакеты.НайтиПоИдентификатору(ТекущиеДанныеТаблицаИдентификатор);	
	
	Если ТекущиеДанныеТаблица.ИндексКартинки = КартинкаМакета Тогда
		ИмяПоля = "ПометкаМакеты";
	Иначе
		ИмяПоля = "ПометкаФормы";
	КонецЕсли;
	
	ТекущаяПометкаРодителя = ТекущийРодитель[ИмяПоля];
	ТекущаяПометка = ?(ТекущиеДанныеТаблица.Пометка, 1, 0);
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("ОбъектМетаданных", ТекущиеДанныеТаблица.ОбъектМетаданных);
	ОтборСтрок.Вставить("ИндексКартинки", ТекущиеДанныеТаблица.ИндексКартинки);
	
	ЭлементыРодителя = ФормыИМакеты.НайтиСтроки(ОтборСтрок);

	Если ТекущаяПометка = 0 Тогда 
		ВсеЛожь   = Истина;
		ВсеИстина = Ложь;
	ИначеЕсли ТекущаяПометка = 1 Тогда
		ВсеЛожь   = Ложь;
		ВсеИстина = Истина;
	КонецЕсли;
	
	Для Каждого СтрДерева из ЭлементыРодителя Цикл 
		
		Если СтрДерева.Пометка Тогда
			ВсеЛожь = Ложь;
		Иначе
			ВсеИстина = Ложь;
		КонецЕсли;
		
		Если ВсеЛожь = ВсеИстина Тогда
			ТекущийРодитель[ИмяПоля] = 2;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВсеЛожь <> ВсеИстина Тогда
		Если ВсеЛожь Тогда
			ТекущийРодитель[ИмяПоля] = 0;
		ИначеЕсли ВсеИстина Тогда
			ТекущийРодитель[ИмяПоля] = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущаяПометкаРодителя <> ТекущийРодитель[ИмяПоля] Тогда
		
		НазначитьПометкуРодителям(ТекущийРодитель, ТекущийРодитель[ИмяПоля], ИмяПоля);
			
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ВыделенныеОбъекты, ТаблицаТипОбъектаИндексКартинки = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТипОбъектаИндексКартинки.ИндексКартинки КАК ИндексКартинки,
	|	ТаблицаТипОбъектаИндексКартинки.ТипОбъекта КАК ТипОбъекта
	|ПОМЕСТИТЬ ТаблицаТипОбъектаИндексКартинки
	|ИЗ
	|	&ТаблицаТипОбъектаИндексКартинки КАК ТаблицаТипОбъектаИндексКартинки
	|ГДЕ
	|	НЕ ТаблицаТипОбъектаИндексКартинки.ЭтоГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТипОбъектаИндексКартинки.ТипОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыделенныеОбъекты.ПолноеИмя КАК ПолноеИмя
	|ПОМЕСТИТЬ ВыделенныеОбъекты
	|ИЗ
	|	&ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПолноеИмя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НЕ ВыделенныеОбъекты.ПолноеИмя ЕСТЬ NULL КАК Пометка,
	|	ФормыОбъектовМетаданных.Владелец КАК ОбъектМетаданных,
	|	ФормыОбъектовМетаданных.Наименование КАК ПолноеИмя,
	|	ФормыОбъектовМетаданных.Имя КАК Имя,
	|	&КартинкаФормы КАК ИндексКартинки,
	|	1 КАК Порядок
	|ПОМЕСТИТЬ ФормыИМакеты
	|ИЗ
	|	Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|		ПО ФормыОбъектовМетаданных.Наименование = ВыделенныеОбъекты.ПолноеИмя
	|ГДЕ
	|	ФормыОбъектовМетаданных.Владелец.Владелец = &Проект
	|	И НЕ ФормыОбъектовМетаданных.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕ ВыделенныеОбъекты.ПолноеИмя ЕСТЬ NULL,
	|	МакетыОбъектовМетаданных.Владелец,
	|	МакетыОбъектовМетаданных.Наименование,
	|	МакетыОбъектовМетаданных.Имя,
	|	&КартинкаМакета,
	|	2
	|ИЗ
	|	Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|		ПО МакетыОбъектовМетаданных.Наименование = ВыделенныеОбъекты.ПолноеИмя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ОбъектМетаданных КАК ОбъектМетаданных,
	|	МИНИМУМ(ВложенныйЗапрос.ПометкаФормыВсеИстина) КАК ПометкаФормыВсеИстина,
	|	НЕ МАКСИМУМ(ВложенныйЗапрос.ПометкаФормыВсеЛожь) КАК ПометкаФормыВсеЛожь,
	|	МИНИМУМ(ВложенныйЗапрос.ПометкаМакетыВсеИстина) КАК ПометкаМакетыВсеИстина,
	|	НЕ МАКСИМУМ(ВложенныйЗапрос.ПометкаМакетыВсеЛожь) КАК ПометкаМакетыВсеЛожь,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьФормы) КАК ЕстьФормы,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьМакеты) КАК ЕстьМакеты
	|ПОМЕСТИТЬ ФормыИМакетыСгруппированные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФормыИМакеты.ОбъектМетаданных КАК ОбъектМетаданных,
	|		МИНИМУМ(ФормыИМакеты.Пометка) КАК ПометкаФормыВсеИстина,
	|		МАКСИМУМ(ФормыИМакеты.Пометка) КАК ПометкаФормыВсеЛожь,
	|		ИСТИНА КАК ПометкаМакетыВсеИстина,
	|		ЛОЖЬ КАК ПометкаМакетыВсеЛожь,
	|		ИСТИНА КАК ЕстьФормы,
	|		ЛОЖЬ КАК ЕстьМакеты
	|	ИЗ
	|		ФормыИМакеты КАК ФормыИМакеты
	|	ГДЕ
	|		ФормыИМакеты.ИндексКартинки = &КартинкаФормы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФормыИМакеты.ОбъектМетаданных
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФормыИМакеты.ОбъектМетаданных,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		МИНИМУМ(ФормыИМакеты.Пометка),
	|		МАКСИМУМ(ФормыИМакеты.Пометка),
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		ФормыИМакеты КАК ФормыИМакеты
	|	ГДЕ
	|		ФормыИМакеты.ИндексКартинки = &КартинкаМакета
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФормыИМакеты.ОбъектМетаданных) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ОбъектМетаданных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектМетаданных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА НЕ ВыделенныеОбъекты.ПолноеИмя ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Пометка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ФормыИМакетыСгруппированные.ЕстьФормы, ЛОЖЬ)
	|			ТОГДА ВЫБОР
	|					КОГДА ФормыИМакетыСгруппированные.ПометкаФормыВсеИстина
	|						ТОГДА 1
	|					КОГДА ФормыИМакетыСгруппированные.ПометкаФормыВсеЛожь
	|						ТОГДА 0
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК ПометкаФормы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ФормыИМакетыСгруппированные.ЕстьМакеты, ЛОЖЬ)
	|			ТОГДА ВЫБОР
	|					КОГДА ФормыИМакетыСгруппированные.ПометкаМакетыВсеИстина
	|						ТОГДА 1
	|					КОГДА ФормыИМакетыСгруппированные.ПометкаМакетыВсеЛожь
	|						ТОГДА 0
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК ПометкаМакеты,
	|	СправочникОбъектыМетаданных.Ссылка КАК Ссылка,
	|	СправочникОбъектыМетаданных.Имя КАК Имя,
	|	СправочникОбъектыМетаданных.Ответственный КАК Ответственный,
	|	СправочникОбъектыМетаданных.РазделПроекта КАК РазделПроекта,
	|	ЕСТЬNULL(ТаблицаТипОбъектаИндексКартинки.ИндексКартинки, 91) КАК ИндексКартинки,
	|	СправочникОбъектыМетаданных.Наименование КАК ПолноеИмя,
	|	ИСТИНА КАК ЭтоКонечныйЭлемент
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК СправочникОбъектыМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТипОбъектаИндексКартинки КАК ТаблицаТипОбъектаИндексКартинки
	|		ПО СправочникОбъектыМетаданных.Родитель.Имя = ТаблицаТипОбъектаИндексКартинки.ТипОбъекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|		ПО СправочникОбъектыМетаданных.Наименование = ВыделенныеОбъекты.ПолноеИмя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФормыИМакетыСгруппированные КАК ФормыИМакетыСгруппированные
	|		ПО СправочникОбъектыМетаданных.Ссылка = ФормыИМакетыСгруппированные.ОбъектМетаданных
	|ГДЕ
	|	СправочникОбъектыМетаданных.Владелец = &Проект
	|	И НЕ СправочникОбъектыМетаданных.ПометкаУдаления
	|	И НЕ СправочникОбъектыМетаданных.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникОбъектыМетаданных.Код
	|ИТОГИ
	|	МИНИМУМ(Пометка),
	|	МИНИМУМ(ПометкаФормы),
	|	МИНИМУМ(ПометкаМакеты),
	|	МАКСИМУМ(ИндексКартинки)
	|ПО
	|	Ссылка ТОЛЬКО ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФормыИМакеты.Пометка КАК Пометка,
	|	ФормыИМакеты.ОбъектМетаданных КАК ОбъектМетаданных,
	|	ФормыИМакеты.ПолноеИмя КАК ПолноеИмя,
	|	ФормыИМакеты.Имя КАК Имя,
	|	ФормыИМакеты.ИндексКартинки КАК ИндексКартинки
	|ИЗ
	|	ФормыИМакеты КАК ФормыИМакеты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФормыИМакеты.Порядок,
	|	Имя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыделенныеОбъекты.ПолноеИмя КАК ПолноеИмя
	|ИЗ
	|	ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыМетаданных КАК СправочникОбъектыМетаданных
	|		ПО ВыделенныеОбъекты.ПолноеИмя = СправочникОбъектыМетаданных.Наименование
	|			И (СправочникОбъектыМетаданных.Владелец = &Проект)
	|			И (НЕ СправочникОбъектыМетаданных.ПометкаУдаления)
	|			И (НЕ СправочникОбъектыМетаданных.ЭтоГруппа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФормыИМакеты КАК ФормыИМакеты
	|		ПО ВыделенныеОбъекты.ПолноеИмя = ФормыИМакеты.ПолноеИмя
	|ГДЕ
	|	СправочникОбъектыМетаданных.Ссылка ЕСТЬ NULL
	|	И ФормыИМакеты.ПолноеИмя ЕСТЬ NULL";

	Если ТаблицаТипОбъектаИндексКартинки = Неопределено Тогда
		ТаблицаТипОбъектаИндексКартинки = РаботаСОбъектамиМетаданных.ТаблицаТипОбъектаИндексКартинки();
	КонецЕсли;

	КартинкаФормы = ТаблицаТипОбъектаИндексКартинки.Найти("ОбщиеФормы", "ТипОбъекта").ИндексКартинки;
	КартинкаМакета = ТаблицаТипОбъектаИндексКартинки.Найти("ОбщиеМакеты", "ТипОбъекта").ИндексКартинки;
	
	Запрос.УстановитьПараметр("КартинкаФормы", КартинкаФормы);
	Запрос.УстановитьПараметр("КартинкаМакета", КартинкаМакета);
	
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ТаблицаТипОбъектаИндексКартинки", ТаблицаТипОбъектаИндексКартинки);
	Запрос.УстановитьПараметр("ВыделенныеОбъекты", ВыделенныеОбъекты);

	РезультатЗапроса = Запрос.ВыполнитьПакет(); 
	
	ЗначениеВРеквизитФормы(РезультатЗапроса[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией),"ДеревоМетаданных");
	
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();
	
	УстановитьОтметкуВРодителях(ЭлементыДерева);
	
	ФормыИМакеты.Загрузить(РезультатЗапроса[5].Выгрузить());
	
	ВыборкаОшибок = РезультатЗапроса[6].Выбрать();
	
	ШаблонОшибки = НСтр("ru = 'Объект %ПолноеИмя% не найден в загруженных в СППР метаданных'");
	
	Пока ВыборкаОшибок.Следующий() Цикл
		
		ТекстОшибки = СтрЗаменить(ШаблонОшибки, "%ПолноеИмя%", ВыборкаОшибок.ПолноеИмя);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметкуВРодителях(ТекущиеЭлементы)
	
	Для каждого СтрДерева из ТекущиеЭлементы Цикл
		
		ЭлементыДерева = СтрДерева.ПолучитьЭлементы();
		
		Если ЭлементыДерева.Количество() > 0 
			И (СтрДерева.Пометка = 0
			Или СтрДерева.ПометкаФормы = 0
			Или СтрДерева.ПометкаМакеты = 0) Тогда
			УстановитьОтметкуВРодителях(ЭлементыДерева);
		Иначе
			Родитель = СтрДерева.ПолучитьРодителя();
			
			Если Родитель = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрДерева.Пометка <> Родитель.Пометка
				И Родитель.Пометка <> 2 Тогда
				НазначитьПометкуРодителям(СтрДерева, СтрДерева.Пометка, "Пометка");
			КонецЕсли;
			
			Если СтрДерева.ПометкаФормы <> Родитель.ПометкаФормы
				И Родитель.ПометкаФормы <> 2
				И СтрДерева.ПометкаФормы <> 4 Тогда
				НазначитьПометкуРодителям(СтрДерева, СтрДерева.ПометкаФормы, "ПометкаФормы");
			КонецЕсли;
			
			Если СтрДерева.ПометкаМакеты <> Родитель.ПометкаМакеты
				И Родитель.ПометкаМакеты <> 2
				И СтрДерева.ПометкаМакеты <> 4 Тогда
				НазначитьПометкуРодителям(СтрДерева, СтрДерева.ПометкаМакеты, "ПометкаМакеты");
			КонецЕсли;
			
		КонецЕсли;
			
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьТекущиеФормыИМакеты()
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ФормыИМакеты.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбъектМетаданных", ТекущиеДанные.Ссылка); 
	
КонецПроцедуры

&НаСервере
Функция ТекущиеВыделенныеОбъекты()
	
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();
	ВыделенныеОбъекты = Новый ТаблицаЗначений;
	ВыделенныеОбъекты.Колонки.Добавить("ПолноеИмя", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000, ДопустимаяДлина.Переменная)));
	ВыделенныеОбъекты.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3,0,ДопустимыйЗнак.Неотрицательный)));
	
	ОбойтиДеревоСчитатьВыделенныеОбъекты(ЭлементыДерева, ВыделенныеОбъекты);
	
	Для Каждого СтрТабл из ФормыИМакеты Цикл
		Если СтрТабл.Пометка Тогда
			НоваяСтрока = ВыделенныеОбъекты.Добавить();
			НоваяСтрока.ПолноеИмя = СтрТабл.ПолноеИмя;
			НоваяСтрока.ИндексКартинки = СтрТабл.ИндексКартинки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыделенныеОбъекты;
КонецФункции

&НаСервере
Функция ТекущиеВыделенныеОбъектыМассивом()
	
	Массив = Новый Массив;
	
	Таблица =  ТекущиеВыделенныеОбъекты();
	
	Для Каждого СтрТабл из Таблица Цикл
		
		ЧастиИмени = СтрРазделить(СтрТабл.ПолноеИмя, ".");
		
		Если ЧастиИмени.Количество() = 2 Тогда
			Массив.Добавить(СтрТабл.ПолноеИмя);
		Иначе
			
			Если СтрТабл.ИндексКартинки = КартинкаМакета Тогда
				КлассОбъекта = "Макет";
			Иначе
				КлассОбъекта = "Форма";
			КонецЕсли;
			
			Массив.Добавить(ЧастиИмени[0]
							+ "." + ЧастиИмени[1]
							+ "." + КлассОбъекта
							+ "." + ЧастиИмени[2]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(Массив);
КонецФункции

&НаСервере
Процедура ОбойтиДеревоСчитатьВыделенныеОбъекты(ЭлементыДерева, ВыделенныеОбъекты)
	
	Для Каждого ЭлементДерева из ЭлементыДерева Цикл
		Если ЭлементДерева.Пометка = 1
			И ЗначениеЗаполнено(ЭлементДерева.ПолноеИмя)
			И ЭлементДерева.ЭтоКонечныйЭлемент Тогда
			НоваяСтрока = ВыделенныеОбъекты.Добавить();
			НоваяСтрока.ПолноеИмя = ЭлементДерева.ПолноеИмя;
			НоваяСтрока.ИндексКартинки = ЭлементДерева.ИндексКартинки;
		КонецЕсли;
		
		ЭлементыСледующегоУровня = ЭлементДерева.ПолучитьЭлементы();
		
		Если ЭлементыСледующегоУровня.Количество() > 0 Тогда
			ОбойтиДеревоСчитатьВыделенныеОбъекты(ЭлементыСледующегоУровня, ВыделенныеОбъекты);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУстановкуПометки(ИдентификаторТекущейСтроки, ТекущаяПометка, ИмяПоля)
	ТекущиеДанные = ДеревоМетаданных.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	ЭлементыДерева = ТекущиеДанные.ПолучитьЭлементы();
	
	НазначитьПометкуПотомкам(ТекущиеДанные, ТекущаяПометка, ИмяПоля);
	
	НазначитьПометкуРодителям(ТекущиеДанные, ТекущаяПометка, ИмяПоля);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуВПочиненномСписке(ОбъектМетаданных, ТекущаяПометка, ИмяПоля)
	
	Если ИмяПоля = "ПометкаФормы" Тогда
		ОтборИндексКартинки = КартинкаФормы;
	Иначе
		ОтборИндексКартинки = КартинкаМакета;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("ОбъектМетаданных", ОбъектМетаданных);
	ОтборСтрок.Вставить("ИндексКартинки", ОтборИндексКартинки);
	
	НайденныеСтроки = ФормыИМакеты.НайтиСтроки(ОтборСтрок);
	
	Для Каждого СтрМас из НайденныеСтроки Цикл
		СтрМас.Пометка = (ТекущаяПометка = 1);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НазначитьПометкуПотомкам(ТекущиеДанные, ТекущаяПометка, ИмяПоля)

	ТекущиеЭлементы = ТекущиеДанные.ПолучитьЭлементы();
	
	Если ТекущиеЭлементы.Количество() = 0 Тогда
		Если ИмяПоля <> "Пометка" Тогда
			УстановитьПометкуВПочиненномСписке(ТекущиеДанные.Ссылка, ТекущаяПометка, ИмяПоля);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Для каждого СтрДерева из ТекущиеЭлементы Цикл
		
		Если СтрДерева[ИмяПоля] <> ТекущаяПометка
			И СтрДерева[ИмяПоля] <> 4 Тогда
			СтрДерева[ИмяПоля] = ТекущаяПометка;
			
			НазначитьПометкуПотомкам(СтрДерева, ТекущаяПометка, ИмяПоля);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НазначитьПометкуРодителям(ТекущиеДанные, ТекущаяПометка, ИмяПоля)
	
	ТекущийРодитель = ТекущиеДанные.ПолучитьРодителя();
	
	Если ТекущийРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяПометкаРодителя = ТекущийРодитель[ИмяПоля];
	
	Если ТекущаяПометка = 2 Тогда
		
		ТекущийРодитель[ИмяПоля] = 2;
				
	Иначе
		ЭлементыРодителя = ТекущийРодитель.ПолучитьЭлементы();

		Если ТекущаяПометка = 0 Тогда 
			ВсеЛожь   = Истина;
			ВсеИстина = Ложь;
		ИначеЕсли ТекущаяПометка = 1 Тогда
			ВсеЛожь   = Ложь;
			ВсеИстина = Истина;
		КонецЕсли;
		
		Для Каждого СтрДерева из ЭлементыРодителя Цикл 
			
			Если СтрДерева[ИмяПоля] = 1 Тогда
				ВсеЛожь = Ложь;
			ИначеЕсли СтрДерева[ИмяПоля] = 0 Тогда
				ВсеИстина = Ложь;
			ИначеЕсли СтрДерева[ИмяПоля] = 2 Тогда
				ВсеЛожь   = Ложь;
				ВсеИстина = Ложь;
			КонецЕсли;
			
			Если ВсеЛожь = ВсеИстина Тогда
				ТекущийРодитель[ИмяПоля] = 2;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВсеЛожь <> ВсеИстина Тогда
			Если ВсеЛожь Тогда
				ТекущийРодитель[ИмяПоля] = 0;
			ИначеЕсли ВсеИстина Тогда
				ТекущийРодитель[ИмяПоля] = 1;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ТекущаяПометкаРодителя <> ТекущийРодитель[ИмяПоля] Тогда
		
		НазначитьПометкуРодителям(ТекущийРодитель, ТекущийРодитель[ИмяПоля], ИмяПоля);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПоПодсистемеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтметитьПоПодсистемеНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьПоПодсистемеНаСервере(Результат)
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыделенныеОбъекты.ПолноеИмя КАК ПолноеИмя
	|ПОМЕСТИТЬ ВыделенныеОбъекты
	|ИЗ
	|	&ВыделенныеОбъекты КАК ВыделенныеОбъекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ПолноеИмя КАК ПолноеИмя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПодсистемыСостав.ОбъектМетаданных.Наименование КАК ПолноеИмя
	|	ИЗ
	|		Справочник.Подсистемы.Состав КАК ПодсистемыСостав
	|	ГДЕ
	|		&УсловиеОтбораПодсистемы
	|		И &ОтмечатьОбъекты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФормыОбъектовМетаданных.Наименование
	|	ИЗ
	|		Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
	|			ПО ФормыОбъектовМетаданных.Владелец = ПодсистемыСостав.ОбъектМетаданных
	|	ГДЕ
	|		&УсловиеОтбораПодсистемы
	|		И &ОтмечатьФормы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МакетыОбъектовМетаданных.Наименование
	|	ИЗ
	|		Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Подсистемы.Состав КАК ПодсистемыСостав
	|			ПО МакетыОбъектовМетаданных.Владелец = ПодсистемыСостав.ОбъектМетаданных
	|	ГДЕ
	|		&УсловиеОтбораПодсистемы
	|		И &ОтмечатьМакеты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыделенныеОбъекты.ПолноеИмя
	|	ИЗ
	|		ВыделенныеОбъекты КАК ВыделенныеОбъекты) КАК ВложенныйЗапрос";

	Запрос.УстановитьПараметр("Подсистема", Результат.Подсистема);
	
	Если Результат.ОтмечатьПоВыбраннойПодсистемеСУчетомПодчиненныхПодсистем Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПодсистемы", "ПодсистемыСостав.Ссылка В ИЕРАРХИИ (&Подсистема)");	
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПодсистемы", "ПодсистемыСостав.Ссылка = &Подсистема");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВыделенныеОбъекты", ТекущиеВыделенныеОбъекты());
	Запрос.УстановитьПараметр("ОтмечатьМакеты", Результат.ОтмечатьМакеты);
	Запрос.УстановитьПараметр("ОтмечатьОбъекты", Результат.ОтмечатьОбъекты);
	Запрос.УстановитьПараметр("ОтмечатьФормы", Результат.ОтмечатьФормы);
	
	Запрос.Текст = ТекстЗапроса;
	ЗаполнитьДерево(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура СнятьОтметкиСервер()
	
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();
	
	Для Каждого СтрДерева из ЭлементыДерева Цикл
		
		Если СтрДерева.Пометка <> 0 Тогда
			СтрДерева.Пометка = 0;
			НазначитьПометкуПотомкам(СтрДерева, 0, "Пометка");
		КонецЕсли;
		
		Если СтрДерева.ПометкаФормы <> 0
			И СтрДерева.ПометкаФормы <> 4 Тогда
			СтрДерева.ПометкаФормы = 0;
			НазначитьПометкуПотомкам(СтрДерева, 0, "ПометкаФормы");
		КонецЕсли;
		
		Если СтрДерева.ПометкаМакеты <> 0
			И СтрДерева.ПометкаМакеты <> 4 Тогда
			СтрДерева.ПометкаМакеты = 0;
			НазначитьПометкуПотомкам(СтрДерева, 0, "ПометкаМакеты");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти