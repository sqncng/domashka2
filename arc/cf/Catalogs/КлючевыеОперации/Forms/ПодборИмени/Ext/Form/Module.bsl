#Область ПеременныеФормы

&НаКлиенте
Перем ПоследнийВыборРазмещения;

&НаКлиенте
Перем ПоследнийВыборСвойства;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМетаданных = Параметры.ОбъектМетаданных;
	ОписаниеОбъектаМетаданных = КлючевыеОперации.ОписаниеОбъектаМетаданных(ОбъектМетаданных);
	ИмяОбъектаМетаданных = ОписаниеОбъектаМетаданных.Имя;
	ВидОбъектаМетаданных = ОписаниеОбъектаМетаданных.Вид;
	ВидОбъектаМетаданныхВРег = ВРег(ВидОбъектаМетаданных);
	Элементы.ГруппаСтраниц.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	МинимальноеИмяКлючевойОперации = МинимальноеИмяКлючевойОперации(ИмяОбъектаМетаданных,
		ВидОбъектаМетаданных);
	
	ЭтоWebСервис = ВидОбъектаМетаданныхВРег = ИмяМетаданныхWebСервис();
	ЭтоОбщаяКоманда = ВидОбъектаМетаданныхВРег = ИмяМетаданныхОбщаяКоманда();
	ЭтоОбщийМодуль = ВидОбъектаМетаданныхВРег = ИмяМетаданныхОбщийМодуль();
	ЭтоОбщаяФорма = ВидОбъектаМетаданныхВРег = ИмяМетаданныхОбщаяФорма();
	
	Если ЭтоОбщийМодуль Или ЭтоОбщаяКоманда Или ЭтоОбщаяФорма Тогда
		Режим = РежимПростой();
		Элементы.ГруппаСтраниц.Видимость = Ложь;
		Элементы.Уточнение.АвтоОтметкаНезаполненного = ЭтоОбщийМодуль Или ЭтоОбщаяФорма;
		Элементы.Уточнение.Доступность = Истина;
	ИначеЕсли ЭтоWebСервис Тогда
		Режим = РежимСвойства();
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаСвойства;
		ЗагрузитьСвойства();
	Иначе
		Режим = РежимРазмещение();
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаРазмещение;
		ЗагрузитьРазмещениеОпераций(ОписаниеОбъектаМетаданных);
	КонецЕсли;
	
	ПараметрИмя = Параметры.Имя;
	
	Если Лев(ПараметрИмя, 1) = "%" Тогда
		ПараметрИмя = Сред(ПараметрИмя, 2);
	КонецЕсли;
	
	СтруктураИмени = СтруктураИмени(ПараметрИмя, Режим);
	НастроитьПоСтруктуреИмени(СтруктураИмени, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Режим = РежимРазмещение() Тогда
		ТекущиеДанные = Элементы.Размещение.ТекущиеДанные;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущиеДанные.Выбран = 1;
			РазмещениеВыбранПриИзменении(Элементы.РазмещениеВыбран);
		КонецЕсли;
	ИначеЕсли Режим = РежимСвойства() Тогда
		ТекущиеДанные = Элементы.Свойства.ТекущиеДанные;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущиеДанные.Выбран = Истина;
			СвойстваВыбранПриИзменении(Элементы.СвойстваВыбран);
		КонецЕсли;
	КонецЕсли;
	
	СформироватьИмя();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не Элементы.Уточнение.ОтметкаНезаполненного Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Уточнение"));
	КонецЕсли;
	
	Если Режим = РежимРазмещение() Тогда
		ЕстьВыбор = ВыборУстановленДерево(Размещение.ПолучитьЭлементы());
		
		Если Не ЕстьВыбор Тогда
			ТекстСообщения = НСтр("ru = 'Выбрерите размещение ключевой операции.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "Размещение", Отказ);
		КонецЕсли;
	ИначеЕсли Режим = РежимСвойства() Тогда
		ЕстьВыбор = ВыборУстановленТаблицаЗначений(Свойства);
		
		Если Не ЕстьВыбор Тогда
			ТекстСообщения = НСтр("ru = 'Выберите операцию.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "Свойства", Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УточнениеПриИзменении(Элемент)
	
	СформироватьИмя();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазмещение

&НаКлиенте
Процедура РазмещениеВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Размещение.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.Тип <> "Группа" Тогда
			НовыйВыбор = ТекущиеДанные.ПолучитьИдентификатор();
			
			Если ТекущиеДанные.Выбран = 2 Тогда
				ТекущиеДанные.Выбран = 0;
			КонецЕсли;
			
			Если ПоследнийВыборРазмещения <> НовыйВыбор Тогда
				Если ПоследнийВыборРазмещения <> Неопределено Тогда
					СтрокаПоследнегоВыбора = Размещение.НайтиПоИдентификатору(ПоследнийВыборРазмещения);
					СтрокаПоследнегоВыбора.Выбран = Ложь;
					УстановитьВыборРодителя(СтрокаПоследнегоВыбора, 0);
				КонецЕсли;
				
				ПоследнийВыборРазмещения = НовыйВыбор;
			Иначе
				ПоследнийВыборРазмещения = Неопределено;
			КонецЕсли;
			
			ВыборРодителя = ?(ТекущиеДанные.Выбран = 0, 0, 2);
			УстановитьВыборРодителя(ТекущиеДанные, ВыборРодителя);
		Иначе
			ОтменитьВыбор(ТекущиеДанные);
		КонецЕсли;
		
		СформироватьИмя();
	КонецЕсли;
	
	УстановитьПроверкуЗаполненияИДоступность(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвойства

&НаКлиенте
Процедура СвойстваВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Свойства.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущийИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		
		Если ПоследнийВыборСвойства <> ТекущийИдентификатор Тогда
			Если ПоследнийВыборСвойства <> Неопределено Тогда
				ПредыдущийВыбор = Свойства.НайтиПоИдентификатору(ПоследнийВыборСвойства);
				ПредыдущийВыбор.Выбран = Ложь;
			КонецЕсли;
			
			ПоследнийВыборСвойства = ТекущийИдентификатор;
		Иначе
			ПоследнийВыборСвойства = Неопределено;
		КонецЕсли;
		
		СформироватьИмя();
		Элементы.Уточнение.Доступность = ТекущиеДанные.Выбран;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Закрыть(Имя);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьРазмещениеОпераций(ОписаниеОбъектаМетаданных)
	
	ИмяМакета = СтрШаблон("РазмещениеОпераций_%1", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ТекстМакета = Справочники.КлючевыеОперации.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	ПолноеРазмещение = ОбщегоНазначения.ЗначениеИзСтрокиXML(ТекстМакета).Размещение;
	
	СтрокиПолногоРазмещения = ПолноеРазмещение.Строки;
	ВидОбъектаМетаданных = ОписаниеОбъектаМетаданных.Вид;
	СтрокаРазмещения = СтрокиПолногоРазмещения.Найти(ВидОбъектаМетаданных, "Имя");
	
	ЭлементыРазмещения = Размещение.ПолучитьЭлементы();
	ОбщегоНазначения.ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(ЭлементыРазмещения, СтрокаРазмещения);
	УдаляемыеЭлементыРазмещения = Новый Массив;
	
	Для каждого СтрокаРазмещения Из ЭлементыРазмещения Цикл
		Если ЗначениеЗаполнено(СтрокаРазмещения.Состав) Тогда
			ЭлементыСтрокиРазмещения = СтрокаРазмещения.ПолучитьЭлементы();
			Состав = СтрокаРазмещения.Состав;
			
			Если Лев(Состав, 1) = "@" Тогда
				Состав = Сред(Состав, 2);
				Добавлены = Ложь;
				
				Если Состав = "Команды" Тогда
					Добавлены = ДобавитьКоманды(ЭлементыСтрокиРазмещения, ОбъектМетаданных);
				ИначеЕсли Состав = "Формы" Тогда
					Добавлены = ДобавитьФормы(ЭлементыСтрокиРазмещения, ОбъектМетаданных);
				КонецЕсли;
				
				Если Не Добавлены Тогда
					УдаляемыеЭлементыРазмещения.Добавить(СтрокаРазмещения);
				КонецЕсли;
			Иначе
				СтрокаСостава = СтрокиПолногоРазмещения.Найти(Состав);
				ЗаполнитьЗначенияСвойств(СтрокаРазмещения, СтрокаСостава);
				ОбщегоНазначения.ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(ЭлементыСтрокиРазмещения, СтрокаСостава);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого УдаляемаяСтрока Из УдаляемыеЭлементыРазмещения Цикл
		ЭлементыРазмещения.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСвойства()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЛОЖЬ КАК Выбран,
		|	WebСервисыСвойстваОперации.ИмяПроцедуры КАК Значение
		|ИЗ
		|	Справочник.WebСервисыСвойства.Операции КАК WebСервисыСвойстваОперации
		|ГДЕ
		|	WebСервисыСвойстваОперации.Ссылка = &Ссылка");
	СвойстваОбъекта = ОбщегоНазначенияСППР.СвойстваОбъектаРасширенногоХранения(Параметры.ОбъектМетаданных);
	Запрос.УстановитьПараметр("Ссылка", СвойстваОбъекта);
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(), "Свойства");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПоСтруктуреИмени(СтруктураИмени, Режим)
	
	Если Режим = РежимРазмещение() Тогда
		Если СтруктураИмени.ТипРазмещения <> Неопределено Тогда
			НайденныеТипыРазмещения = НайтиСтрокиДерева(Размещение.ПолучитьЭлементы(), "Имя", СтруктураИмени.ТипРазмещения);
			
			Если НайденныеТипыРазмещения.Количество() > 0 Тогда
				ТипРазмещения = НайденныеТипыРазмещения[0];
				ОбъектыРазмещения = ТипРазмещения.ПолучитьЭлементы();
				
				Если ОбъектыРазмещения.Количество() > 0 Тогда
					Если СтруктураИмени.ОбъектРазмещения <> Неопределено Тогда
						НайденныеОбъектыРазмещения = НайтиСтрокиДерева(ОбъектыРазмещения, "Имя", СтруктураИмени.ОбъектРазмещения);
						
						Если НайденныеОбъектыРазмещения.Количество() > 0 Тогда
							Элементы.Размещение.ТекущаяСтрока = НайденныеОбъектыРазмещения[0].ПолучитьИдентификатор();
						КонецЕсли;
					КонецЕсли;
				Иначе
					Элементы.Размещение.ТекущаяСтрока = ТипРазмещения.ПолучитьИдентификатор();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Режим = РежимСвойства() Тогда
		Если СтруктураИмени.Свойство <> Неопределено Тогда
			Отбор = Новый Структура("Значение", СтруктураИмени.Свойство);
			НайденныеСвойства = Свойства.НайтиСтроки(Отбор);
			
			Если НайденныеСвойства.Количество() > 0 Тогда
				Элементы.Свойства.ТекущаяСтрока = НайденныеСвойства[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураИмени.Уточнение <> Неопределено Тогда
		Уточнение = СтруктураИмени.Уточнение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыбор(ДанныеСтроки)
	
	Если ДанныеСтроки.Выбран = 1 Тогда
		ДанныеСтроки.Выбран = 0;
	ИначеЕсли ДанныеСтроки.Выбран = 2 Тогда
		ДанныеСтроки.Выбран = 1;
	Иначе
		ДанныеСтроки.Выбран = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИмя()
	
	Имя = МинимальноеИмяКлючевойОперации;
	
	Если Режим = РежимРазмещение() Тогда
		СформироватьИмяРазмещения();
	ИначеЕсли Режим = РежимСвойства() Тогда
		СформироватьИмяСвойства();
	КонецЕсли;
	
	Если Не ПустаяСтрока(Уточнение) Тогда
		Имя = СтрШаблон("%1.%2", Имя, Уточнение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИмяРазмещения()
	
	Если ПоследнийВыборРазмещения <> Неопределено Тогда
		ТекущиеДанные = Размещение.НайтиПоИдентификатору(ПоследнийВыборРазмещения);
		СоставИмени = Новый Массив;
		
		Пока ТекущиеДанные <> Неопределено Цикл
			СоставИмени.Вставить(0, ТекущиеДанные.Имя);
			ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
		КонецЦикла;
		
		Имя = СтрШаблон("%1.%2", Имя, СтрСоединить(СоставИмени, "."));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИмяСвойства()
	
	Если ПоследнийВыборСвойства <> Неопределено Тогда
		ПоследнийВыбор = Свойства.НайтиПоИдентификатору(ПоследнийВыборСвойства);
		
		Если ПоследнийВыбор.Выбран Тогда
			Имя = СтрШаблон("%1.%2", Имя, ПоследнийВыбор.Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыборРодителя(Строка, Значение)
	
	Родитель = Строка.ПолучитьРодителя();
	
	Пока Родитель <> Неопределено Цикл
		Родитель.Выбран = Значение;
		Родитель = Родитель.ПолучитьРодителя();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроверкуЗаполненияИДоступность(ТекущиеДанные)
	
	Если ТекущиеДанные <> Неопределено Тогда
		Тип = ТекущиеДанные.Тип;
		Выбран = (ТекущиеДанные.Выбран = 1);
		Элементы.Уточнение.АвтоОтметкаНезаполненного = (Тип = "СобытиеМодуля" Или Тип = "Форма") И Выбран;
		Элементы.Уточнение.Доступность = Выбран;
	Иначе
		Элементы.Уточнение.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Уточнение.Доступность = Ложь;
	КонецЕсли;
	
	Если Не Элементы.Уточнение.АвтоОтметкаНезаполненного Тогда
		Элементы.Уточнение.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВыборУстановленДерево(Строки)
	
	Для каждого Строка Из Строки Цикл
		Если Строка.Выбран Тогда
			Возврат Истина;
		Иначе
			Если ВыборУстановленДерево(Строка.ПолучитьЭлементы()) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВыборУстановленТаблицаЗначений(Таблица)
	
	Отбор = Новый Структура("Выбран", Истина);
	ВыбранныеСтроки = Таблица.НайтиСтроки(Отбор);
	
	Возврат ВыбранныеСтроки.Количество() > 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьИзТаблицы(Элементы, ОбъектМетаданных, ИмяСправочника, Картинка, Тип)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаСправочника.Имя КАК Имя
		|ИЗ
		|	#Справочник КАК ТаблицаСправочника
		|ГДЕ
		|	ТаблицаСправочника.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Справочник", ИмяСправочника);
	Запрос.УстановитьПараметр("Владелец", ОбъектМетаданных);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовыйЭлемент = Элементы.Добавить();
		НовыйЭлемент.Элемент = Выборка.Имя;
		НовыйЭлемент.Имя = Выборка.Имя;
		НовыйЭлемент.Картинка = Картинка;
		НовыйЭлемент.Тип = Тип;
	КонецЦикла;
	
	Возврат Не Результат.Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьКоманды(Элементы, ОбъектМетаданных)
	
	Возврат ДобавитьИзТаблицы(Элементы, ОбъектМетаданных, "Справочник.КомандыОбъектовМетаданных", 20, "Команда");
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьФормы(Элементы, ОбъектМетаданных)
	
	Возврат ДобавитьИзТаблицы(Элементы, ОбъектМетаданных, "Справочник.ФормыОбъектовМетаданных", 1, "Форма");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяМетаданныхWebСервис()
	
	Возврат "WEBСЕРВИС";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяМетаданныхОбщаяКоманда()
	
	Возврат "ОБЩАЯКОМАНДА";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяМетаданныхОбщийМодуль()
	
	Возврат "ОБЩИЙМОДУЛЬ";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяМетаданныхОбщаяФорма()
	
	Возврат "ОБЩАЯФОРМА";
	
КонецФункции

&НаСервереБезКонтекста
Функция МинимальноеИмяКлючевойОперации(ИмяОбъектаМетаданных, ВидОбъектаМетаданных) Экспорт
	
	Возврат СтрШаблон("%1.%2", ВидОбъектаМетаданных, ИмяОбъектаМетаданных);
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиСтрокиДерева(Строки, Поле, Значение)
	
	НайденныеСтроки = Новый Массив;
	
	Для каждого Строка Из Строки Цикл
		Если Строка[Поле] = Значение Тогда
			НайденныеСтроки.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныеСтроки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимПростой()
	
	Возврат "Простой";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимРазмещение()
	
	Возврат "Размещение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимСвойства()
	
	Возврат "Свойства";
	
КонецФункции

&НаСервереБезКонтекста
Функция СтруктураИмени(Имя, Режим)
	
	ИндексНачалаУточнения = 2;
	Состав = СтрРазделить(Имя, ".");
	Количество = Состав.Количество();
	СтруктураИмени = Новый Структура(
		"ОбъектМетаданных,
		|ОбъектРазмещения,
		|Свойство,
		|ТипМетаданных,
		|ТипРазмещения,
		|Уточнение");
	
	Если Количество > 0 Тогда
		СтруктураИмени.ТипМетаданных = Состав[0];
	КонецЕсли;
	
	Если Количество > 1 Тогда
		СтруктураИмени.ОбъектМетаданных = Состав[1];
	КонецЕсли;
	
	Если Количество > 2 Тогда
		Если Режим = РежимРазмещение() Тогда
			ТипРазмещения = Состав[2];
			СтруктураИмени.ТипРазмещения = ТипРазмещения;
			ЭтоМодуль = ТипРазмещения = "МодульОбъекта"
			        Или ТипРазмещения = "МодульМенеджера"
			        Или ТипРазмещения = "МодульНабораЗаписей";
			
			Если ЭтоМодуль Тогда
				ИндексНачалаУточнения = 3;
			Иначе
				ИндексНачалаУточнения = 4;
			КонецЕсли;
		ИначеЕсли Режим = РежимСвойства() Тогда
			СтруктураИмени.Свойство = Состав[2];
			ИндексНачалаУточнения = 3;
		КонецЕсли;
	КонецЕсли;
	
	Если Количество > 3 Тогда
		Если ИндексНачалаУточнения = 4 Тогда
			СтруктураИмени.ОбъектРазмещения = Состав[3];
		КонецЕсли;
	КонецЕсли;
	
	СоставУточнения = Новый Массив;
	
	Для Индекс = ИндексНачалаУточнения По Количество - 1 Цикл
		СоставУточнения.Добавить(Состав[Индекс]);
	КонецЦикла;
	
	СтруктураИмени.Уточнение = СтрСоединить(СоставУточнения, ".");
	
	Возврат СтруктураИмени;
	
КонецФункции

#КонецОбласти
