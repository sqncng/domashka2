#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Важность = КлючевыеОперацииКлиентСервер.ВажностьПоУмолчанию();
		СтатусКонтроля = "Добавлено";
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	УправлениеДоступно = КлючевыеОперации.УправлениеДоступно();
	Элементы.Утверждено.Доступность = УправлениеДоступно;
	ТолькоПросмотр = Не (УправлениеДоступно Или Не Объект.Утверждено);
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ТекущийЭлемент = Элементы.Имя;
	КонецЕсли;
	
	КлючевыеОперации.УстановитьЭлементуФормыОтборПоПроекту(Элементы.Владелец);
	СформироватьПримерВстраивания(Объект.Имя, Объект.ВидОперации, ПримерыВстраивания);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	УстановитьИмя("");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПроверитьЗаполнениеПередПодборомИмени() Тогда
		ПараметрыПодбора = Новый Структура;
		ПараметрыПодбора.Вставить("Имя", Объект.Имя);
		ПараметрыПодбора.Вставить("ОбъектМетаданных", Объект.Владелец);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриВыбореИмени", ЭтаФорма);
		ОткрытьФорму("Справочник.КлючевыеОперации.Форма.ПодборИмени", ПараметрыПодбора, ЭтаФорма,,,, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	УстановитьИмя(Объект.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	
	СформироватьПримерВстраивания(Объект.Имя, Объект.ВидОперации, ПримерыВстраивания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	Интерактивная = ПредопределенноеЗначение("Перечисление.ВидыКлючевыхОпераций.Интерактивная");
	
	Если Объект.ВидОперации = Интерактивная И Объект.ЦелевоеВремя = 0 Тогда
		Объект.ЦелевоеВремя = 1;
	КонецЕсли;
	
	СформироватьПримерВстраивания(Объект.Имя, Объект.ВидОперации, ПримерыВстраивания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриВыбореИмени(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		УстановитьИмя(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьПримерВстраивания(Имя, ВидОперации, ПримерВстраивания)
	
	Если Не ПустаяСтрока(Имя) И ЗначениеЗаполнено(ВидОперации) Тогда
		ЭтоШаблон = СтрНайти(Имя, "%") > 0;
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыКлючевыхОпераций.Интерактивная") Тогда
			Если ЭтоШаблон Тогда
				ШаблонИмениМакета = "ПримерИнтерактивнаяШаблон_%1";
			Иначе
				ШаблонИмениМакета = "ПримерИнтерактивная_%1";
			КонецЕсли;
		ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыКлючевыхОпераций.Длительная") Тогда
			Если ЭтоШаблон Тогда
				ШаблонИмениМакета = "ПримерДлительнаяШаблон_%1";
			Иначе
				ШаблонИмениМакета = "ПримерДлительная_%1";
			КонецЕсли;
		КонецЕсли;
		
		ИмяМакета = СтрШаблон(ШаблонИмениМакета, ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстМакета = Справочники.КлючевыеОперации.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
		ПримерВстраивания = СтрЗаменить(ТекстМакета, "%ИмяКлючевойОперации%", Имя);
		Фрагменты = Новый Массив;
		Индекс = 1;
		Позиция = 1;
		НоваяПозиция = СтрНайти(ПримерВстраивания, "%",, Позиция);
		
		Пока НоваяПозиция > 0 Цикл
			Фрагменты.Добавить(Сред(ПримерВстраивания, Позиция, НоваяПозиция - Позиция + 1));
			Фрагменты.Добавить(Формат(Индекс, "ЧГ=0"));
			Индекс = Индекс + 1;
			Позиция = НоваяПозиция + 1;
			НоваяПозиция = СтрНайти(ПримерВстраивания, "%",, Позиция);
		КонецЦикла;
		
		Фрагменты.Добавить(Сред(ПримерВстраивания, Позиция));
		ПримерВстраивания = СтрСоединить(Фрагменты);
	Иначе
		ПримерВстраивания = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИмя(Значение)
	
	Объект.Имя = Значение;
	Объект.Наименование = Значение;
	СформироватьПримерВстраивания(Объект.Имя, Объект.ВидОперации, ПримерыВстраивания);
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеПередПодборомИмени()
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		ТекстСообщения = НСтр("ru = 'Укажите объект метаданных перед началом подбора имени ключевой операции.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.Владелец",, Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

#КонецОбласти
