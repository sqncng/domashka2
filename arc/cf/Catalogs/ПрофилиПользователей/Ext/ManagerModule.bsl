#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	
	НеРедактируемыеРеквизиты.Добавить("Проект");
	НеРедактируемыеРеквизиты.Добавить("ПолныйКод");
	НеРедактируемыеРеквизиты.Добавить("ХранилищеЗаметок");
	НеРедактируемыеРеквизиты.Добавить("ХранилищеОписания");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

Функция СформироватьПечатныеФормы(МассивОбъектов, СУчетомПриемника=Ложь, ДанныеСоответствия=Неопределено) Экспорт
	
	ПечатныеФормы = Новый Соответствие;
	
	ТекстЗапроса = ТекстЗапросаДляФормированияОписания(СУчетомПриемника);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Если СУчетомПриемника Тогда
		Запрос.УстановитьПараметр("ТаблицаСоответствияПрофилей", ДанныеСоответствия.Профили);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Новый ТабличныйДокумент;
		
		ОбработатьЭлементВыборки(Выборка, Документ, СУчетомПриемника, Ложь, ДанныеСоответствия);
		
		СтруктураПечатныхФорм = Новый Структура;
		СтруктураПечатныхФорм.Вставить("Описание", Документ);
		СтруктураПечатныхФорм.Вставить("ОписаниеПриемника", Неопределено);

		Если СУчетомПриемника И ЗначениеЗаполнено(Выборка.ПриемникСсылка) Тогда
			ДокументПриемника = Новый ТабличныйДокумент;
			ОбработатьЭлементВыборки(Выборка, ДокументПриемника, СУчетомПриемника, Истина, ДанныеСоответствия);
			СтруктураПечатныхФорм.Вставить("ОписаниеПриемника", ДокументПриемника);
		КонецЕсли;
		
		ПечатныеФормы.Вставить(Выборка.Ссылка, СтруктураПечатныхФорм);
		
	КонецЦикла;
	
	Возврат ПечатныеФормы;
	
КонецФункции

// Выполняет печать описаний и схем переданных объектов
//
// Параметры:
//  МассивОбъектов - массив объектов, подлежащих печати
//
Процедура Печать(МассивОбъектов, ПечатныеФормы) Экспорт
	
	ПечатныеФормы = СформироватьПечатныеФормы(МассивОбъектов);
	
КонецПроцедуры

Процедура СоздатьПрофильСистема(Проект) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрофилиПользователей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПрофилиПользователей КАК ПрофилиПользователей
	|ГДЕ
	|	ПрофилиПользователей.Система
	|   И ПрофилиПользователей.Владелец = &Проект"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
			
	Профиль = Справочники.ПрофилиПользователей.СоздатьЭлемент();
	Профиль.Наименование = "<Система>";
	Профиль.Система = Истина;
	Профиль.Владелец = Проект;
	Профиль.Записать();
	
КонецПроцедуры

Функция ПрофильСистема(Проект) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрофилиПользователей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПрофилиПользователей КАК ПрофилиПользователей
	|ГДЕ
	|	ПрофилиПользователей.Владелец = &Проект
	|	И ПрофилиПользователей.Система"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ОписаниеНачальногоЗаполненияПрофилейНаВстроенномЯзыке(Проект) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Профили.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПрофилиПользователей КАК Профили
	|ГДЕ
	|	НЕ Профили.ПометкаУдаления
	|	И НЕ Профили.ЭтоГруппа
	|	И НЕ Профили.Система
	|	И (Профили.Владелец = &Проект
	|			ИЛИ НЕ &ОтборПоПроекту)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Профили.ПолныйКод");
	
	ОтборПоПроекту = ?(ЗначениеЗаполнено(Проект), Истина, Ложь);
	
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ОтборПоПроекту", ОтборПоПроекту);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Текст = "";
	Пока Выборка.Следующий() Цикл
		Текст = Текст + ОписаниеНачальногоЗаполненияПрофиляНаВстроенномЯзыке(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Текст + Символы.ПС;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрофилиПользователей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПрофилиПользователей КАК ПрофилиПользователей
	|ГДЕ
	|	(НЕ &ОтбиратьПоПометкеУдаления
	|			ИЛИ ПрофилиПользователей.ПометкаУдаления = &ПометкаУдаления)
	|	И (НЕ &ОтбиратьПоНаименованию
	|			ИЛИ ПрофилиПользователей.Наименование ПОДОБНО &СтрокаПоиска)
	|	И (НЕ &ОтбиратьПоВладельцу
	|			ИЛИ ПрофилиПользователей.Владелец = &Владелец)
	|	И (НЕ &ОтбиратьПоФункции
	|			ИЛИ ПрофилиПользователей.Владелец = &ВладелецФункции)
	|	И (НЕ &ОтбиратьПоЭталоннойБазе
	|			ИЛИ ПрофилиПользователей.Владелец = &ВладелецЭталоннойБазы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПрофилиПользователей.ПометкаУдаления,
	|	ПрофилиПользователей.Код"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		Запрос.УстановитьПараметр("Владелец", Параметры.Отбор.Владелец);
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Истина);
	Иначе
		Запрос.УстановитьПараметр("Владелец", Неопределено);
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Ложь);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ПометкаУдаления") Тогда
		Запрос.УстановитьПараметр("ПометкаУдаления", Параметры.Отбор.ПометкаУдаления);
		Запрос.УстановитьПараметр("ОтбиратьПоПометкеУдаления", Истина);
	Иначе
		Запрос.УстановитьПараметр("ПометкаУдаления", Неопределено);
		Запрос.УстановитьПараметр("ОтбиратьПоПометкеУдаления", Ложь);
	КонецЕсли;
	
	Если Параметры.Свойство("ФункцияСистемы") Тогда
		Запрос.УстановитьПараметр("ВладелецФункции", ВладелецФункцииСистемы(Параметры.ФункцияСистемы));
		Запрос.УстановитьПараметр("ОтбиратьПоФункции", Истина);
	Иначе
		Запрос.УстановитьПараметр("ВладелецФункции", Неопределено);
		Запрос.УстановитьПараметр("ОтбиратьПоФункции", Ложь);
	КонецЕсли;
	
	Если Параметры.Свойство("ЭталоннаяБаза") Тогда
		Запрос.УстановитьПараметр("ВладелецЭталоннойБазы", ВладелецЭталоннойБазы(Параметры.ЭталоннаяБаза));
		Запрос.УстановитьПараметр("ОтбиратьПоЭталоннойБазе", Истина);
	Иначе
		Запрос.УстановитьПараметр("ВладелецЭталоннойБазы", Неопределено);
		Запрос.УстановитьПараметр("ОтбиратьПоЭталоннойБазе", Ложь);
	КонецЕсли;
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
		
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
		Запрос.УстановитьПараметр("ОтбиратьПоНаименованию", Истина);
	Иначе
		Запрос.УстановитьПараметр("СтрокаПоиска", "");
		Запрос.УстановитьПараметр("ОтбиратьПоНаименованию", Ложь);
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();
		
	ДанныеВыбора = Новый СписокЗначений();
		
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДляФормированияОписания(СУчетомПриемника)
	
	Если СУчетомПриемника Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаСоответствияПрофилей.Источник КАК Источник,
		|	ТаблицаСоответствияПрофилей.Приемник КАК Приемник
		|ПОМЕСТИТЬ ВТСоответствиеПрофилей
		|ИЗ
		|	&ТаблицаСоответствияПрофилей КАК ТаблицаСоответствияПрофилей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПрофилиПользователей.Ссылка КАК Ссылка,
		|	ПрофилиПользователейПриемник.Ссылка КАК ПриемникСсылка,
		|	ПрофилиПользователей.ПометкаУдаления КАК ПометкаУдаления,
		|	ЕСТЬNULL(ПрофилиПользователейПриемник.ПометкаУдаления, Ложь) КАК ПриемникПометкаУдаления,
		|	ПрофилиПользователей.Родитель КАК Родитель,
		|	ПрофилиПользователейПриемник.Родитель КАК ПриемникРодитель,
		|	ПрофилиПользователей.ЭтоГруппа КАК ЭтоГруппа,
		|	ЕСТЬNULL(ПрофилиПользователейПриемник.ЭтоГруппа, Ложь) КАК ПриемникЭтоГруппа,
		|	ПрофилиПользователей.Код КАК Код,
		|	ПрофилиПользователейПриемник.Код КАК ПриемникКод,
		|	ПрофилиПользователей.Наименование КАК Наименование,
		|	ПрофилиПользователейПриемник.Наименование КАК ПриемникНаименование,
		|	ПрофилиПользователей.Имя КАК Имя,
		|	ПрофилиПользователейПриемник.Имя КАК ПриемникИмя,
		|	ПрофилиПользователей.Ответственный КАК Ответственный,
		|	ПрофилиПользователейПриемник.Ответственный КАК ПриемникОтветственный,
		|	ПрофилиПользователей.Описание КАК Описание,
		|	ПрофилиПользователейПриемник.Описание КАК ПриемникОписание,
		|	ПрофилиПользователей.Заметки КАК Заметки,
		|	ПрофилиПользователейПриемник.Заметки КАК ПриемникЗаметки,
		|	ПрофилиПользователей.ПолныйКод КАК ПолныйКод,
		|	ПрофилиПользователейПриемник.ПолныйКод КАК ПриемникПолныйКод,
		|	ПрофилиПользователей.РазделПроекта КАК РазделПроекта,
		|	ПрофилиПользователейПриемник.РазделПроекта КАК ПриемникРазделПроекта,
		|	ПрофилиПользователей.РазрешенныеДействия.(
		|	ВЫБОР
		|		КОГДА Роль.Синоним ПОДОБНО """"
		|			ТОГДА Роль.Имя
		|		ИНАЧЕ Роль.Синоним
		|	КОНЕЦ КАК ВидПодраздела,
		|	"""" КАК НомерПодраздела,
		|	"""" КАК ЗаголовокПодраздела,
		|	Роль КАК Ссылка,
		|	Комментарии КАК Текст1,
		|	"""" КАК Текст2,
		|	NULL КАК Гиперссылка,
		|	ЛОЖЬ КАК ПометкаУдаления,
		|	"""" КАК СлужебнаяИнформация,
		|   Роль.Код КАК ПолеУпорядочивания
		|	) КАК РазрешенныеДействия,
		|	ПрофилиПользователейПриемник.РазрешенныеДействия.(
		|	ВЫБОР
		|		КОГДА Роль.Синоним ПОДОБНО """"
		|			ТОГДА Роль.Имя
		|		ИНАЧЕ Роль.Синоним
		|	КОНЕЦ КАК ВидПодраздела,
		|	"""" КАК НомерПодраздела,
		|	"""" КАК ЗаголовокПодраздела,
		|	Роль КАК Ссылка,
		|	Комментарии КАК Текст1,
		|	"""" КАК Текст2,
		|	NULL КАК Гиперссылка,
		|	ЛОЖЬ КАК ПометкаУдаления,
		|	"""" КАК СлужебнаяИнформация,
		|   Роль.Код КАК ПолеУпорядочивания
		|	) КАК ПриемникРазрешенныеДействия,
		|	ПрофилиПользователей.ВидыДоступа.(
		|	НомерСтроки Как НомерСтроки,
		|	ВидДоступа.Наименование КАК Представление,
		|	ВидДоступа КАК Ссылка
		|	) КАК ВидыДоступа,
		|	ПрофилиПользователейПриемник.ВидыДоступа.(
		|	НомерСтроки Как НомерСтроки,
		|	ВидДоступа.Наименование КАК Представление,
		|	ВидДоступа КАК Ссылка
		|	) КАК ПриемникВидыДоступа,
		|	ПрофилиПользователей.РазделыПроекта.(
		|	Раздел КАК Раздел) КАК РазделыПроекта,
		|	ПрофилиПользователейПриемник.РазделыПроекта.(
		|	Раздел КАК Раздел) КАК ПриемникРазделыПроекта
		|ИЗ
		|	Справочник.ПрофилиПользователей КАК ПрофилиПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПрофилей КАК ВТСоответствиеПрофилей
		|		ПО ПрофилиПользователей.Ссылка = ВТСоответствиеПрофилей.Источник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиПользователей КАК ПрофилиПользователейПриемник
		|		ПО (ВТСоответствиеПрофилей.Приемник = ПрофилиПользователейПриемник.Ссылка)
		|ГДЕ
		|	ПрофилиПользователей.Ссылка В(&МассивОбъектов)"
		;
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПрофилиПользователей.Ссылка КАК Ссылка,
		|	ПрофилиПользователей.ПометкаУдаления КАК ПометкаУдаления,
		|	ПрофилиПользователей.Родитель КАК Родитель,
		|	ПрофилиПользователей.ЭтоГруппа КАК ЭтоГруппа,
		|	ПрофилиПользователей.Код КАК Код,
		|	ПрофилиПользователей.Наименование КАК Наименование,
		|	ПрофилиПользователей.Имя КАК Имя,
		|	ПрофилиПользователей.Ответственный КАК Ответственный,
		|	ПрофилиПользователей.Описание КАК Описание,
		|	ПрофилиПользователей.Заметки КАК Заметки,
		|	ПрофилиПользователей.ПолныйКод КАК ПолныйКод,
		|	ПрофилиПользователей.РазделПроекта КАК РазделПроекта,
		|	ПрофилиПользователей.РазрешенныеДействия.(
		|		ВЫБОР
		|			КОГДА ПрофилиПользователей.РазрешенныеДействия.Роль.Синоним ПОДОБНО """"
		|				ТОГДА ПрофилиПользователей.РазрешенныеДействия.Роль.Имя
		|			ИНАЧЕ ПрофилиПользователей.РазрешенныеДействия.Роль.Синоним
		|		КОНЕЦ КАК ВидПодраздела,
		|		"""" КАК НомерПодраздела,
		|		"""" КАК ЗаголовокПодраздела,
		|		Роль КАК Ссылка,
		|		Комментарии КАК Текст1,
		|		"""" КАК Текст2,
		|		NULL КАК Гиперссылка,
		|		ЛОЖЬ КАК ПометкаУдаления,
		|		"""" КАК СлужебнаяИнформация,
		|		Роль.Код КАК ПолеУпорядочивания
		|	) КАК РазрешенныеДействия,
		|	ПрофилиПользователей.ВидыДоступа.(
		|		НомерСтроки КАК НомерСтроки,
		|		ВидДоступа.Наименование КАК Представление,
		|		ВидДоступа КАК Ссылка
		|	) КАК ВидыДоступа,
		|	ПрофилиПользователей.РазделыПроекта.(
		|		Раздел КАК Раздел
		|	) КАК РазделыПроекта
		|ИЗ
		|	Справочник.ПрофилиПользователей КАК ПрофилиПользователей
		|ГДЕ
		|	ПрофилиПользователей.Ссылка В(&МассивОбъектов)"
		;
	
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОписаниеОбъекта(Выборка, Документ, СУчетомПриемника, ДляПриемника, ДанныеСоответствия)
	
	НастройкиВывода = Новый Структура;
	НастройкиВывода.Вставить("ДляПриемника", ДляПриемника);
	НастройкиВывода.Вставить("СУчетомПриемника", СУчетомПриемника);
	
	// Заголовок документа
	ИмяПоляСсылка = ?(ДляПриемника, "ПриемникСсылка", "Ссылка");
	ИмяПоляПолныйКод = ?(ДляПриемника, "ПриемникПолныйКод", "ПолныйКод");
	ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Профиль пользователей'"),
	                                         Выборка[ИмяПоляСсылка], Выборка[ИмяПоляПолныйКод], Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокТекста("", , Документ);
	
	Если СУчетомПриемника Тогда
		СоответствиеВидовДоступа = ДанныеСоответствия.ВидыДоступа;
		СоответствиеПрофилей     = ДанныеСоответствия.Профили;
	Иначе
		СоответствиеВидовДоступа = Неопределено;
		СоответствиеПрофилей     = Неопределено;
	КонецЕсли;
	
	ИмяПоля = ?(ДляПриемника, "ПриемникОтветственный", "Ответственный");
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Ответственный: '") + Выборка[ИмяПоля], 1, Документ);
	
	ЭтоГруппа = ?(ДляПриемника, Выборка.ПриемникЭтоГруппа, Выборка.ЭтоГруппа);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Раздел проекта'"), Документ);
	
	ИмяПоля = ?(ДляПриемника, "ПриемникРазделПроекта", "РазделПроекта");
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка[ИмяПоля], 1, Документ, Выборка[ИмяПоля]);
	
	ИмяТЧ = ?(ДляПриемника, "ПриемникРазделыПроекта", "РазделыПроекта");
	РазделыПроекта = Выборка[ИмяТЧ].Выгрузить();
	
	Если РазделыПроекта.Количество()>0 Тогда
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Дополнительные разделы'"), Документ);
		
		Для Каждого СтрокаТЧ из РазделыПроекта Цикл
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(СтрокаТЧ.Раздел, 1, Документ, СтрокаТЧ.Раздел);
		КонецЦикла;
		
	КонецЕсли;
	
	// Описание профиля
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Описание профиля'"), Документ);
	
	ИмяПоля = ?(ДляПриемника, "ПриемникОписание", "Описание");
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка[ИмяПоля], , Документ);
	
	Если Не ЭтоГруппа Тогда
		
		// Разрешенные действия
		ИмяТЧ = ?(ДляПриемника, "ПриемникРазрешенныеДействия", "РазрешенныеДействия");
		ТаблицаРазрешенныхДействий = Выборка[ИмяТЧ].Выгрузить();
		ТаблицаРазрешенныхДействий.Сортировать("ПолеУпорядочивания");
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Разрешенные действия (роли)'"), Документ);
		ОписаниеОбъектов.ВывестиПодразделы(ТаблицаРазрешенныхДействий, , , Документ);
		
		// Виды доступа
		
		ЗаголовокРаздела = НСтр("ru='Виды доступа'");
		ОписаниеОбъектов.ВывестиТаблицуТЧ(Выборка, "ВидыДоступа", ЗаголовокРаздела,
		                                  СоответствиеВидовДоступа, Документ, "", НастройкиВывода);
		
	КонецЕсли;
	
	// Заметки
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Заметки'"), Документ);
	ИмяПоля = ?(ДляПриемника, "ПриемникЗаметки", "Заметки");
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка[ИмяПоля], , Документ);
	
КонецПроцедуры

Функция ВладелецФункцииСистемы(ФункцияСистемы)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФункцииСистемы.Владелец КАК Владелец
		|ИЗ
		|	Справочник.ФункцииСистемы КАК ФункцииСистемы
		|ГДЕ
		|	ФункцииСистемы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ФункцияСистемы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Владелец;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции	

Функция ВладелецЭталоннойБазы(ЭталоннаяБаза)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭталонныеБазыТестирования.Владелец КАК Владелец
		|ИЗ
		|	Справочник.ЭталонныеБазыТестирования КАК ЭталонныеБазыТестирования
		|ГДЕ
		|	ЭталонныеБазыТестирования.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭталоннаяБаза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Владелец;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции	

Процедура ОбработатьЭлементВыборки(Выборка, Документ, СУчетомПриемника, ДляПриемника, ДанныеСоответствия)
	
	ОписаниеОбъектов.НастроитьОписаниеОбъекта(Документ);
	Документ.НачатьАвтогруппировкуСтрок();
	
	СформироватьОписаниеОбъекта(Выборка, Документ, СУчетомПриемника, ДляПриемника, ДанныеСоответствия);
	
	Документ.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

// Функция ОписаниеНачальногоЗаполненияПрофиляНаВстроенномЯзыке формирует готовую программу
// для вставки в процедуру УправлениеДоступом.ОписанияНачальногоЗаполненияПрофилейГруппДоступа,
// упрощая процесс программирования начального заполнения профилей групп доступа.
//
// Параметры:
//  Профиль      - СправочникСсылка.ПрофилиГруппДоступа.
//
// Возвращаемое значение:
//  Строка.
//
Функция ОписаниеНачальногоЗаполненияПрофиляНаВстроенномЯзыке(Профиль)

	Текст = "
	|	// Описание для заполнения профиля """ + Профиль.Наименование + """.
	|	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	|	ОписаниеПрофиля.Идентификатор = """ + Профиль.УникальныйИдентификатор() + """;
	|	ОписаниеПрофиля.Наименование  = """ + Профиль.Наименование + """;";

	Для каждого СтрокаТЧ Из Профиль.РазрешенныеДействия Цикл
		Текст = Текст + "
		|	ОписаниеПрофиля.Роли.Добавить       (  """ + СтрокаТЧ.Роль.Имя + """  );"
	КонецЦикла;
	
	Для каждого СтрокаТЧ Из Профиль.ВидыДоступа Цикл
		Текст = Текст + "
		|	ОписаниеПрофиля.ВидыДоступа.Добавить(      """ + СтрокаТЧ.ВидДоступа.Имя + """  );"
	КонецЦикла;

	Текст = Текст + "
	|	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	|";
	
	// Отформатируем текст.
	МаксимальнаяДлинаСтроки = 0;
	Для НомерСтроки = 1 По СтрЧислоСтрок(Текст) Цикл
		ТекущаяСтрока = СтрПолучитьСтроку(Текст, НомерСтроки);
		Если Прав(ТекущаяСтрока, 4) = "  );" И МаксимальнаяДлинаСтроки <= СтрДлина(ТекущаяСтрока) Тогда
			МаксимальнаяДлинаСтроки = СтрДлина(ТекущаяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	ФорматированныйТекст = "";
	Для НомерСтроки = 1 По СтрЧислоСтрок(Текст) Цикл
		ТекущаяСтрока = СтрПолучитьСтроку(Текст, НомерСтроки);
		Если Прав(ТекущаяСтрока, 4) = "  );" Тогда
			ФорматированныйТекст = ФорматированныйТекст + "
			|" + Сред(ТекущаяСтрока, 1, СтрДлина(ТекущаяСтрока) - 4);
			Для НомерПробела = 1 По МаксимальнаяДлинаСтроки - СтрДлина(ТекущаяСтрока) Цикл
				ФорматированныйТекст = ФорматированныйТекст + " ";
			КонецЦикла;
			ФорматированныйТекст = ФорматированныйТекст + "  );";
		Иначе
			ФорматированныйТекст = ФорматированныйТекст + "
			|" + ТекущаяСтрока;
		КонецЕсли;
	КонецЦикла;
	
	Возврат(ФорматированныйТекст);	
	
КонецФункции

#КонецОбласти

#КонецЕсли