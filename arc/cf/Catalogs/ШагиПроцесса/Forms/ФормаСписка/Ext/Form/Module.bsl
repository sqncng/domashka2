
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("ВидОбъекта", Версионирование.ВидВерсионируемогоОбъекта(Справочники.ШагиПроцесса.ПустаяСсылка()));
	
	УстановитьУсловноеОформлениеСписка();
	
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			ЗначениеОтбораПоПроцессу = Параметры.Отбор.Владелец;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если НЕ ЗначениеЗаполнено(ЗначениеОтбораПоПроцессу) Тогда
		Элементы.ГруппаВыполнить.Видимость = Ложь;
	КонецЕсли;	 
	
	Элементы.ГруппаВыполнить.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьТестирование");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененТекущийПроект" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьШаг(Элементы.Список.ТекущиеДанные.Ссылка, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьШаг(Элементы.Список.ТекущиеДанные.Ссылка, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускТестов(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗапускСценария",Истина);
	ПараметрыОткрытия.Вставить("СТекущегоШага",Ложь);
	ПараметрыОткрытия.Вставить("ЗагрузкаСценария",Ложь);
	ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ЗапускФреймворкаТестирования(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗапускСценария",Ложь);
	ПараметрыОткрытия.Вставить("СТекущегоШага",Ложь);
	ПараметрыОткрытия.Вставить("ЗагрузкаСценария",Истина);
	ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаБДДляЗапускаТестов(Команда)
	ПараметрыЗапускаТестов = ТестированиеКлиент.ПараметрыЗапускаТестов();
	ПараметрыЗапускаТестов.Вставить("Сценарий", ЗначениеОтбораПоПроцессу);
	ПараметрыЗапускаТестов.Вставить("ЗапускИзСценария",Истина);
	
	ОткрытьФорму("Обработка.НастройкиЛокальногоЗапускаСценариев.Форма", 
		ПараметрыЗапускаТестов, 
		ЭтаФорма,
		УникальныйИдентификатор,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТекстыСценариев(Команда)
	ПараметрыФормированияТекстаСценария = Новый Структура;
	ПараметрыФормированияТекстаСценария.Вставить("ПросмотрСценария",Истина);
	ПараметрыФормированияТекстаСценария.Вставить("ИсключитьСлужебныеСловаИзТекстаСценария",Ложь);
	ПараметрыФормированияТекстаСценария.Вставить("ЧтениеИзТекста",Ложь);
	
	ТекстСценария = ПолучитьТекстыСценариевСервер(ПараметрыФормированияТекстаСценария,ЗначениеОтбораПоПроцессу);
	
	ПараметрыСценария = Новый Структура;
	ПараметрыСценария.Вставить("ТекстСценария",ТекстСценария);
	ПараметрыСценария.Вставить("Сценарий",Неопределено);
	
	ОткрытьФорму("Справочник.НастройкиЗапускаСценариев.Форма.Сценарии",ПараметрыСценария,,Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ОткрытьФормуФреймворкаТестированияПродолжение(Результат,Адрес,ПомещаемыйФайл,ДополнительныеПараметры) Экспорт
	Если НЕ Результат Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			   НСтр("ru = 'Не получилось подключить файл %1.'"),ПомещаемыйФайл);
	КонецЕсли;	 
	
	#Если НЕ ВебКлиент Тогда
		
	ИмяОбработки = ТестированиеСлужебныйВызовСервера.ПодключитьВнешнююОбработкуСервер(Адрес);
		
	ПараметрыОткрытия = ДополнительныеПараметры;
	
	МассивРолей = Новый Массив;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДелатьРаскраску",Ложь);
	ДополнительныеПараметры.Вставить("СТекущегоШага",ПараметрыОткрытия.СТекущегоШага);
	
	ДополнительныеПараметры.Вставить("ПрисоединенныеФайлы",Неопределено);
	ДополнительныеПараметры.Вставить("ИсключитьСлужебныеСловаИзТекстаСценария",Истина);
	ТекстСценариев = ПолучитьОтформатированныеТекстыСценариевКлиент(Модифицированность,ДополнительныеПараметры,МассивРолей);
	Если ТекстСценариев = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	НастройкиБДДляЗапускаТестовИзСценария = НастройкиБДДляЗапускаТестовИзСценария();
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ТекстСценариев",ТекстСценариев);
	ПараметрыЗапуска.Вставить("МассивРолей",МассивРолей);
	ПараметрыЗапуска.Вставить("УникальныйИдентификатор",УникальныйИдентификатор);
	ПараметрыЗапуска.Вставить("ПараметрыОткрытия",ПараметрыОткрытия);
	ПараметрыЗапуска.Вставить("НастройкиБДДляЗапускаТестовИзСценария",НастройкиБДДляЗапускаТестовИзСценария);
	ПараметрыЗапуска.Вставить("ПрисоединенныеФайлы",ДополнительныеПараметры.ПрисоединенныеФайлы);
	ПараметрыЗапуска.Вставить("СТекущегоШага",ПараметрыОткрытия.СТекущегоШага);
	ПараметрыЗапуска.Вставить("ЗагрузкаСценария",ПараметрыОткрытия.ЗагрузкаСценария);
	ПараметрыЗапуска.Вставить("ЗапускСценария",ПараметрыОткрытия.ЗапускСценария);
	ПараметрыЗапуска.Вставить("ЭтоПроцесс",Истина);
	ПараметрыЗапуска.Вставить("ИмяОбработки",ИмяОбработки);
	
	ПараметрыЗапуска.Вставить("НадоСчитатьТекущийPIDTestManager",Ложь);
	
	ТестированиеКлиент.ОткрытьФормуФреймворкаТестирования(ПараметрыЗапуска);
	
	Если ПараметрыЗапуска.НадоСчитатьТекущийPIDTestManager Тогда
		КоличествоСекундПроверкиPIDTestManager = 0;
		Если НастройкиБДДляЗапускаТестовИзСценария.Свойство("ТаймаутЗапускаTestManager") Тогда
			Если ЗначениеЗаполнено(НастройкиБДДляЗапускаТестовИзСценария.ТаймаутЗапускаTestManager) Тогда
				КоличествоСекундПроверкиPIDTestManager = НастройкиБДДляЗапускаТестовИзСценария.ТаймаутЗапускаTestManager;
			КонецЕсли;	 
		КонецЕсли;	 
		Если Не ЗначениеЗаполнено(КоличествоСекундПроверкиPIDTestManager) Тогда
			КоличествоСекундПроверкиPIDTestManager = 60;
		КонецЕсли;	 
		
		ПрошлоСекундПроверкиPIDTestManager = 0;
	КонецЕсли;	 
	
	#КонецЕсли
КонецПроцедуры 

&НаСервере
// Перемещает шаг процесса относительно других шагов (меняет код)
// Параметры:
//  Шаг - ссылка на шаг, который нужно переместить
//  Направление - направление перемещения (-1 - вверх, иначе - вниз)
//
Процедура ПереместитьШаг(Шаг, Направление)
	
	Если Шаг = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивИзмененныхШагов = Новый Массив();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШагиПроцесса.Владелец,
	|	ШагиПроцесса.Родитель
	|ПОМЕСТИТЬ РеквизитыШага
	|ИЗ
	|	Справочник.ШагиПроцесса КАК ШагиПроцесса
	|ГДЕ
	|	ШагиПроцесса.Ссылка = &Шаг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШагиПроцесса.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШагиПроцесса КАК ШагиПроцесса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеквизитыШага КАК РеквизитыШага
	|		ПО (ШагиПроцесса.Родитель = РеквизитыШага.Родитель
	|				И ШагиПроцесса.Владелец = РеквизитыШага.Владелец)"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.Параметры.Вставить("Шаг", Шаг);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	КоличествоСтрок = Таблица.Количество();
	
	Если КоличествоСтрок >= 2 Тогда
		
		// строка должна быть найдена всегда
		ТекущийИндекс = Таблица.Индекс(Таблица.Найти(Шаг, "Ссылка"));
	
		Если Направление = -1 Тогда // Вверх
			НовыйИндекс = ТекущийИндекс - 1;
		Иначе
			// перемещение вниз
			НовыйИндекс = ТекущийИндекс + 1;
		КонецЕсли;
	
		Если НовыйИндекс >= 0
		   И НовыйИндекс <= КоличествоСтрок - 1 Тогда
	
			НачатьТранзакцию();
	
			Попытка
				ПервыйШаг = Таблица[ТекущийИндекс].Ссылка.ПолучитьОбъект();
				ПервыйШаг.Заблокировать();
				
				ВторойШаг = Таблица[НовыйИндекс].Ссылка.ПолучитьОбъект();
				ВторойШаг.Заблокировать();
			Исключение
				Сообщить(НСтр("ru = 'Перемещение не выполнено") + ИнформацияОбОшибке().Описание);
				ОтменитьТранзакцию();
				Возврат;
			КонецПопытки;
	
			ПервыйКод = ПервыйШаг.Код;
			ПервыйШаг.Код = ВторойШаг.Код;
			ВторойШаг.Код = ПервыйКод;
			
			ПервыйШаг.Записать();
			ПервыйШаг.Разблокировать();
			ВторойШаг.Записать();
			ВторойШаг.Разблокировать();
	
			ЗафиксироватьТранзакцию();
			
			МассивИзмененныхШагов.Добавить(ПервыйШаг.Ссылка);
			МассивИзмененныхШагов.Добавить(ВторойШаг.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	УсловноеОформлениеСписка = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеСписка.Элементы.Очистить();
	
	КонтрольИзменений.УстановитьУсловноеОформлениеСпискаСостояниеКонтроля(УсловноеОформлениеСписка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуФреймворкаТестирования(ПараметрыОткрытия) 
	#Если НЕ ВебКлиент Тогда
		
	ТестированиеКлиент.ПодключитьФреймВоркТестирования(ЭтаФорма.УникальныйИдентификатор,
	"ОткрытьФормуФреймворкаТестированияПродолжение",ЭтаФорма,ПараметрыОткрытия);	
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОтформатированныеТекстыСценариевКлиент(Модифицированность,ДополнительныеПараметры,МассивРолей)
	Если Не ДополнительныеПараметры.Свойство("ДелатьРаскраску") Тогда
		ДополнительныеПараметры.Вставить("ДелатьРаскраску",Истина); 
	КонецЕсли;	 
	ДополнительныеПараметры.Вставить("ИсключитьСлужебныеСловаИзТекстаСценария",Истина);
	ДополнительныеПараметры.Вставить("ЧтениеИзТекста",Ложь);
	ТекстСценария = ПолучитьОтформатированныеТекстыСценариевСервер(ДополнительныеПараметры,МассивРолей,ЗначениеОтбораПоПроцессу);
	Возврат ТекстСценария;
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиБДДляЗапускаТестовИзСценария()
	Возврат Тестирование.НастройкиБДДляЗапускаТестовИзСценария();
КонецФункции	

&НаСервере
Функция ПолучитьОтформатированныеТекстыСценариевСервер(ДополнительныеПараметры,МассивРолей,Ссылка)
	Возврат Тестирование.ОтформатированныеТекстыСценариевПроцесса(ДополнительныеПараметры,МассивРолей,Ссылка);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстыСценариевСервер(ПараметрыФормированияТекстаСценария,Ссылка)
	Возврат Тестирование.ТекстыСценариевПроцесса(ПараметрыФормированияТекстаСценария,Ссылка); 
КонецФункции	 

#КонецОбласти