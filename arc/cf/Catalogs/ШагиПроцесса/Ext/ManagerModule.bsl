#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	
	НеРедактируемыеРеквизиты.Добавить("Владелец");
	НеРедактируемыеРеквизиты.Добавить("ВложенныйПроцесс");
	НеРедактируемыеРеквизиты.Добавить("ПолныйКод");
	НеРедактируемыеРеквизиты.Добавить("ТипШага");
	НеРедактируемыеРеквизиты.Добавить("ХранилищеЗаметок");
	НеРедактируемыеРеквизиты.Добавить("ХранилищеОписания");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

// Функция определяет реквизиты шага процесса.
//
// Параметры:
//  ШагПроцесса - СправочникСсылка.ШагиПроцесса - Ссылка на шаг процесса
//
// Возвращаемое значение:
//	Структура - структура, содержащая реквизиты шага процесса
//
Функция ПолучитьРеквизитыШагаПроцесса(ШагПроцесса) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШагиПроцесса.Наименование КАК Наименование,
	|	ШагиПроцесса.Описание КАК Описание
	|ИЗ
	|	Справочник.ШагиПроцесса КАК ШагиПроцесса
	|ГДЕ
	|	ШагиПроцесса.Ссылка = &ШагПроцесса
	|");
	
	Запрос.УстановитьПараметр("ШагПроцесса", ШагПроцесса);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Наименование = Выборка.Наименование;
		Описание = Выборка.Описание;
	Иначе
		Наименование = "";
		Описание = "";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Наименование, Описание",
		Наименование,
		Описание
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

Функция СформироватьПечатныеФормы(МассивОбъектов, СУчетомПриемника=Ложь, ДанныеСоответствия=Неопределено) Экспорт
	
	ПечатныеФормы = Новый Соответствие;
	
	ТекстЗапроса = ТекстЗапросаДляФормированияОписания();
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Новый ТабличныйДокумент;
		
		ОписаниеОбъектов.НастроитьОписаниеОбъекта(Документ);
		Документ.НачатьАвтогруппировкуСтрок();
		
		СформироватьОписаниеОбъекта(Выборка, Документ);
		
	    Документ.ЗакончитьАвтогруппировкуСтрок();
		
		СтруктураПечатныхФорм = Новый Структура;
		СтруктураПечатныхФорм.Вставить("Описание", Документ);
		
		ПечатныеФормы.Вставить(Выборка.Ссылка, СтруктураПечатныхФорм);
		
	КонецЦикла;
	
	Возврат ПечатныеФормы;
	
КонецФункции

// Выполняет печать описаний и схем переданных объектов
//
// Параметры:
//  МассивОбъектов - массив объектов, подлежащих печати
//
Процедура Печать(МассивОбъектов, ПечатныеФормы) Экспорт
	
	ПечатныеФормы = СформироватьПечатныеФормы(МассивОбъектов);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец.Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДляФормированияОписания()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШагиПроцесса.Ссылка КАК Ссылка,
	|	ШагиПроцесса.ПометкаУдаления КАК ПометкаУдаления,
	|	ШагиПроцесса.Владелец КАК Владелец,
	|	ШагиПроцесса.Родитель КАК Родитель,
	|	ШагиПроцесса.ЭтоГруппа КАК ЭтоГруппа,
	|	ШагиПроцесса.Код КАК Код,
	|	ШагиПроцесса.Наименование КАК Наименование,
	|	ШагиПроцесса.ПолныйКод КАК ПолныйКод,
	|	ШагиПроцесса.Описание КАК Описание,
	|	ШагиПроцесса.Заметки КАК Заметки,
	|	ШагиПроцесса.ВложенныйПроцесс КАК ВложенныйПроцесс,
	|	ШагиПроцесса.Исполнитель КАК Исполнитель,
	|	ШагиПроцесса.ТребованияКСистеме КАК ТребованияКСистеме,
	|	ШагиПроцесса.ТипШага КАК ТипШага,
	|	ШагиПроцесса.СценарийРаботыПользователя КАК СценарийРаботыПользователя,
	|	ШагиПроцесса.ФункцияСистемы КАК ФункцияСистемы,
	|	ШагиПроцесса.ПараметрыСценария.(
	|		Имя КАК Имя,
	|		ЗначениеПоСсылке КАК ЗначениеПоСсылке,
	|		ЗначениеПроизвольное КАК ЗначениеПроизвольное,
	|		ИмяПараметраПоСсылке КАК ИмяПараметраПоСсылке,
	|		ИсходящийПараметр КАК ИсходящийПараметр,
	|		ТипПараметра КАК ТипПараметра,
	|		ШагПроцессаЗначениеПоСсылке КАК ШагПроцессаЗначениеПоСсылке
	|	) КАК ПараметрыСценария
	|ИЗ
	|	Справочник.ШагиПроцесса КАК ШагиПроцесса
	|ГДЕ
	|	ШагиПроцесса.Ссылка В(&МассивОбъектов)"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОписаниеОбъекта(Выборка, Документ)
	
	Если Выборка.ЭтоГруппа Тогда
		ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Группа шагов процесса'"), Выборка.Ссылка, Выборка.ПолныйКод, Документ);
		Возврат;
	Иначе
		ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Шаг процесса'"), Выборка.Ссылка, Выборка.ПолныйКод, Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиЗаголовокТекста("", , Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Исполнитель: '") + Выборка.Исполнитель, 1, Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Описание'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.Описание, , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Параметры шага процесса'"), Документ);
	ПараметрыСценария = Выборка.ПараметрыСценария.Выгрузить();
	Для Каждого СтрокаПараметрыСценария Из ПараметрыСценария Цикл
		ОписаниеОбъектов.ВывестиЗаголовокПодраздела(НСтр("ru='Имя: '") + СтрокаПараметрыСценария.Имя, , 0, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Значение по ссылке: '")
	  	    + СтрокаПараметрыСценария.ЗначениеПоСсылке, 1, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Значение произвольное: '")
		    + СтрокаПараметрыСценария.ЗначениеПроизвольное, 1, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Тип: '")
		    + СтрокаПараметрыСценария.ТипПараметра, 1, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Исходящий: '")
		    + СтрокаПараметрыСценария.ИсходящийПараметр, 1, Документ);
	КонецЦикла;	 
	
	Если ЗначениеЗаполнено(Выборка.ВложенныйПроцесс) Тогда
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Вложенный процесс'"), Документ);
		ОписаниеОбъектов.ВывестиЗаголовокПодраздела(Выборка.ВложенныйПроцесс, Выборка.ВложенныйПроцесс, 0, Документ);
	Иначе
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Требования к системе'"), Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.ТребованияКСистеме, , Документ);
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Заметки'"), Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.Заметки, , Документ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли