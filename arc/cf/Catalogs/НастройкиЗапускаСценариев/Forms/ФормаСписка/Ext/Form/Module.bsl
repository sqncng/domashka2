#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрОтветственный(Список, ОтветственныйЗаСценарий);
	
	Если Параметры.Свойство("ОтборСценарий") Тогда
		ОтборПоГруппе = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сценарий");
		ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоГруппе.ПравоеЗначение = Параметры.ОтборСценарий;
	Иначе
		УстановитьОтборПоПроекту();
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Возврат;
	КонецЕсли;	
	
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		НашлиОтборПоФункции = Ложь;
		Для Каждого ЭлемтОтбора Из Список.Отбор.Элементы Цикл
			Если НЕ ЭлемтОтбора.Использование Тогда
				Продолжить;
			КонецЕсли;	 
			          
			Если ТипЗнч(ЭлемтОтбора.ПравоеЗначение) = Тип("СправочникСсылка.СценарииРаботыПользователей") Тогда
				Отказ = Истина;
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("ЗначениеОтбораПоСценарию",ЭлемтОтбора.ПравоеЗначение);
				Если Группа Тогда
					ПараметрыФормы.Вставить("ЭтоГруппа",Истина);
					ОткрытьФорму("Справочник.НастройкиЗапускаСценариев.ФормаГруппы",ПараметрыФормы,ЭтаФорма);
				Иначе	
					ОткрытьФорму("Справочник.НастройкиЗапускаСценариев.ФормаОбъекта",ПараметрыФормы,ЭтаФорма);
				КонецЕсли;	 
				
				Возврат;
			КонецЕсли;	 
			
		КонецЦикла;	
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененТекущийПроект" Тогда
		УстановитьОтборПоПроекту();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйЗаСценарийПриИзменении(Элемент)
	УстановитьПараметрОтветственный(Список, ОтветственныйЗаСценарий);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	УстановитьПараметрОтветственный(Список, ОтветственныйЗаСценарий);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьСценарии(Команда)
	Строки = Элементы.Список.ВыделенныеСтроки;
	
	Если Строки = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокТестов",НастройкиЗапускаИзВыделенныхСтрок(Строки));
	ПараметрыФормы.Вставить("ТипВыгрузки","СценарииПользователей");
	ОткрытьФорму("Обработка.ВыгрузкаНастроекЗапускаСценариевТестированияИПроцессов.Форма.Форма",ПараметрыФормы,,"КлючУникальностиВыгрузкаТестов");
	Оповестить("ВыгрузкаНастроекТестированияСценариев",ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоПроекту()
	Проект = ПараметрыСеанса.ТекущийПроект;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец.Владелец",
		Проект, ВидСравненияКомпоновкиДанных.Равно,,ЗначениеЗаполнено(Проект));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрОтветственный(Список, ОтветственныйЗаСценарий)
	Список.Параметры.УстановитьЗначениеПараметра("ОтветственныйЗаСценарий", ОтветственныйЗаСценарий);
КонецПроцедуры

&НаКлиенте
Функция НастройкиЗапускаИзВыделенныхСтрок(Массив)
	Результат = Новый Массив;
	Для Каждого Элем Из Массив Цикл
		Если ТипЗнч(Элем) = Тип("СправочникСсылка.НастройкиЗапускаСценариев") Тогда
			Результат.Добавить(Элем);
		КонецЕсли;	
	КонецЦикла;	
	Возврат Результат;
КонецФункции

#КонецОбласти