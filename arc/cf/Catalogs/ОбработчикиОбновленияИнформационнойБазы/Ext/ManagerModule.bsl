#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Выполняет формирование печатных форм переданных объектов
//
// Параметры:
//	МассивОбъектов - Массив - массив объектов , для которых требуется сформировать формы
//
// Возвращаемое значение:
//	Массив - массив, элементами которогоя являются табличные документы печатных форм.
//
Функция СформироватьПечатныеФормы(МассивОбъектов, СУчетомПриемника=Ложь, ДанныеСоответствия=Неопределено) Экспорт
	
	ПечатныеФормы = Новый Соответствие;
	
	ТекстЗапроса = ТекстЗапросаДляФормированияОписания();
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатовЗапроса[0].Выбрать();
	
	ТаблицаЗаписейРегистра = МассивРезультатовЗапроса[1].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Новый ТабличныйДокумент;
		
		ОписаниеОбъектов.НастроитьОписаниеОбъекта(Документ);
		Документ.НачатьАвтогруппировкуСтрок();
		
		ТаблицаЗаписейРегистраПоОбработчику = ТаблицаЗаписейРегистра.Скопировать(Новый Массив);
		
		Для Каждого СтрокаТаблицы из ТаблицаЗаписейРегистра Цикл
			Если СтрокаТаблицы.Обработчик1 = Выборка.Ссылка
				ИЛИ СтрокаТаблицы.Обработчик2 = Выборка.Ссылка Тогда
				
				НоваяСтрокаТаблицы = ТаблицаЗаписейРегистраПоОбработчику.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		
		СформироватьОписаниеОбъекта(Выборка, ТаблицаЗаписейРегистраПоОбработчику, Документ);
		
		Документ.ЗакончитьАвтогруппировкуСтрок();
		
		СтруктураПечатныхФорм = Новый Структура;
		СтруктураПечатныхФорм.Вставить("Описание", Документ);
		
		ПечатныеФормы.Вставить(Выборка.Ссылка, СтруктураПечатныхФорм);
		
	КонецЦикла;
	
	Возврат ПечатныеФормы;
	
КонецФункции

// Выполняет печать описаний и схем переданных объектов
//
// Параметры:
//  МассивОбъектов - массив объектов, подлежащих печати
//
Процедура Печать(МассивОбъектов, ПечатныеФормы) Экспорт
	
	ПечатныеФормы = СформироватьПечатныеФормы(МассивОбъектов);
	
КонецПроцедуры

Процедура ИзменитьОтветственногоВОбработчикахОбновления(МенеджерВТ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТТекущиеОбработчики.Обработчик КАК Обработчик,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбработчикиВДругихПроектах.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|				ТОГДА ЕСТЬNULL(ОбработчикиВДругихПроектах.Ссылка.Ветка.ДатаПомещения, ДАТАВРЕМЯ(1, 1, 1))
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаЗаливки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбработчикиВДругихПроектах.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ ЕСТЬNULL(ОбработчикиВДругихПроектах.Ссылка.ДатаЗавершения, ДАТАВРЕМЯ(1, 1, 1))
	|		КОНЕЦ) КАК ДатаЗавершения,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбработчикиВДругихОшибках.Ссылка.Исправлена
	|				ТОГДА ЕСТЬNULL(ОбработчикиВДругихОшибках.Ссылка.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1))
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаИсправления
	|ПОМЕСТИТЬ МаксимальныеДатыПоОбработчикам
	|ИЗ
	|	ВТТекущиеОбработчики КАК ВТТекущиеОбработчики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТехническиеПроекты.ОбработчикиОбновления КАК ОбработчикиВДругихПроектах
	|		ПО (ОбработчикиВДругихПроектах.Гиперссылка = ВТТекущиеОбработчики.Обработчик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ошибки.ОбработчикиОбновления КАК ОбработчикиВДругихОшибках
	|		ПО (ОбработчикиВДругихОшибках.ОбработчикОбновления = ВТТекущиеОбработчики.Обработчик)
	|ГДЕ
	|	НЕ ВТТекущиеОбработчики.Обработчик.ОтветственныйУказанВручную
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТекущиеОбработчики.Обработчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыПоОбработчикам.Обработчик КАК Обработчик,
	|	МАКСИМУМ(ЕСТЬNULL(ТЧОбработчикиОбновления.Ссылка, ТЧОшибкиОбработчикиОбновления.Ссылка)) КАК ТехПроектОшибка
	|ПОМЕСТИТЬ ПоследниеТехпроектыПоОбработчикам
	|ИЗ
	|	МаксимальныеДатыПоОбработчикам КАК МаксимальныеДатыПоОбработчикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТехническиеПроекты.ОбработчикиОбновления КАК ТЧОбработчикиОбновления
	|		ПО (МаксимальныеДатыПоОбработчикам.ДатаЗаливки > МаксимальныеДатыПоОбработчикам.ДатаИсправления
	|				ИЛИ МаксимальныеДатыПоОбработчикам.ДатаЗавершения > МаксимальныеДатыПоОбработчикам.ДатаИсправления)
	|			И МаксимальныеДатыПоОбработчикам.Обработчик = ТЧОбработчикиОбновления.Гиперссылка
	|			И (ВЫБОР
	|				КОГДА МаксимальныеДатыПоОбработчикам.ДатаЗавершения > МаксимальныеДатыПоОбработчикам.ДатаЗаливки
	|					ТОГДА ВЫБОР
	|							КОГДА ТЧОбработчикиОбновления.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|								ТОГДА ЛОЖЬ
	|							ИНАЧЕ ТЧОбработчикиОбновления.Ссылка.ДатаЗавершения = МаксимальныеДатыПоОбработчикам.ДатаЗавершения
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТЧОбработчикиОбновления.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|							ТОГДА ТЧОбработчикиОбновления.Ссылка.Ветка.ДатаПомещения = МаксимальныеДатыПоОбработчикам.ДатаЗаливки
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ошибки.ОбработчикиОбновления КАК ТЧОшибкиОбработчикиОбновления
	|		ПО (МаксимальныеДатыПоОбработчикам.ДатаЗаливки < МаксимальныеДатыПоОбработчикам.ДатаИсправления)
	|			И (МаксимальныеДатыПоОбработчикам.ДатаЗавершения < МаксимальныеДатыПоОбработчикам.ДатаИсправления)
	|			И МаксимальныеДатыПоОбработчикам.Обработчик = ТЧОшибкиОбработчикиОбновления.ОбработчикОбновления
	|			И (ТЧОшибкиОбработчикиОбновления.Ссылка.Исправлена)
	|			И (ТЧОшибкиОбработчикиОбновления.Ссылка.ДатаИсправления = МаксимальныеДатыПоОбработчикам.ДатаИсправления)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыПоОбработчикам.Обработчик
	|
	|ИМЕЮЩИЕ
	|	НЕ МАКСИМУМ(ЕСТЬNULL(ТЧОбработчикиОбновления.Ссылка, ТЧОшибкиОбработчикиОбновления.Ссылка)) ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеТехпроектыПоОбработчикам.Обработчик КАК Обработчик,
	|	ЕСТЬNULL(ТЧОбработчикиОбновления.Ответственный, ТЧОшибкиОбработчикиОбновления.Ответственный) КАК Ответственный
	|ИЗ
	|	ПоследниеТехпроектыПоОбработчикам КАК ПоследниеТехпроектыПоОбработчикам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТехническиеПроекты.ОбработчикиОбновления КАК ТЧОбработчикиОбновления
	|		ПО ПоследниеТехпроектыПоОбработчикам.Обработчик = ТЧОбработчикиОбновления.Гиперссылка
	|			И ПоследниеТехпроектыПоОбработчикам.ТехПроектОшибка = ТЧОбработчикиОбновления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ошибки.ОбработчикиОбновления КАК ТЧОшибкиОбработчикиОбновления
	|		ПО ПоследниеТехпроектыПоОбработчикам.Обработчик = ТЧОшибкиОбработчикиОбновления.ОбработчикОбновления
	|			И ПоследниеТехпроектыПоОбработчикам.ТехПроектОшибка = ТЧОшибкиОбработчикиОбновления.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ТЧОбработчикиОбновления.Ответственный, ТЧОшибкиОбработчикиОбновления.Ответственный) <> ВЫРАЗИТЬ(ПоследниеТехпроектыПоОбработчикам.Обработчик КАК Справочник.ОбработчикиОбновленияИнформационнойБазы).Ответственный";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ответственный) Тогда
			Продолжить;	
		КонецЕсли;
				
		СправочникОбъект = Выборка.Обработчик.ПолучитьОбъект();
		СправочникОбъект.Ответственный = Выборка.Ответственный;
		СправочникОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)
	|	И ЧтениеСпискаРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДляФормированияОписания()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбработчикиОбновленияИнформационнойБазы.Ссылка,
	|	ОбработчикиОбновленияИнформационнойБазы.ПометкаУдаления,
	|	ОбработчикиОбновленияИнформационнойБазы.Владелец,
	|	ОбработчикиОбновленияИнформационнойБазы.Наименование КАК Наименование,
	|	ОбработчикиОбновленияИнформационнойБазы.Процедура,
	|	ОбработчикиОбновленияИнформационнойБазы.Ответственный,
	|	ОбработчикиОбновленияИнформационнойБазы.РежимВыполнения,
	|	ОбработчикиОбновленияИнформационнойБазы.Библиотека,
	|	ОбработчикиОбновленияИнформационнойБазы.КомментарийЗагружено,
	|	ОбработчикиОбновленияИнформационнойБазы.ЗаполнениеИнформацииОбИзменяемыхИЧитаемыхДанныхЗавершено,
	|	ОбработчикиОбновленияИнформационнойБазы.ВключенВПодсистемуТекущегоПроектаВыполняетсяПараллельно,
	|	ОбработчикиОбновленияИнформационнойБазы.Версия,
	|	ОбработчикиОбновленияИнформационнойБазы.СборкаНомер,
	|	ОбработчикиОбновленияИнформационнойБазы.КомментарийУстановлено,
	|	ОбработчикиОбновленияИнформационнойБазы.МонопольныйРежимОправдан,
	|	ОбработчикиОбновленияИнформационнойБазы.ПричинаИспользованияМонопольногоРежима,
	|	ОбработчикиОбновленияИнформационнойБазы.СборкаЧислом,
	|	ОбработчикиОбновленияИнформационнойБазы.ПроцедураЗаполненияДанныхОбновления,
	|	ОбработчикиОбновленияИнформационнойБазы.ОчередьОтложеннойОбработкиЗагружено,
	|	ОбработчикиОбновленияИнформационнойБазы.ОчередьОтложеннойОбработкиУстановлено,
	|	ОбработчикиОбновленияИнформационнойБазы.ДобавляютсяНовыеСсылки,
	|	ОбработчикиОбновленияИнформационнойБазы.ЗапускатьТолькоВГлавномУзлеЗагружено,
	|	ОбработчикиОбновленияИнформационнойБазы.ЗапускатьТолькоВГлавномУзлеУстановлено,
	|	ОбработчикиОбновленияИнформационнойБазы.ЗапускатьИВПодчиненномУзлеРИБСФильтрамиЗагружено,
	|	ОбработчикиОбновленияИнформационнойБазы.ЗапускатьИВПодчиненномУзлеРИБСФильтрамиУстановлено,
	|	ОбработчикиОбновленияИнформационнойБазы.КомментарийСлужебный,
	|	ОбработчикиОбновленияИнформационнойБазы.ПроцедураПроверки,
	|	ОбработчикиОбновленияИнформационнойБазы.НачальноеЗаполнение,
	|	ОбработчикиОбновленияИнформационнойБазы.ЧитаемыеДанные.(
	|		НомерСтроки,
	|		ОбъектМетаданных,
	|		БлокироватьИнтерфейс
	|	),
	|	ОбработчикиОбновленияИнформационнойБазы.ИзменяемыеДанные.(
	|		НомерСтроки,
	|		ОбъектМетаданных,
	|		ДобавляютсяНовыеСсылки,
	|		БлокироватьИнтерфейс
	|	),
	|	ОбработчикиОбновленияИнформационнойБазы.ПрочиеБлокируемыеОбъекты.(
	|		НомерСтроки,
	|		ОбъектМетаданных
	|	)
	|ИЗ
	|	Справочник.ОбработчикиОбновленияИнформационнойБазы КАК ОбработчикиОбновленияИнформационнойБазы
	|ГДЕ
	|	ОбработчикиОбновленияИнформационнойБазы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПриоритетыВыполненияОбработчиковОбновления.Обработчик1,
	|	ПриоритетыВыполненияОбработчиковОбновления.Обработчик2,
	|	ПриоритетыВыполненияОбработчиковОбновления.ПорядокПомещенияВОчередь,
	|	ПриоритетыВыполненияОбработчиковОбновления.Комментарий,
	|	ПриоритетыВыполненияОбработчиковОбновления.ПричинаПовторнойЗаписи,
	|	ПриоритетыВыполненияОбработчиковОбновления.ПовторнаяЗаписьОбъекта,
	|	ПриоритетыВыполненияОбработчиковОбновления.ПорядокОтличаетсяОтДефолтного,
	|	ПриоритетыВыполненияОбработчиковОбновления.ЗаписываетсяВФорме
	|ИЗ
	|	РегистрСведений.ПриоритетыВыполненияОбработчиковОбновления КАК ПриоритетыВыполненияОбработчиковОбновления
	|ГДЕ
	|	ПриоритетыВыполненияОбработчиковОбновления.Обработчик1 В(&МассивОбъектов)
	|	ИЛИ ПриоритетыВыполненияОбработчиковОбновления.Обработчик2 В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетыВыполненияОбработчиковОбновления.Обработчик1.Наименование,
	|	ПриоритетыВыполненияОбработчиковОбновления.Обработчик2.Наименование"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОписаниеОбъекта(Выборка, ТаблицаЗаписейРегистра, Документ)
	
	ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Обработчик'"), Выборка.Ссылка,, Документ);
	ОписаниеОбъектов.ВывестиЗаголовокТекста("", , Документ);
	
	Если Выборка.ПометкаУдаления Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Обработчик помечен на удаление'"), 1, Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Проект: '") + Выборка.Владелец, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Ответственный: '") + Выборка.Ответственный, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Процедура: '") + Выборка.Процедура, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Режим выполнения: '") + Выборка.РежимВыполнения, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Библиотека: '") + Выборка.Библиотека, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Версия: '") + Выборка.Версия, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Номер сборки: '") + Выборка.СборкаНомер, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Включен в подсистему проекта или в БСП, поддерживающую режим параллельного обновления отложенных обработчиков обновления: '") +
		Выборка.ВключенВПодсистемуТекущегоПроектаВыполняетсяПараллельно, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Комментарий загружено: '") +
		Выборка.КомментарийЗагружено, 1, Документ);
		
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Комментарий установлено: '")
		+ Выборка.КомментарийУстановлено, 1, Документ);
		
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Комментарий служебный: '")
		+ Выборка.КомментарийСлужебный, 1, Документ);
	
	Если Выборка.ЗаполнениеИнформацииОбИзменяемыхИЧитаемыхДанныхЗавершено Тогда
		ТекстЗаголовка = НСтр("ru='Заполнение информации об изменяемых и читаемых данных завершено'");
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(ТекстЗаголовка, 1, Документ);
	КонецЕсли;
	
	Если Выборка.МонопольныйРежимОправдан Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Монопольный режим оправдан'"), 1, Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Причина использования монопольного режима: '")
		+ Выборка.ПричинаИспользованияМонопольногоРежима, 1, Документ);
		
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Процедура заполнения данных обновления: '")
		+ Выборка.ПроцедураЗаполненияДанныхОбновления, 1, Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Процедура проверки: '") + Выборка.ПроцедураПроверки, 1, Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Очередь отложенной обработки загружено: '")
		+ Выборка.ОчередьОтложеннойОбработкиЗагружено, 1, Документ);
		
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Очередь отложенной обработки установлено: '")
		+ Выборка.ОчередьОтложеннойОбработкиУстановлено, 1, Документ);
	
	Если Выборка.ДобавляютсяНовыеСсылки Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Добавляются новые ссылки'"), 1, Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Запускать только в главном узле загружено: '")
		+ Выборка.ЗапускатьТолькоВГлавномУзлеЗагружено, 1, Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Запускать только в главном узле установлено: '")
		+ Выборка.ЗапускатьТолькоВГлавномУзлеУстановлено, 1, Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Запускать и в подчиненном узле РИБ загружено: '")
	 	+ Выборка.ЗапускатьИВПодчиненномУзлеРИБСФильтрамиЗагружено, 1, Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Запускать и в подчиненном узле РИБ установлено: '")
	 	+ Выборка.ЗапускатьИВПодчиненномУзлеРИБСФильтрамиУстановлено, 1, Документ);
		
	Если Выборка.НачальноеЗаполнение Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Начальное заполнение'"), 1, Документ);
	КонецЕсли;
	
	// Табличные части
	
	ТаблицаЧитаемыхДанных = Выборка.Читаемыеданные.Выгрузить();
	ТаблицаЧитаемыхДанных.Сортировать("НомерСтроки");
	
	Если ТаблицаЧитаемыхДанных.Количество()>0 Тогда
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Читаемые данные'"), Документ);
		
		Для Каждого СтрокаТаблицы из ТаблицаЧитаемыхДанных Цикл
			
			ЗаголовокРаздела = НСтр("ru='Строка %НомерСтроки%'");
			ЗаголовокРаздела = СтрЗаменить(ЗаголовокРаздела, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ОписаниеОбъектов.ВывестиЗаголовокРаздела(ЗаголовокРаздела, Документ);
			
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Объект метаданных: '") + СтрокаТаблицы.ОбъектМетаданных, 1, Документ);
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Блокировать интерфейс: '") + СтрокаТаблицы.БлокироватьИнтерфейс, 1, Документ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаИзменяемыхДанных = Выборка.Изменяемыеданные.Выгрузить();
	ТаблицаИзменяемыхДанных.Сортировать("НомерСтроки");
	
	Если ТаблицаИзменяемыхДанных.Количество()>0 Тогда
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Изменяемые данные'"), Документ);
		
		Для Каждого СтрокаТаблицы из ТаблицаИзменяемыхДанных Цикл
			
			ЗаголовокРаздела = НСтр("ru='Строка %НомерСтроки%'");
			ЗаголовокРаздела = СтрЗаменить(ЗаголовокРаздела, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ОписаниеОбъектов.ВывестиЗаголовокРаздела(ЗаголовокРаздела, Документ);
			
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Объект метаданных: '") + СтрокаТаблицы.ОбъектМетаданных, 1, Документ);
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Блокировать интерфейс: '") + СтрокаТаблицы.БлокироватьИнтерфейс, 1, Документ);
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Добавляются новые ссылки: '") + СтрокаТаблицы.ДобавляютсяНовыеСсылки, 1, Документ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаПрочихБлокируюзихОбъектов = Выборка.ПрочиеБлокируемыеОбъекты.Выгрузить();
	ТаблицаПрочихБлокируюзихОбъектов.Сортировать("НомерСтроки");
	
	Если ТаблицаПрочихБлокируюзихОбъектов.Количество()>0 Тогда
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Прочие блокируемые объекты'"), Документ);
		
		Для Каждого СтрокаТаблицы из ТаблицаПрочихБлокируюзихОбъектов Цикл
			
			ЗаголовокРаздела = НСтр("ru='Строка %НомерСтроки%'");
			ЗаголовокРаздела = СтрЗаменить(ЗаголовокРаздела, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ОписаниеОбъектов.ВывестиЗаголовокРаздела(ЗаголовокРаздела, Документ);
			
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Объект метаданных: '") + СтрокаТаблицы.ОбъектМетаданных, 1, Документ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Инфоомация из связанных регистров	
	Если ТаблицаЗаписейРегистра.Количество()>0 Тогда
	
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Приоритеты выполнения обработчиков обновления'"), Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам("", , Документ);
		
		Для Каждого СтрокаТаблицы из ТаблицаЗаписейРегистра Цикл
			
			ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Обработчик 1: '") + СтрокаТаблицы.Обработчик1, Документ);
			
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Обработчик 2: '") + СтрокаТаблицы.Обработчик2, 1, Документ);
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Порядок помещения в очередь: '")
				+ СтрокаТаблицы.ПорядокПомещенияВОчередь, 1, Документ);
				
			Если СтрокаТаблицы.ПорядокОтличаетсяОтДефолтного Тогда
				ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Порядок отличается от дефолтного'"), 1, Документ);
			КонецЕсли;
			
			Если СтрокаТаблицы.ПовторнаяЗаписьОбъекта Тогда
				ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Повторная запись объекта'"), 1, Документ);
			КонецЕсли;
			
			Если СтрокаТаблицы.ЗаписываетсяВФорме Тогда
				ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Записывается в форме'"), 1, Документ);
			КонецЕсли;
			
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Причина повторной записи: '")
				+ СтрокаТаблицы.ПричинаПовторнойЗаписи, 1, Документ);
				
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Комментарий: '")
				+ СтрокаТаблицы.Комментарий, 1, Документ);
			
		КонецЦикла
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли