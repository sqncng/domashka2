
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьРасписаниеРегламентногоЗадания();
	НастроитьЭлементыФормы(ЭтотОбъект);
	
	Если Не ПустаяСтрока(Параметры.ТекущийЭлемент)
		И Элементы.Найти(Параметры.ТекущийЭлемент) <> Неопределено Тогда
		
		ТекущийЭлемент = Элементы[Параметры.ТекущийЭлемент];
		
	КонецЕсли;
	
	ОпределитьВозможностьРедактирования();
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ДатаСледующегоКонтроля", Объект.ДатаСледующегоКонтроля);
	ПараметрыОповещения.Вставить("ВариантВеденияСписка",  Объект.ВариантВеденияСписка);
	
	Оповестить("Запись_СписокКонтроля", ПараметрыОповещения, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьРасписаниеРегламентногоЗадания();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияНадписьДействуетОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОтключитьИспользование" Тогда
		
		Объект.Действует = Ложь;
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ВключитьИспользование" Тогда
		
		Объект.Действует = Истина;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	СформироватьНадписьДействует(ЭтотОбъект);
	СформироватьПодсказкуНапоминать(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыВеденияДатаКонтроляНаСписокПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыВеденияДатаКонтроляДляОбъектаПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НапоминатьОКонтролеПриИзменении(Элемент)
	
	СформироватьПодсказкуНапоминать(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПодсказкуНапоминать(Форма)
	
	ТекстПояснения = НСтр("ru = 'Напоминать об объектах, ожидающих контроля, сообщениями системы взаимодействия.'");
	
	ТекстРасписание = "";
	Если Форма.Объект.НапоминатьОКонтроле
		И Форма.Объект.Действует
		И Не Форма.Объект.ПометкаУдаления Тогда
		
		Если ПустаяСтрока(Форма.РасписаниеСтрокой) Тогда
			РасписаниеСтрокой = НСтр("ru = 'Настроить расписание'");
		Иначе
			РасписаниеСтрокой = Форма.РасписаниеСтрокой;
		КонецЕсли;
		
		ТекстРасписание = Новый ФорматированнаяСтрока(РасписаниеСтрокой,,,,"НастроитьРасписание");
		
	КонецЕсли;
	
	Форма.Элементы.НапоминатьОКонтроле.РасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(ТекстПояснения, " ", ТекстРасписание);
	
КонецПроцедуры

&НаКлиенте
Процедура НапоминатьОКонтролеРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "НастроитьРасписание" Тогда
		
		ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеЗаданияНамоминать);
		ОповещениеОбОкончанииНастройкиРасписания = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", 
		                                           ЭтотОбъект, 
		                                           Новый Структура("ДиалогРасписания", ДиалогРасписания));
		
		ДиалогРасписания.Показать(ОповещениеОбОкончанииНастройкиРасписания);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЭлементыФормы(Форма)
	
	СформироватьНадписьДействует(Форма);
	СформироватьПодсказкуНапоминать(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНадписьДействует(Форма)
	
	ШаблонНадписи = "<b>%1</b> <a href = ""%2"">%3</a>";
	
	Если Форма.Объект.Действует Тогда
		
		СтрокаДействует      = НСтр("ru = 'Действует'");
		ИмяКоманды           = "ОтключитьИспользование";
		ПредставлениеКоманды = НСтр("ru = 'отключить'");
		
	Иначе
		
		СтрокаДействует      = НСтр("ru = 'Не действует'");
		ИмяКоманды           = "ВключитьИспользование";
		ПредставлениеКоманды = НСтр("ru = 'включить'");
		
	КонецЕсли;
	
	СтрокаПоШаблону = СтрШаблон(ШаблонНадписи, СтрокаДействует,ИмяКоманды, ПредставлениеКоманды);
	
	Форма.Элементы.ДекорацияНадписьДействует.Заголовок = СтроковыеФункцииКлиентСервер.ФорматированнаяСтрока(СтрокаПоШаблону);
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьВозможностьРедактирования()
	
	Если Объект.Ссылка.Пустая() Тогда
		РедактированиеДоступно = Истина;
	Иначе
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		РедактированиеДоступно = (Объект.ВладелецСписка = Пользователи.ТекущийПользователь()) 
		                         Или Пользователи.ЭтоПолноправныйПользователь(ТекущийПользователь, Истина, Истина);
		
	КонецЕсли;
	
	ТолькоПросмотр = Не РедактированиеДоступно;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)
	
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементыФормы.ДатаСледующегоКонтроля.Доступность = 
		(ОбъектыНаКонтролеКлиентСервер.ВариантВеденияСпискаКонтроля(Форма.Объект.ВариантВеденияСписка) 
			= ПредопределенноеЗначение("Перечисление.ВариантыВеденияСпискаКонтроля.ДатаКонтроляНазначаетсяНаСписок"));

КонецПроцедуры 

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Объект.ВариантВеденияСписка = ОбъектыНаКонтролеКлиентСервер.ВариантВеденияСпискаКонтроля(Объект.ВариантВеденияСписка);
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРасписаниеРегламентногоЗадания()
	
	РасписаниеЗаданияНамоминать = Новый РасписаниеРегламентногоЗадания;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		НастроитьРасписаниеПоУмолчанию();
		
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		ИдентификаторЗадания = Объект.РегламентноеЗадание;
		Если ТипЗнч(ИдентификаторЗадания) = Тип("УникальныйИдентификатор") Тогда
			Задание = РегламентныеЗаданияСервер.Задание(ИдентификаторЗадания);
			Если Задание <> Неопределено Тогда
				РасписаниеЗаданияНамоминать = Задание.Расписание;
				РасписаниеСтрокой = Строка(РасписаниеЗаданияНамоминать);
			Иначе
				НастроитьРасписаниеПоУмолчанию();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьРасписаниеПоУмолчанию()
	
	РасписаниеЗаданияНамоминать.ВремяНачала = '00010101090000'; // в 9:00 утра
	
	ДниНедели = Новый Массив;
	ДниНедели.Добавить(1); 
	ДниНедели.Добавить(2);
	ДниНедели.Добавить(3);
	ДниНедели.Добавить(4);
	ДниНедели.Добавить(5);
	
	РасписаниеЗаданияНамоминать.ПериодПовтораДней = 1;
	РасписаниеЗаданияНамоминать.ДниНедели         = ДниНедели; //по будним дням
	
	РасписаниеСтрокой = Строка(РасписаниеЗаданияНамоминать);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(РезультатНастройки, ДополнительныеПараметры) Экспорт
	
	ДиалогРасписания = ДополнительныеПараметры.ДиалогРасписания;
	
	Если РезультатНастройки <> Неопределено Тогда
		
		Модифицированность          = Истина;
		РасписаниеЗаданияНамоминать = ДиалогРасписания.Расписание;
		РасписаниеСтрокой           = Строка(РасписаниеЗаданияНамоминать); 
		
		СформироватьПодсказкуНапоминать(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.НапоминатьОКонтроле Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание", РасписаниеЗаданияНамоминать);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
