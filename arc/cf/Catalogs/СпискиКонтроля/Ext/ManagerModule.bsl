#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает данные списка контроля
//
// Параметры:
//  СписокКонтроля  - СправочникСсылка.СпискиКонтроля
//
// Возвращаемое значение:
//   Структура - содержит:
//     * Наименование                        - Строка - наименование списка
//     * ВладелецСписка                      - СправочникСсылка.Пользователи - владелец списка.
//     * Действует                           - Булево - признак того, что список действует.
//     * ИнформироватьОтветственныхОКонтроле - Булево - объекты по данному списку будут отображаться ответственным за них.
//     * Описание                            - Строка - краткое описание назначения списка контроля
//     * ДатаСледующегоКонтроля              - Дата  - предполагаемая дата следующего контроля
//
Функция ДанныеСпискаКонтроля(СписокКонтроля) Экспорт

	ДанныеСпискаКонтроля = НовыйДанныеСпискаКонтроля();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СпискиКонтроля.Наименование                        КАК Наименование,
	|	СпискиКонтроля.ВладелецСписка                      КАК ВладелецСписка,
	|	СпискиКонтроля.Действует                           КАК Действует,
	|	СпискиКонтроля.ИнформироватьОтветственныхОКонтроле КАК ИнформироватьОтветственныхОКонтроле,
	|	СпискиКонтроля.Описание                            КАК Описание,
	|	СпискиКонтроля.ВариантВеденияСписка                КАК ВариантВеденияСписка,
	|	СпискиКонтроля.ДатаСледующегоКонтроля              КАК ДатаСледующегоКонтроля
	|ИЗ
	|	Справочник.СпискиКонтроля КАК СпискиКонтроля
	|ГДЕ
	|	СпискиКонтроля.Ссылка = &СписокКонтроля";
	
	Запрос.УстановитьПараметр("СписокКонтроля", СписокКонтроля);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		ЗаполнитьЗначенияСвойств(ДанныеСпискаКонтроля, Выборка);
	
	КонецЕсли;
	
	Возврат ДанныеСпискаКонтроля;
	
КонецФункции

// Конструктор данных списка контроля
//
// Параметры:
//  СписокКонтроля  - СправочникСсылка.СпискиКонтроля
//
// Возвращаемое значение:
//   Структура - содержит:
//     * Наименование                        - Строка - наименование списка
//     * СписокКонтроля                      - СправочникСсылка.СпискиКонтроля - владелец списка.
//     * ВладелецСписка                      - СправочникСсылка.Пользователи - владелец списка.
//     * Действует                           - Булево - признак того, что список действует.
//     * ИнформироватьОтветственныхОКонтроле - Булево - объекты по данному списку будут отображаться ответственным за них.
//     * Описание                            - Строка - краткое описание назначения списка контроля
//     * ДатаСледующегоКонтроля              - Дата  - предполагаемая дата следующего контроля
//
Функция НовыйДанныеСпискаКонтроля() Экспорт

	ДанныеВидаПлана = Новый Структура;
	
	ДанныеВидаПлана.Вставить("Наименование",                        "");
	ДанныеВидаПлана.Вставить("СписокКонтроля",                      Неопределено);
	ДанныеВидаПлана.Вставить("ВладелецСписка",                      Неопределено);
	ДанныеВидаПлана.Вставить("Действует",                           Ложь);
	ДанныеВидаПлана.Вставить("ИнформироватьОтветственныхОКонтроле", Ложь);
	ДанныеВидаПлана.Вставить("Описание",                            "");
	ДанныеВидаПлана.Вставить("ДатаСледующегоКонтроля",              Неопределено);
	ДанныеВидаПлана.Вставить("ВариантВеденияСписка",                Неопределено);
	
	Возврат ДанныеВидаПлана;

КонецФункции

// Возвращает действующие списки контроля пользователя
//
// Параметры:
//  ВладелецСписка  - СправочникСсылка.Пользователи
//
// Возвращаемое значение:
//   Массив - содержит структуры со ссылкой и наименованием
//
Функция ДействующиеСпискиКонтроляПользователя(ВладелецСписка) Экспорт
	
	ДействующиеСписки = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СпискиКонтроля.Ссылка       КАК Ссылка,
	|	СпискиКонтроля.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СпискиКонтроля КАК СпискиКонтроля
	|ГДЕ
	|	СпискиКонтроля.ВладелецСписка = &ВладелецСписка
	|	И СпискиКонтроля.Действует
	|	И НЕ СпискиКонтроля.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВладелецСписка", ВладелецСписка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСписка = Новый Структура;
		ДанныеСписка.Вставить("СписокКонтроля",     Выборка.Ссылка);
		ДанныеСписка.Вставить("НаименованиеСписка", Выборка.Наименование);
		
		ДействующиеСписки.Добавить(ДанныеСписка);
		
	КонецЦикла;
	
	Возврат ДействующиеСписки;
	
КонецФункции

// Возвращает действующие списки контроля пользователя, за исключением переданного списка
//
// Параметры:
//  ИсключаяСписок  - СправочникСсылка.СпискиКонтроля - список контроля, который должен быть исключен из результатов
//  ВладелецСписка  - СправочникСсылка.Пользователи   - владелец списков контроля
//
// Возвращаемое значение:
//   СписокЗначений -
//
Функция ДругиеСпискиКонтроляПользователя(ИсключаяСписок, ВладелецСписка) Экспорт
	
	ДействующиеСписки = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СпискиКонтроля.Ссылка       КАК Ссылка,
	|	СпискиКонтроля.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СпискиКонтроля КАК СпискиКонтроля
	|ГДЕ
	|	СпискиКонтроля.ВладелецСписка = &ВладелецСписка
	|	И СпискиКонтроля.Ссылка <> &ИсключаяСписок
	|	И СпискиКонтроля.Действует
	|	И НЕ СпискиКонтроля.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВладелецСписка", ВладелецСписка);
	Запрос.УстановитьПараметр("ИсключаяСписок", ИсключаяСписок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДействующиеСписки.Добавить(Выборка.Ссылка, Выборка.Наименование);
		
	КонецЦикла;
	
	Возврат ДействующиеСписки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
