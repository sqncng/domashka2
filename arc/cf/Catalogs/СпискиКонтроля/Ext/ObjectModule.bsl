

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВладелецСписка         = Пользователи.ТекущийПользователь();
	ВариантВеденияСписка   = ОбъектыНаКонтролеКлиентСервер.ВариантВеденияСпискаКонтроля(Неопределено);
	ДатаСледующегоКонтроля = НачалоДня(ТекущаяДатаСеанса() + 86400);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если Не Ссылка.Пустая() Тогда
		ДополнительныеСвойства.Вставить("ВариантВеденияСписка", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВариантВеденияСписка"));
	КонецЕсли;
	
	// Создание регламентное задание (получение уникального идентификатора)
	УстановитьПривилегированныйРежим(Истина);
	
	Если НапоминатьОКонтроле
		И Действует
		И Не ПометкаУдаления Тогда
		
		Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
		
		Если Задание = Неопределено Тогда
			
			ПараметрыЗадания = Новый Структура;
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ФормированиеНапоминанийПоСпискамКонтроля);
			ПараметрыЗадания.Вставить("Использование", Истина);
			ПараметрыЗадания.Вставить("Наименование", НаименованиеРегламентногоЗадания(Наименование, ВладелецСписка));
			ПараметрыЗадания.Вставить("ИмяПользователя", ОбъектыНаКонтроле.ИмяПользователяИБ(ВладелецСписка));
			Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
			
			РегламентноеЗадание = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
			
		КонецЕсли;
		
		ДополнительныеСвойства.Вставить("Задание",Задание);
		
	ИначеЕсли Не НапоминатьОКонтроле
		Или Не Действует 
		Или ПометкаУдаления Тогда
		
		Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
		Если Задание <> Неопределено Тогда
			ДополнительныеСвойства.Вставить("Задание",Задание);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ВариантВеденияСписка") 
		И ОбъектыНаКонтролеКлиентСервер.ВариантВеденияСпискаКонтроля(ДополнительныеСвойства.ВариантВеденияСписка)
			= Перечисления.ВариантыВеденияСпискаКонтроля.ДатаКонтроляНазначаетсяНаСписок
		И ВариантВеденияСписка = Перечисления.ВариантыВеденияСпискаКонтроля.ДатаКонтроляНазначаетсяНаОбъектКонтроля Тогда
		
		РегистрыСведений.ОбъектыНаКонтроле.УстановитьДатуКонтроляПоОбъектамДляСписка(
			Ссылка,
			?(ЗначениеЗаполнено(ДатаСледующегоКонтроля), ДатаСледующегоКонтроля, НачалоДня(ТекущаяДатаСеанса() + 86400)));
		
	КонецЕсли;
		
	Если ДополнительныеСвойства.Свойство("Задание") Тогда
		Задание = ДополнительныеСвойства.Задание;
		Если Задание = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Не НапоминатьОКонтроле
		Или Не Действует 
		Или ПометкаУдаления Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	
	Если ДополнительныеСвойства.Свойство("Расписание") 
			И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание)
		Тогда
		ПараметрыЗадания.Вставить("Расписание", ДополнительныеСвойства.Расписание);
	КонецЕсли;
	
	ПараметрыЗадания.Вставить("Наименование",    НаименованиеРегламентногоЗадания(Наименование, ВладелецСписка));
	ПараметрыЗадания.Вставить("ИмяПользователя", ОбъектыНаКонтроле.ИмяПользователяИБ(ВладелецСписка));
	
	Если Задание.Параметры.Количество() <> 1 ИЛИ Задание.Параметры[0] <> Ссылка Тогда
		Параметры = Новый Массив;
		Параметры.Добавить(Ссылка);
		ПараметрыЗадания.Вставить("Параметры",       Параметры);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НаименованиеРегламентногоЗадания(НаименованиеСписка, ВладелецСписка)
	
	Возврат СтрШаблон( НСтр("ru = 'Формирование напоминаний по списку контроля: %1 (%2)'"), НаименованиеСписка, ВладелецСписка);
	
КонецФункции

#КонецОбласти


#КонецЕсли
