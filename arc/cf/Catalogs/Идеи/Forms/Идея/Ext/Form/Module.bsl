
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		СтатусКонтроля = "Добавлено";
		ПриЧтенииСозданииНаСервере();
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			СкопироватьДанныеКопируемогоОбъекта(Параметры.ЗначениеКопирования);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Основание) И ТипЗнч(Объект.Основание) = Тип("СправочникСсылка.Ошибки") 
			И НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ЗаполнитьДанныеПоОшибке();
		КонецЕсли;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Элементы.Тематика.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокТематик().ВыгрузитьЗначения());
	
	УстановитьШрифтФорматированногоТекста();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	ОбщегоНазначенияСППР.УстановитьФорматированноеОписаниеИзХранилища(ПодробноеОписание, РедактируемыйОбъект.ХранилищеОписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(ПодробноеОписание, ТекущийОбъект.ХранилищеОписания);
	ТекущийОбъект.ПодробноеОписание = ПодробноеОписание.ПолучитьТекст();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом 

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ДействиеОповещения = "ИдеяИзменена";
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Ссылка", Объект.Ссылка);
	СтруктураДанных.Вставить("Статус", Объект.Статус);
	СтруктураДанных.Вставить("ПодробноеОписание", ПодробноеОписание.ПолучитьТекст());
	
	Оповестить(ДействиеОповещения, СтруктураДанных, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	// СтандартныеПодсистемы.Свойства
	ОбновитьЭлементыДополнительныхРеквизитов();
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриИзмененииВладельцаНаСервере();
	
	Если Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы.Количество() = 0 Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Иначе
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	КонецЕсли;
	
	Объект.РазделыПроекта.Очистить();
	
	ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы, 
		Объект.РазделыПроекта.Количество());
		
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	Объект.КПросмотру = ЗначениеЗаполнено(Объект.Ответственный);
	ПриИзмененииОтветственногоНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыИдей.Реализована") 
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыИдей.Отклонена") Тогда
		Объект.КПросмотру = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВажностьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования,
																  ЭтотОбъект,
																  "Объект.Комментарий");
	
КонецПроцедуры
															  
#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ДополнительныеРазделы(Команда)
	
	ПараметрыФормы = Новый Структура;
	МассивРазделов = Новый Массив;
	
	Для Каждого СтрокаТЧ из Объект.РазделыПроекта Цикл
		МассивРазделов.Добавить(СтрокаТЧ.Раздел);
	КонецЦикла;
	
	ПараметрыФормы.Вставить("Проект", Объект.Владелец);
	ПараметрыФормы.Вставить("МассивРазделов", МассивРазделов);
	ПараметрыФормы.Вставить("ИзмененияДоступны", ДоступноИзменениеИдеи);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДополнительныеРазделыЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.РазделыПроекта", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРазделыЗавершение(РезультатДействия, ДополнительныеПараметры) Экспорт
    
    Результат = РезультатДействия;
    
    Если ТипЗнч(Результат) = Тип("Массив") Тогда
        
        Объект.РазделыПроекта.Очистить();
        
        КоличествоРазделов = 0;
        Для Каждого Раздел из Результат Цикл
            НоваяСтрока = Объект.РазделыПроекта.Добавить();
            НоваяСтрока.Раздел = Раздел;
            
            КоличествоРазделов = КоличествоРазделов + 1;
        КонецЦикла;
        
        ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы,
			КоличествоРазделов);
			
		Модифицированность = Истина;
		
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылкеИзОписания(Команда)
	
	ОбщегоНазначенияСППРКлиент.ПерейтиПоСсылкеФорматированногоДокумента(Элементы.ПодробноеОписание, ПодробноеОписание);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ДоступноУправлениеСтатусами = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("УправлениеСтатусамиИдей", Объект.Владелец);
		
	ДоступноИзменениеИдеи = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеИдей", Объект.Владелец);
		
	ЗаполнитьРеквизитыПроекта();
	
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
	
	ОбщегоНазначенияСППРКлиентСервер.СформироватьТекстГиперссылкиДополнительныеРазделы(Элементы.ДополнительныеРазделы,
		Объект.РазделыПроекта.Количество());
		
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВладельцаНаСервере()
	
	ДоступноУправлениеСтатусами = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("УправлениеСтатусамиИдей", Объект.Владелец);
		
	ДоступноИзменениеИдеи = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеИдей", Объект.Владелец);
		
	ЗаполнитьРеквизитыПроекта();
	
	Элементы.Тематика.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокТематик().ВыгрузитьЗначения());
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтветственногоНаСервере()
	
	Элементы.Тематика.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокТематик().ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.Статус.ТолькоПросмотр = НЕ ДоступноУправлениеСтатусами;
	Элементы.ПодробноеОписание.ТолькоПросмотр = НЕ ДоступноИзменениеИдеи;
	
	Элементы.РазделПроекта.Доступность = УказыватьРаздел;
	Элементы.ДополнительныеРазделы.Доступность = УказыватьРаздел;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокТематик()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Идеи.Тематика КАК Тематика
	|ИЗ
	|	Справочник.Идеи КАК Идеи
	|ГДЕ
	|	НЕ Идеи.ПометкаУдаления
	|	И Идеи.Тематика <> """"
	|	И (Идеи.Ответственный = &Ответственный
	|			ИЛИ &Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|	И (Идеи.Владелец = &Проект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Тематика"
	;
	
	СписокЗначений = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ответственный", Объект.Ответственный);
	Запрос.УстановитьПараметр("Проект", Объект.Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокЗначений.Добавить(Выборка.Тематика);
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

&НаСервере
Процедура СкопироватьДанныеКопируемогоОбъекта(КопируемыйОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Идеи.ХранилищеОписания КАК ХранилищеОписания
	|ИЗ
	|	Справочник.Идеи КАК Идеи
	|ГДЕ
	|	Идеи.Ссылка = &Ссылка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", КопируемыйОбъект);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ОписаниеИзХранилища = Выборка.ХранилищеОписания.Получить();
		Если ТипЗнч(ОписаниеИзХранилища) = Тип("ФорматированныйДокумент") Тогда
			ПодробноеОписание = ОписаниеИзХранилища;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоОшибке()
	
	ИменаРеквизитов = "ПорядокВоспроизведения";
	РеквизитыОшибки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Основание, ИменаРеквизитов);
	
	ТекстОписания = "";
	
	Если ЗначениеЗаполнено(РеквизитыОшибки.ПорядокВоспроизведения) Тогда
		ТекстОписания = НСтр("ru='Проблема:'") + Символы.ПС + РеквизитыОшибки.ПорядокВоспроизведения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОписания) Тогда
		ПодробноеОписание.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока(ТекстОписания));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтФорматированногоТекста()

	ШрифтФорматированногоТекста = РаботаСФорматированнымДокументом.ШрифтФорматированногоТекста();
	Элементы.ПодробноеОписание.Шрифт = ШрифтФорматированногоТекста;

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ЗаполнитьРеквизитыПроекта()
	
	УказыватьРаздел = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "УказыватьВИдеяхРазделПроекта");
	
КонецПроцедуры

#КонецОбласти
