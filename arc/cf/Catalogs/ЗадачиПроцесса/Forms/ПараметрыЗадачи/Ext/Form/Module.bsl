
&НаКлиенте
Перем ВыполняетсяЗакрытие;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, 
	                         "ФактическаяДатаНачала, ФактическаяДатаОкончания, Статус, Предмет, ЗадачаШаблона, Задача");
	
	Если Не ЗначениеЗаполнено(Задача) Тогда
		
		ЕстьПодчиненныеЗадачи = Ложь;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗадачиПроцесса.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗадачиПроцесса КАК ЗадачиПроцесса
		|ГДЕ
		|	ЗадачиПроцесса.Родитель = &Задача";
		
		Запрос.УстановитьПараметр("Задача", Задача);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			ЕстьПодчиненныеЗадачи = Ложь;
		Иначе
			ЕстьПодчиненныеЗадачи = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ВыполняетсяЗакрытие И Модифицированность И Не ПереноситьИзменения И Не ЗавершениеРаботы Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстПредупреждения = НСтр("ru = 'Данные были изменены. Перенести изменения?'");
		
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		ПереноситьИзменения = Истина;
	КонецЕсли;
	
	Если ДанныеЗаполненыКорректно() Тогда
		Закрыть(СтруктураКВозврату());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДоступностью()

	Если Не ЗначениеЗаполнено(Статус) 
		Или Статус = Перечисления.СтатусыЗадачПроцессов.Отменена 
		Или Статус = Перечисления.СтатусыЗадачПроцессов.Запланирована
		Или Статус = Перечисления.СтатусыЗадачПроцессов.ПринятаКВыполнению Тогда
		
		Элементы.ФактическаяДатаОкончания.ТолькоПросмотр = Истина;
		
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Статус)
		Или Статус = Перечисления.СтатусыЗадачПроцессов.Отменена 
		Или Статус = Перечисления.СтатусыЗадачПроцессов.Запланирована Тогда
		
		Элементы.ФактическаяДатаНачала.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Статус)
		Или ЕстьПодчиненныеЗадачи
		Или ЗначениеЗаполнено(ЗадачаШаблона)
		Или Статус = Перечисления.СтатусыЗадачПроцессов.ПринятаКВыполнению
		Или Статус = Перечисления.СтатусыЗадачПроцессов.Выполнена Тогда
		
		Элементы.Предмет.ТолькоПросмотр = Истина;
		Элементы.Предмет.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция СтруктураКВозврату()

	СтруктураКВозврату = Новый Структура;
	СтруктураКВозврату.Вставить("ФактическаяДатаНачала",    ФактическаяДатаНачала);
	СтруктураКВозврату.Вставить("ФактическаяДатаОкончания", ФактическаяДатаОкончания);
	СтруктураКВозврату.Вставить("Предмет",                  Предмет);
	
	Возврат СтруктураКВозврату;

КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если ДанныеЗаполненыКорректно() Тогда
		
		ВыполняетсяЗакрытие = Истина;
		ПереноситьИзменения  = Истина;
		Закрыть(СтруктураКВозврату());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеЗаполненыКорректно()

	ОчиститьСообщения();
	
	ДанныеЗаполненыКорректно = Истина;
	
	Если Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадачПроцессов.Выполнена") Тогда
		
		Если Не ЗначениеЗаполнено(ФактическаяДатаОкончания) Тогда
			
			ДанныеЗаполненыКорректно = Ложь;
			
			ТекстСообщения =  НСтр("ru = 'Не указана дата выполнения задачи'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,
					"ФактическаяДатаОкончания",
					,
					);
			
			
		КонецЕсли;
				
		Если ФактическаяДатаОкончания < ФактическаяДатаНачала Тогда
			
			ДанныеЗаполненыКорректно = Ложь;
			
			ТекстСообщения =  НСтр("ru = 'Указанная дата выполнения меньше чем дата начала'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,
					"ФактическаяДатаОкончания",
					,
					);

		
		КонецЕсли;
		
	КонецЕсли;
	
	Если Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадачПроцессов.Выполнена")
		Или Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадачПроцессов.ПринятаКВыполнению") Тогда
	
		Если Не ЗначениеЗаполнено(ФактическаяДатаНачала) Тогда
			
			ДанныеЗаполненыКорректно = Ложь;
			
			ТекстСообщения =  НСтр("ru = 'Не указана дата начала выполнения задачи'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,
					"ФактическаяДатаНачала",
					,
					);
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ДанныеЗаполненыКорректно;

КонецФункции

#КонецОбласти

#Область Инициализация

ВыполняетсяЗакрытие = Ложь;

#КонецОбласти

