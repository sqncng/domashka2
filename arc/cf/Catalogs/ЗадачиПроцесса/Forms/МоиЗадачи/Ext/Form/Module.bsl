
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьВидимостьСтраниц();
	УстановитьНастройкиСписков();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокНаправлены,
	                                                                          "Состояние",
	                                                                          "СостояниеСписокНаправлены",
	                                                                          СостояниеСписокНаправлены,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокНаправлены,
	                                                                          "ЗонаСоблюденияСроков",
	                                                                          "ЗонаСоблюденияСроковСписокНаправлены",
	                                                                          ЗонаСоблюденияСроковСписокНаправлены,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокИсполнитель,
	                                                                          "Состояние",
	                                                                          "СостояниеСписокИсполнитель",
	                                                                          СостояниеСписокИсполнитель,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокИсполнитель,
	                                                                          "ЗонаСоблюденияСроков",
	                                                                          "ЗонаСоблюденияСроковСписокИсполнитель",
	                                                                          ЗонаСоблюденияСроковСписокИсполнитель,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокКонтролирующий,
	                                                                          "Состояние",
	                                                                          "СостояниеСписокКонтролирующий",
	                                                                          СостояниеСписокКонтролирующий,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокКонтролирующий,
	                                                                          "ЗонаСоблюденияСроков",
	                                                                          "ЗонаСоблюденияСроковСписокКонтролирующий",
	                                                                          ЗонаСоблюденияСроковСписокКонтролирующий,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокЯДелаю,
	                                                                          "Состояние",
	                                                                          "СостояниеСписокЯДелаю",
	                                                                          СостояниеСписокЯДелаю,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПередЗагрузкойИзНастроек(СписокЯДелаю,
	                                                                          "ЗонаСоблюденияСроков",
	                                                                          "ЗонаСоблюденияСроковСписокЯДелаю",
	                                                                          ЗонаСоблюденияСроковСписокЯДелаю,
	                                                                          СтруктураБыстрогоОтбора, 
	                                                                          Настройки,,
	                                                                          ВидСравненияКомпоновкиДанных.ВСписке);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗадачаПроцесса"
		Или ИмяСобытия = "Запись_Приоритет" Тогда
		
		Если Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаИсполнитель Тогда
			Элементы.СписокИсполнитель.Обновить();
		ИначеЕсли Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаНаправлены Тогда
			Элементы.СписокНаправлены.Обновить();
		ИначеЕсли Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаКонтролирующий Тогда
			Элементы.СписокКонтролирующий.Обновить();
		ИначеЕсли Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаОчередьВыполнения Тогда
			Элементы.СписокОчередьВыполнения.Обновить();
		ИначеЕсли Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаЯДелаю Тогда
			Элементы.СписокЯДелаю.Обновить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСостояниеНаправленаПриИзменении(Элемент)
	
	УстановитьОтборСостояние("Направлены");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеСписокНаправленыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СостояниеОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияНаправленаСроковПриИзменении(Элемент)
	
	УстановитьОтборЗонаСоблюденияСроков("Направлены");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияСроковСписокНаправленыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗонаСоблюденияСроковОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеИсполнительПриИзменении(Элемент)
	
	УстановитьОтборСостояние("Исполнитель");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеСписокИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СостояниеОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияИсполнительСроковПриИзменении(Элемент)
	
	УстановитьОтборЗонаСоблюденияСроков("Исполнитель");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияСроковСписокИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗонаСоблюденияСроковОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияСроковСписокЯДелаюПриИзменении(Элемент)
	
	УстановитьОтборЗонаСоблюденияСроков("ЯДелаю");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияСроковСписокЯДелаюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗонаСоблюденияСроковОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеСписокЯДелаюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДоступныеЗначения = Новый СписокЗначений;
	ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияЗадачПроцессов.Выполняется"));
	ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияЗадачПроцессов.ВыполняетсяОжидаетДочерних"));
	
	СостояниеОтборНачалоВыбора(Элемент, ДоступныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеЯДелаюПриИзменении(Элемент)
	
	УстановитьОтборСостояние("ЯДелаю");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеКонтролирующийПриИзменении(Элемент)
	
	УстановитьОтборСостояние("Контролирующий");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеСписокКонтролирующийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СостояниеОтборНачалоВыбора(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияКонтролирующийСроковПриИзменении(Элемент)
	
	УстановитьОтборЗонаСоблюденияСроков("Контролирующий");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗонаСоблюденияСроковСписокКонтролирующийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗонаСоблюденияСроковОтборНачалоВыбора(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокНаправленыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнительПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтролирующийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОчередьПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ПриоритетыОчередиРаботыКлиент.СписокОчередьПриПроверкеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОчередьПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеПеретаскивания = ПриоритетыОчередиРаботыКлиент.ДанныеПеретаскиванияОчередьЗадач(Элемент,
	                                                                                      ПараметрыПеретаскивания, 
	                                                                                      СтандартнаяОбработка,
	                                                                                      Строка,
	                                                                                      Поле);
	
	Если Не ДанныеПеретаскивания.ПеретаскиваниеДопустимо Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПеретаскиваниеСтрокиНаСервере(ДанныеПеретаскивания.ДанныеПереносимойСтроки, ДанныеПеретаскивания.ДанныеСтрокиНазначения);
	Элементы.СписокОчередьВыполнения.Обновить();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы
 
#Область ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ИзменитьВидРесурсаПоКоторомуОтображаетсяХодСогласования(Команда)
	
	ИзменитьВидРесурсаПоКоторомуОтображаетсяХодСогласования(Команда.Имя);
	
КонецПроцедуры

// ОбъектыНаКонтроле
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПостановкиНаКонтроль(Команда)
	
	ОбъектыНаКонтролеКлиент.ВыполнитьКомандуПостановкиНаКонтрольИзФормыСписка(ЭтотОбъект, Команда);
	
КонецПроцедуры
// Конец ОбъектыНаКонтроле

// Приоритеты
&НаКлиенте
Процедура Подключаемый_УстановитьПриоритет(Команда)
	
	ПриоритетыОчередиРаботыКлиент.ВыполнитьКомандуИзмененияПриоритетаИзФормыСписка(ЭтотОбъект, Команда);
	
КонецПроцедуры
// Конец Приоритеты

#КонецОбласти

#Область СписокНаправлены

&НаКлиенте
Процедура ВыполнитьЗадачуНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ВыполнитьЗадачу", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Отменить", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланироватьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Запланировать", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаПроверкуНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаПроверку", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Ответить", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Перенаправить", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКВыполнениюНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ПринятьКВыполнению", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Согласовать",
	                                             Элементы.СписокНаправлены,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласоватьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НеСогласовать",
	                                             Элементы.СписокНаправлены,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноСогласоватьНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ЧастичноСогласовать",
	                                             Элементы.СписокНаправлены,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаСогласованиеНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаСогласование",
	                                             Элементы.СписокНаправлены,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИсполнителяНаправлены(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ИзменитьИсполнителя", Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура Ознакомиться(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка(Команда.Имя, Элементы.СписокНаправлены);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенныеНаправлены(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.СписокНаправлены);
	
КонецПроцедуры

#КонецОбласти

#Область СписокИсполнитель

&НаКлиенте
Процедура ВыполнитьЗадачуИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ВыполнитьЗадачу", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Отменить", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланироватьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Запланировать", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Ответить", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Перенаправить", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКВыполнениюИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ПринятьКВыполнению", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаПроверкуИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаПроверку", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Согласовать",
	                                             Элементы.СписокИсполнитель,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласоватьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НеСогласовать",
	                                             Элементы.СписокИсполнитель,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноСогласоватьИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ЧастичноСогласовать",
	                                             Элементы.СписокИсполнитель,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаСогласованиеИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаСогласование",
	                                             Элементы.СписокИсполнитель,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИсполнителяИсполнитель(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ИзменитьИсполнителя", Элементы.СписокИсполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенныеИсполнитель(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.СписокИсполнитель);
	
КонецПроцедуры

#КонецОбласти

#Область СписокЯДелаю

&НаКлиенте
Процедура ВыполнитьЗадачуЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ВыполнитьЗадачу", Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Отменить", Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласоватьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НеСогласовать",
	                                             Элементы.СписокЯДелаю,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенныеЯДелаю(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноСогласоватьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ЧастичноСогласовать",
	                                             Элементы.СписокЯДелаю,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Согласовать",
	                                             Элементы.СписокЯДелаю,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИсполнителяЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ИзменитьИсполнителя", Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаПроверкуЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаПроверку", Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаСогласованиеЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаСогласование",
	                                             Элементы.СписокЯДелаю,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Ответить", Элементы.СписокЯДелаю);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьЯДелаю(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Перенаправить", Элементы.СписокЯДелаю);
	
КонецПроцедуры

#КонецОбласти

#Область СписокКонтролирующий

&НаКлиенте
Процедура ВыполнитьЗадачуКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ВыполнитьЗадачу", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Отменить", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланироватьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Запланировать", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаПроверкуКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаПроверку", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Ответить", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Перенаправить", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКВыполнениюКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ПринятьКВыполнению", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Согласовать", 
	                                             Элементы.СписокКонтролирующий, 
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласоватьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НеСогласовать",
	                                             Элементы.СписокКонтролирующий,
                                                 ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноСогласоватьКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ЧастичноСогласовать",
	                                             Элементы.СписокКонтролирующий,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаСогласованиеКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаСогласование", 
	                                             Элементы.СписокКонтролирующий, 
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьИсполнителямЗадачи(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка(Команда.Имя, Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИсполнителяКонтролирующий(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ИзменитьИсполнителя", Элементы.СписокКонтролирующий);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенныеКонтролирующий(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.СписокКонтролирующий);
	
КонецПроцедуры

#КонецОбласти

#Область СписокОчередьВыполнения

&НаКлиенте
Процедура ВыполнитьЗадачуОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ВыполнитьЗадачу", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Отменить", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаПроверкуОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаПроверку", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Ответить", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Перенаправить", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКВыполнениюОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ПринятьКВыполнению", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("Согласовать", 
	                                             Элементы.СписокОчередьВыполнения, 
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НеСогласоватьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НеСогласовать",
	                                             Элементы.СписокОчередьВыполнения,
                                                 ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноСогласоватьОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ЧастичноСогласовать",
	                                             Элементы.СписокОчередьВыполнения,
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьНаСогласованиеОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("НаправитьНаСогласование", 
	                                             Элементы.СписокОчередьВыполнения, 
	                                             ЗадачиПроцессовКлиент.ПараметрыКомандыСписка(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИсполнителяОчередьВыполнения(Команда)
	
	ЗадачиПроцессовКлиент.ВыполнитьКомандуСписка("ИзменитьИсполнителя", Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенныеОчередьВыполнения(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.СписокОчередьВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиЗадачуВОчередиВниз(Команда)
	
	ПеренестиЗадачу("Вниз");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиЗадачуВОчередиВверх(Команда)
	
	ПеренестиЗадачу("Вверх");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	МассивИменСписков = МассивИменСписков();
	
	Для Каждого ИмяСписка Из МассивИменСписков Цикл
	
		// Условное оформление динамического списка "Список"
		СписокУсловноеОформление = ЭтотОбъект[ИмяСписка].КомпоновщикНастроек.Настройки.УсловноеОформление;
		СписокУсловноеОформление.Элементы.Очистить();
		
		ЗадачиПроцессов.УстановитьУсловноеОформлениеПоляСостояниеВСписках(СписокУсловноеОформление);
		ЗадачиПроцессов.УстановитьУсловноеОформлениеПолейДатаВСписках(СписокУсловноеОформление);
		ЗадачиПроцессов.УстановитьУсловноеОформлениеСостоянияСогласования(СписокУсловноеОформление);
		
		// Приоритеты
		ПриоритетыОчередиРабот.УстановитьУсловноеОформлениеСписка(ЭтотОбъект[ИмяСписка]);
		// Конец Приоритеты
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидРесурсаПоКоторомуОтображаетсяХодСогласования(ИмяКоманды)

	МассиИменСписков = МассивИменСписков();
	ЗадачиПроцессов.ИзменитьВидРесурсаПоКоторомуОтображаетсяХодСогласования(ЭтотОбъект, ИмяКоманды, МассиИменСписков);
	ЗадачиПроцессов.УправлениеВидимостьюКомандСписка(ЭтотОбъект, ПараметрыВидимостиКомандСписка());

КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиСписков()

	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	МассивИменСписков = МассивИменСписков();
	
	ЗадачиПроцессов.СформироватьПодменюПоВидуРесурса(ЭтотОбъект);
	
	Для Каждого ИмяСписка Из МассивИменСписков Цикл
		
		ЗадачиПроцессов.УстановитьПараметрыДинамическогоСпискаЗадач(ЭтотОбъект[ИмяСписка], ВидСогласуемогоРесурсаДляВывода);
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтотОбъект[ИмяСписка],
		                                                                   "ТекущийПользователь",
		                                                                   ТекущийПользователь,
		                                                                   Истина);
		
	КонецЦикла;
	
	Если СтруктураБыстрогоОтбора <> Неопределено
		И СтруктураБыстрогоОтбора.Свойство("РольВЗадаче") Тогда
		
		Если СтруктураБыстрогоОтбора.РольВЗадаче = "Исполнитель" Тогда
			Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаИсполнитель;
		ИначеЕсли СтруктураБыстрогоОтбора.РольВЗадаче = "НаправленоПоручение" Тогда
			Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаНаправлены;
		ИначеЕсли СтруктураБыстрогоОтбора.РольВЗадаче = "Контролирующий" Тогда
			Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаКонтролирующий;
		ИначеЕсли СтруктураБыстрогоОтбора.РольВЗадаче = "ЯДелаю" Тогда
			Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаЯДелаю;
		ИначеЕсли СтруктураБыстрогоОтбора.РольВЗадаче = "МояОчередь" Тогда
			Элементы.СтраницыСписки.ТекущаяСтраница = Элементы.СтраницаОчередьВыполнения;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокНаправлены,
	                                                                      "ДатаПорученияПоЗадаче",
	                                                                      "ДатаПорученияПоЗадаче",
	                                                                      ДатаПорученияПоЗадаче,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.Меньше);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокНаправлены,
	                                                                      "Состояние",
	                                                                      "СостояниеСписокНаправлены",
	                                                                      СостояниеСписокНаправлены,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокНаправлены,
	                                                                      "ЗонаСоблюденияСроков",
	                                                                      "ЗонаСоблюденияСроковСписокНаправлены",
	                                                                      ЗонаСоблюденияСроковСписокНаправлены,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокИсполнитель,
	                                                                      "Состояние",
	                                                                      "СостояниеСписокИсполнитель",
	                                                                      СостояниеСписокИсполнитель,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокИсполнитель,
	                                                                      "ЗонаСоблюденияСроков",
	                                                                      "ЗонаСоблюденияСроковСписокИсполнитель",
	                                                                      ЗонаСоблюденияСроковСписокИсполнитель,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокКонтролирующий,
	                                                                      "Состояние",
	                                                                      "СостояниеСписокКонтролирующий",
	                                                                      СостояниеСписокКонтролирующий,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокКонтролирующий,
	                                                                      "ЗонаСоблюденияСроков",
	                                                                      "ЗонаСоблюденияСроковСписокКонтролирующий",
	                                                                      ЗонаСоблюденияСроковСписокКонтролирующий,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокЯДелаю,
	                                                                      "ЗонаСоблюденияСроков",
	                                                                      "ЗонаСоблюденияСроковСписокЯДелаю",
	                                                                      ЗонаСоблюденияСроковСписокЯДелаю,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессовКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(СписокЯДелаю,
	                                                                      "Состояние",
	                                                                      "СостояниеСписокЯДелаю",
	                                                                      СостояниеСписокЯДелаю,
	                                                                      СтруктураБыстрогоОтбора,,
	                                                                      ВидСравненияКомпоновкиДанных.ВСписке);
	
	ЗадачиПроцессов.ЗагрузитьНастройкуПоВидуРесурса(ЭтотОбъект,  МассивИменСписков);
	ЗадачиПроцессов.УправлениеВидимостьюКомандСписка(ЭтотОбъект, ПараметрыВидимостиКомандСписка());
	
	// ОбъектыНаКонтроле
	СпискиДляВыводаКомандКонтроля = Новый Массив;
	СпискиДляВыводаКомандКонтроля.Добавить(
		ОбъектыНаКонтроле.ДанныеСпискаДляВыводаКомандКонтроля(
		"СписокНаправлены", "СписокНаправленыГруппаКонтроль", "СписокНаправленыКонтекстноеМенюГруппаКонтроль"));
	СпискиДляВыводаКомандКонтроля.Добавить(
		ОбъектыНаКонтроле.ДанныеСпискаДляВыводаКомандКонтроля(
		"СписокИсполнитель","СписокИсполнительГруппаКонтроль", "СписокИсполнительКонтекстноеМенюГруппаКонтроль"));
	СпискиДляВыводаКомандКонтроля.Добавить(
		ОбъектыНаКонтроле.ДанныеСпискаДляВыводаКомандКонтроля(
		"СписокКонтролирующий", "СписокКонтролирующийГруппаКонтроль", "СписокКонтролирующийКонтекстноеМенюГруппаКонтроль"));
	СпискиДляВыводаКомандКонтроля.Добавить(
		ОбъектыНаКонтроле.ДанныеСпискаДляВыводаКомандКонтроля(
		"СписокЯДелаю", "СписокЯДелаюГруппаКонтроль", "СписокЯДелаюКонтекстноеМенюГруппаКонтроль"));
	СпискиДляВыводаКомандКонтроля.Добавить(
		ОбъектыНаКонтроле.ДанныеСпискаДляВыводаКомандКонтроля(
		"СписокОчередьВыполнения", "СписокОчередьВыполненияГруппаКонтроль", "СписокОчередьВыполненияКонтекстноеМенюГруппаКонтроль"));
	ОбъектыНаКонтроле.НастроитьЭлементыПоставитьНаКонтрольВФормеСписка(ЭтотОбъект, СпискиДляВыводаКомандКонтроля);
	// Конец ОбъектыНаКонтроле
	
	// Приоритеты
	СпискиДляВыводаКомандПриоритета = Новый Массив;
	СпискиДляВыводаКомандПриоритета.Добавить(
		ПриоритетыОчередиРабот.ДанныеСпискаДляВыводаКомандПриоритета(
		"СписокНаправлены", "СписокНаправленыГруппаКонтроль", "СписокНаправленыКонтекстноеМенюГруппаКонтроль", "СписокНаправленыПриоритет"));
	СпискиДляВыводаКомандПриоритета.Добавить(
		ПриоритетыОчередиРабот.ДанныеСпискаДляВыводаКомандПриоритета(
		"СписокИсполнитель","СписокИсполнительГруппаКонтроль", "СписокИсполнительКонтекстноеМенюГруппаКонтроль", "СписокИсполнительПриоритет"));
	СпискиДляВыводаКомандПриоритета.Добавить(
		ПриоритетыОчередиРабот.ДанныеСпискаДляВыводаКомандПриоритета(
		"СписокКонтролирующий", "СписокКонтролирующийГруппаКонтроль", "СписокКонтролирующийКонтекстноеМенюГруппаКонтроль", "СписокКонтролирующийПриоритет"));
	СпискиДляВыводаКомандПриоритета.Добавить(
		ПриоритетыОчередиРабот.ДанныеСпискаДляВыводаКомандПриоритета(
		"СписокЯДелаю", "СписокЯДелаюГруппаКонтроль", "СписокЯДелаюКонтекстноеМенюГруппаКонтроль", "СписокЯДелаюПриоритет"));
	СпискиДляВыводаКомандПриоритета.Добавить(
		ПриоритетыОчередиРабот.ДанныеСпискаДляВыводаКомандПриоритета(
		"СписокОчередьВыполнения", "СписокОчередьВыполненияГруппаКонтроль", "СписокОчередьВыполненияКонтекстноеМенюГруппаКонтроль", "СписокОчередьВыполненияПриоритет"));
	ПриоритетыОчередиРабот.НастроитьЭлементыПриоритетыВФормеСписка(ЭтотОбъект, 
	                                                               СпискиДляВыводаКомандПриоритета, 
	                                                               Справочники.ЗадачиПроцесса.ПустаяСсылка());
	// Конец Приоритеты
	
	РегистрыСведений.ОчередиРаботСотрудников.УстановитьФорматПорядокНомерОчереди(ТекущийПользователь, Элементы.СписокОчередьВыполненияНомерВОчереди);
	
КонецПроцедуры

&НаСервере
Функция МассивИменСписков()
	
	МассивИменСписков = Новый Массив;
	МассивИменСписков.Добавить("СписокНаправлены");
	МассивИменСписков.Добавить("СписокИсполнитель");
	МассивИменСписков.Добавить("СписокКонтролирующий");
	МассивИменСписков.Добавить("СписокЯДелаю");
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОчередиЗадач") Тогда
		МассивИменСписков.Добавить("СписокОчередьВыполнения");
	КонецЕсли;
	
	Возврат МассивИменСписков;
	
КонецФункции

&НаКлиенте
Процедура ФормаМножественногоОтбораПослеЗакрытия(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеПараметры.Свойство("Элемент") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.Элемент = Элементы.ОтборСостояниеСписокНаправлены Тогда
		
		СостояниеСписокНаправлены = Результат;
		УстановитьОтборСостояние("Направлены");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборСостояниеСписокИсполнитель Тогда
		
		СостояниеСписокИсполнитель = Результат;
		УстановитьОтборСостояние("Исполнитель");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборСостояниеСписокЯДелаю Тогда
		
		СостояниеСписокЯДелаю = Результат;
		УстановитьОтборСостояние("ЯДелаю");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборСостояниеСписокКонтролирующий Тогда
		
		СостояниеСписокКонтролирующий = Результат;
		УстановитьОтборСостояние("Контролирующий");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокНаправлены Тогда
	
		ЗонаСоблюденияСроковСписокНаправлены = Результат;
		УстановитьОтборЗонаСоблюденияСроков("Направлены");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокИсполнитель Тогда
	
		ЗонаСоблюденияСроковСписокИсполнитель = Результат;
		УстановитьОтборЗонаСоблюденияСроков("Исполнитель");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокКонтролирующий Тогда
	
		ЗонаСоблюденияСроковСписокКонтролирующий = Результат;
		УстановитьОтборЗонаСоблюденияСроков("Контролирующий");
		
	ИначеЕсли ДополнительныеПараметры.Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокЯДелаю Тогда
	
		ЗонаСоблюденияСроковСписокЯДелаю = Результат;
		УстановитьОтборЗонаСоблюденияСроков("ЯДелаю");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеОтборНачалоВыбора(Элемент, ДоступныеЗначения = Неопределено)

	Если Элемент = Элементы.ОтборСостояниеСписокНаправлены Тогда
		ИмяОтбора = "СостояниеСписокНаправлены";
	ИначеЕсли Элемент = Элементы.ОтборСостояниеСписокИсполнитель Тогда
		ИмяОтбора = "СостояниеСписокИсполнитель";
	ИначеЕсли Элемент = Элементы.ОтборСостояниеСписокКонтролирующий Тогда
		ИмяОтбора = "СостояниеСписокКонтролирующий";
	ИначеЕсли Элемент = Элементы.ОтборСостояниеСписокЯДелаю Тогда
		ИмяОтбора = "СостояниеСписокЯДелаю";
	Иначе
		Возврат;
	КонецЕсли;

	ЗадачиПроцессовКлиент.МножественныйОтборСпискаНачалоВыбора(ЭтотОбъект,
	                                                           Элемент,
	                                                           ЭтотОбъект[ИмяОтбора],
	                                                           Тип("ПеречислениеСсылка.СостоянияЗадачПроцессов"),
	                                                           НСтр("ru = 'Выбранные состояния'"),
	                                                           ДоступныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ЗонаСоблюденияСроковОтборНачалоВыбора(Элемент)

	Если Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокНаправлены Тогда
		ИмяОтбора = "ЗонаСоблюденияСроковСписокНаправлены";
	ИначеЕсли Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокИсполнитель Тогда
		ИмяОтбора = "ЗонаСоблюденияСроковСписокИсполнитель";
	ИначеЕсли Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокКонтролирующий Тогда
		ИмяОтбора = "ЗонаСоблюденияСроковСписокКонтролирующий";
	ИначеЕсли Элемент = Элементы.ОтборЗонаСоблюденияСроковСписокЯДелаю Тогда
		ИмяОтбора = "ЗонаСоблюденияСроковСписокЯДелаю";
	Иначе
		Возврат;
	КонецЕсли;

	ЗадачиПроцессовКлиент.МножественныйОтборСпискаНачалоВыбора(ЭтотОбъект,
	                                                           Элемент,
	                                                           ЭтотОбъект[ИмяОтбора],
	                                                           Тип("ПеречислениеСсылка.ЗоныЗадач"),
	                                                           НСтр("ru = 'Выбранные зоны соблюдения сроков'"));

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСостояние(ПостфиксСписка)
	
	ИмяСписка = "Список" + ПостфиксСписка;
	ИмяОтбора = "СостояниеСписок" + ПостфиксСписка;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект[ИмяСписка],
	                                                                        "Состояние",
	                                                                        ЭтотОбъект[ИмяОтбора],
	                                                                        ВидСравненияКомпоновкиДанных.ВСписке,
	                                                                        ,
	                                                                        ЭтотОбъект[ИмяОтбора].Количество() > 0);

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборЗонаСоблюденияСроков(ПостфиксСписка)
	
	ИмяСписка = "Список" + ПостфиксСписка;
	ИмяОтбора = "ЗонаСоблюденияСроковСписок" + ПостфиксСписка;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект[ИмяСписка],
	                                                                        "ЗонаСоблюденияСроков",
	                                                                        ЭтотОбъект[ИмяОтбора],
	                                                                        ВидСравненияКомпоновкиДанных.ВСписке,
	                                                                        ,
	                                                                        ЭтотОбъект[ИмяОтбора].Количество() > 0);

КонецПроцедуры

&НаСервере
Функция ПараметрыВидимостиКомандСписка()
	
	ПараметрыВидимости = Новый Структура;
	
	МассивИменКомандСогласования = Новый Массив;
	
	МассивИменКомандСогласования.Добавить("СписокНаправленыКонтекстноеМенюНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокНаправленыКонтекстноеМенюСогласовать");
	МассивИменКомандСогласования.Добавить("СписокНаправленыКонтекстноеМенюНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокНаправленыКонтекстноеМенюЧастичноСогласовать");
	МассивИменКомандСогласования.Добавить("СписокНаправленыНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокНаправленыСогласовать");
	МассивИменКомандСогласования.Добавить("СписокНаправленыНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокНаправленыЧастичноСогласовать");
	
	МассивИменКомандСогласования.Добавить("СписокИсполнительКонтекстноеМенюНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокИсполнительКонтекстноеМенюСогласовать");
	МассивИменКомандСогласования.Добавить("СписокИсполнительКонтекстноеМенюНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокИсполнительКонтекстноеМенюЧастичноСогласовать");
	МассивИменКомандСогласования.Добавить("СписокИсполнительНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокИсполнительСогласовать");
	МассивИменКомандСогласования.Добавить("СписокИсполнительНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокИсполнительЧастичноСогласовать");
	
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийКонтекстноеМенюНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийКонтекстноеМенюСогласовать");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийКонтекстноеМенюНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийКонтекстноеМенюЧастичноСогласовать");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийСогласовать");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокКонтролирующийЧастичноСогласовать");
	
	МассивИменКомандСогласования.Добавить("СписокЯДелаюКонтекстноеМенюНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюКонтекстноеМенюСогласовать");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюКонтекстноеМенюНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюКонтекстноеМенюЧастичноСогласовать");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюНаправитьНаСогласование");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюСогласовать");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюНеСогласовать");
	МассивИменКомандСогласования.Добавить("СписокЯДелаюЧастичноСогласовать");
	
	ПараметрыВидимости.Вставить("ЗависящиеОтВыбораХодаСогласования", МассивИменКомандСогласования);
	
	МассивИменКомандИзменения = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивИменКомандИзменения, МассивИменКомандСогласования);
	
	МассивИменКомандИзменения.Добавить("СписокНаправленыПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокНаправленыОтветить");
	МассивИменКомандИзменения.Добавить("СписокНаправленыНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокНаправленыЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокНаправленыПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокНаправленыВыполнить");
	МассивИменКомандИзменения.Добавить("СписокНаправленыКонтекстноеМенюПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокНаправленыКонтекстноеМенюОтветить");
	МассивИменКомандИзменения.Добавить("СписокНаправленыНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокНаправленыКонтекстноеМенюЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокНаправленыКонтекстноеМенюПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокНаправленыКонтекстноеМенюВыполнить");
	
	МассивИменКомандИзменения.Добавить("СписокИсполнительПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокИсполнительОтветить");
	МассивИменКомандИзменения.Добавить("СписокИсполнительНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокИсполнительЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокИсполнительПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокИсполнительВыполнить");
	МассивИменКомандИзменения.Добавить("СписокИсполнительКонтекстноеМенюПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокИсполнительКонтекстноеМенюОтветить");
	МассивИменКомандИзменения.Добавить("СписокИсполнительНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокИсполнительКонтекстноеМенюЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокИсполнительКонтекстноеМенюПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокИсполнительКонтекстноеМенюВыполнить");
	
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийОтветить");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийВыполнить");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийКонтекстноеМенюПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийКонтекстноеМенюОтветить");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийКонтекстноеМенюЗапланировать");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийКонтекстноеМенюПринятьКВыполнению");
	МассивИменКомандИзменения.Добавить("СписокКонтролирующийКонтекстноеМенюВыполнить");
	
	МассивИменКомандИзменения.Добавить("СписокЯДелаюПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюОтветить");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюВыполнить");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюКонтекстноеМенюПеренаправить");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюКонтекстноеМенюОтветить");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюНаправитьНаПроверку");
	МассивИменКомандИзменения.Добавить("СписокЯДелаюКонтекстноеМенюВыполнить");
	
	ПараметрыВидимости.Вставить("ЗависящиеОтПраваНаИзменение", МассивИменКомандИзменения);
	
	МассивИменКолонокСписка = Новый Массив;
	МассивИменКолонокСписка.Добавить("СогласованоНаправлены");
	МассивИменКолонокСписка.Добавить("СогласованоВТекущейНаправлены");
	МассивИменКолонокСписка.Добавить("СогласованоВДочернихНаправлены");
	МассивИменКолонокСписка.Добавить("НаСогласованииНаправлены");
	МассивИменКолонокСписка.Добавить("НаСогласованииВТекущейНаправлены");
	МассивИменКолонокСписка.Добавить("НаСогласованииВДочернихНаправлены");
	МассивИменКолонокСписка.Добавить("СогласованоПроцентВыполненияНаправлены");
	МассивИменКолонокСписка.Добавить("ВыполняетсяСогласованиеНаправлены"); 
	
	МассивИменКолонокСписка.Добавить("СписокЯДелаюСогласованоВсего");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюСогласованоВТекущей");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюСогласованоВДочерних");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюНаСогласованииВсего");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюНаСогласованииВТекущей");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюНаСогласованииВДочерних");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюВыполненоСогласованоПроцент");
	МассивИменКолонокСписка.Добавить("СписокЯДелаюВыполненоСогласовано");
	
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияСогласованоВсего");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияСогласованоВТекущей");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияСогласованоВДочерних");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияНаСогласованииВсего");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияНаСогласованииВТекущей");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияНаСогласованииВДочерних");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияВыполненоСогласованоПроцент");
	МассивИменКолонокСписка.Добавить("СписокОчередьВыполненияВыполненоСогласовано");
	
	МассивИменКолонокСписка.Добавить("СписокИсполнительСогласовано");
	МассивИменКолонокСписка.Добавить("СписокИсполнительСогласованоВТекущей");
	МассивИменКолонокСписка.Добавить("СписокИсполнительСогласованоВДочерних");
	МассивИменКолонокСписка.Добавить("СписокИсполнительНаСогласовании");
	МассивИменКолонокСписка.Добавить("СписокИсполнительНаСогласованииВТекущей");
	МассивИменКолонокСписка.Добавить("СписокИсполнительНаСогласованииВДочерних");
	МассивИменКолонокСписка.Добавить("СогласованоВыполненоИсполнитель");
	МассивИменКолонокСписка.Добавить("СогласованоПроцентВыполненияИсполнитель");
	
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийСогласовано");
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийСогласованоВТекущей");
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийСогласованоВДочерних");
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийНаСогласовании");
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийНаСогласованииВТекущей");
	МассивИменКолонокСписка.Добавить("СписокКонтролирующийНаСогласованииВДочерних");
	МассивИменКолонокСписка.Добавить("СогласованоПроцентВыполненияКонтролирующий");
	
	ПараметрыВидимости.Вставить("КолонкиСогласовавние", МассивИменКолонокСписка);
	
	Возврат ПараметрыВидимости;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьСтраниц()

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОчередиЗадач") Тогда
		
		Элементы.СтраницаОчередьВыполнения.Видимость = Ложь;
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПеренестиЗадачу(Направление)

	Если ТипЗнч(Элементы.СписокОчередьВыполнения.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПереносимойСтроки = Элементы.СписокОчередьВыполнения.ТекущиеДанные;
	
	Если ДанныеПереносимойСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПереносРаботыПоКомандеНаСервере(ДанныеПереносимойСтроки, Направление);
	
	Элементы.СписокОчередьВыполнения.Обновить();

КонецПроцедуры

&НаСервере
Процедура ОбработатьПеретаскиваниеСтрокиНаСервере(ДанныеПереносимойСтроки, ДанныеСтрокиНазначения)
	
	ПриоритетыОчередиРабот.ОбработатьПеретаскиваниеСтроки(ТекущийПользователь, ДанныеПереносимойСтроки, ДанныеСтрокиНазначения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереносРаботыПоКомандеНаСервере(ДанныеПереносимойСтроки, ВариантПереноса)
	
	ПриоритетыОчередиРабот.ПеренестиЗадачуВОчередиПоКомандеИзСписка(ТекущийПользователь, ДанныеПереносимойСтроки, ВариантПереноса);
	
КонецПроцедуры

#КонецОбласти
