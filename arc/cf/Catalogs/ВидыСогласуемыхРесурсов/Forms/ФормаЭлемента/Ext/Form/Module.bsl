
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере()
	КонецЕсли;
	
	// Установка доступности при открытии формы только для просмотра.
	Элементы.НастройкиСогласованияПодобрать.Доступность                = НЕ ТолькоПросмотр;
	Элементы.НастройкиСогласованияКонтекстноеМенюПодобрать.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Ошибки = Неопределено;
	
	НастройкиСогласованияСтроки = РеквизитФормыВЗначение("НастройкиСогласования").Строки;
	
	Для Каждого СтрокаДерева Из НастройкиСогласованияСтроки Цикл
		
		НомерСтроки = НастройкиСогласованияСтроки.Индекс(СтрокаДерева);
		
		Если Не ЗначениеЗаполнено(СтрокаДерева.Пользователь) Тогда
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указан пользователь в строке %1'"), Строка(НомерСтроки + 1));
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"НастройкиСогласования[%1].Пользователь",
				ТекстСообщения,
				"НастройкиСогласования",
				НомерСтроки,
				ТекстСообщения);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДерева.Согласующий) Тогда
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указан согласующий в строке %1'"), Строка(НомерСтроки + 1));
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"НастройкиСогласования[%1].Согласующий",
				ТекстСообщения,
				"НастройкиСогласования",
				НомерСтроки,
				ТекстСообщения)
			
		КонецЕсли;
			
		// Проверка наличия повторяющихся значений.
		НайденныеЗначения = НастройкиСогласованияСтроки.НайтиСтроки(
			Новый Структура("Пользователь", СтрокаДерева.Пользователь));
			
		Если НайденныеЗначения.Количество() > 1 Тогда
			
			Если ТипЗнч(СтрокаДерева.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
				ТекстДляОднойОшибки      = СтрШаблон(НСтр("ru = 'Пользователь ""%1"" повторяется.'"), СтрокаДерева.Пользователь);
				ТекстДляНесколькихОшибок = СтрШаблон(НСтр("ru = 'Пользователь ""%1"" в строке %2 повторяется.'"), СтрокаДерева.Пользователь, Строка(НомерСтроки + 1));
			ИначеЕсли ТипЗнч(СтрокаДерева.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ТекстДляОднойОшибки      =  СтрШаблон(НСтр("ru = 'Группа пользователей ""%1"" повторяется.'"), СтрокаДерева.Пользователь);
				ТекстДляНесколькихОшибок =  СтрШаблон(НСтр("ru = 'Группа пользователей ""%1"" в строке %2 повторяется.'"), СтрокаДерева.Пользователь, Строка(НомерСтроки + 1));
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"НастройкиСогласования[%1].Пользователь",
				ТекстДляОднойОшибки,
				"НастройкиСогласования",
				НомерСтроки,
				ТекстДляНесколькихОшибок);
				
		КонецЕсли
		
	КонецЦикла;
	
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыполняетсяСогласованиеПриИзменении(Элемент)
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура НастройкиСогласованияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	КоличествоСтрокСогласования = НастройкиСогласования.ПолучитьЭлементы().Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если РежимПодбора Тогда
		
		НастройкаСогласующих = Новый Соответствие;
		Для Каждого СтрокаВерхнегоУровня Из НастройкиСогласования.ПолучитьЭлементы() Цикл
			НастройкаСогласующих.Вставить(СтрокаВерхнегоУровня.Пользователь, СтрокаВерхнегоУровня.Согласующий);
		КонецЦикла;
		
		НастройкиСогласования.ПолучитьЭлементы().Очистить();
	КонецЕсли;
	ИзмененныеСтроки = Новый Массив;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого Значение Из ВыбранноеЗначение Цикл
			ЗначениеНеНайдено = Истина;
			Для каждого Элемент Из НастройкиСогласования.ПолучитьЭлементы() Цикл
				Если Элемент.Пользователь = Значение Тогда
					ЗначениеНеНайдено = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеНеНайдено Тогда
				НовыйЭлемент = НастройкиСогласования.ПолучитьЭлементы().Добавить();
				НовыйЭлемент.Пользователь = Значение;
				ИзмененныеСтроки.Добавить(НовыйЭлемент.ПолучитьИдентификатор());
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Элемент.ТекущиеДанные.Пользователь <> ВыбранноеЗначение Тогда
		Элемент.ТекущиеДанные.Пользователь = ВыбранноеЗначение;
		ИзмененныеСтроки.Добавить(Элемент.ТекущаяСтрока);
	КонецЕсли;
	
	Если РежимПодбора Тогда
		
		Для Каждого СтрокаВерхнегоУровня Из НастройкиСогласования.ПолучитьЭлементы() Цикл
		
			СогласующийПоСтроке = НастройкаСогласующих.Получить(СтрокаВерхнегоУровня.Пользователь);
			Если СогласующийПоСтроке <> Неопределено Тогда
				СтрокаВерхнегоУровня.Согласующий = СогласующийПоСтроке;
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИзмененныеСтроки.Количество() > 0 Тогда
		ОбновленныеСтроки = Неопределено;
		ОбновитьПользователейГрупп(ИзмененныеСтроки, ОбновленныеСтроки);
		Для каждого ИдентификаторСтроки Из ОбновленныеСтроки Цикл
			Элементы.НастройкиСогласования.Развернуть(ИдентификаторСтроки);
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПередУдалением(Элемент, Отказ)
	
	СтрокаРодителя = Элемент.ТекущиеДанные.ПолучитьРодителя();
	
	Если СтрокаРодителя <> Неопределено Тогда
		Отказ = Истина;
		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Пользователи групп отображаются для сведения.
			           |Их нельзя удалить в этом списке.'"));
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Элемент.ТекущиеДанные.Пользователь = Неопределено;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Пользователь = Неопределено Тогда
		Элемент.ТекущиеДанные.НомерКартинки = -1;
		Элемент.ТекущиеДанные.Пользователь = ПредопределенноеЗначение(
			"Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока
	   И Элемент.ТекущиеДанные <> Неопределено
	   И Элемент.ТекущиеДанные.Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка") Тогда
		
		Элемент.ТекущиеДанные.Пользователь = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПослеУдаления(Элемент)
	
	// Установка отображения дерева.
	ЕстьВложенные = Ложь;
	Для каждого Элемент Из НастройкиСогласования.ПолучитьЭлементы() Цикл
		Если Элемент.ПолучитьЭлементы().Количество() > 0 Тогда
			ЕстьВложенные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.НастройкиСогласования.Отображение =
		?(ЕстьВложенные, ОтображениеТаблицы.Дерево, ОтображениеТаблицы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПользовательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элементы.НастройкиСогласования.ТекущиеДанные.Пользователь) Тогда
		ОбновитьПользователейГрупп(Элементы.НастройкиСогласования.ТекущаяСтрока);
		Элементы.НастройкиСогласования.Развернуть(Элементы.НастройкиСогласования.ТекущаяСтрока);
	Иначе
		Элементы.НастройкиСогласования.ТекущиеДанные.НомерКартинки = -1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьПодобратьПользователей(Ложь);
	РежимПодбора = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПользовательОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Элементы.НастройкиСогласования.ТекущиеДанные.НомерКартинки = -1;
	Элементы.НастройкиСогласования.ТекущиеДанные.Пользователь  = ПредопределенноеЗначение(
		"Справочник.Пользователи.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПользовательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = УправлениеДоступомСлужебныйВызовСервера.СформироватьДанныеВыбораПользователя(Текст, Истина,Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСогласованияПользовательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
			ДанныеВыбора = УправлениеДоступомСлужебныйВызовСервера.СформироватьДанныеВыбораПользователя(Текст, Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	ВыбратьПодобратьПользователей(Истина);
	РежимПодбора = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПользователейГрупп(ИдентификаторСтроки = Неопределено,
                                     ИзмененныеСтроки = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	ИзмененныеСтроки = Новый Массив;
	
	Если ИдентификаторСтроки = Неопределено Тогда
		ЭлементыКоллекции = НастройкиСогласования.ПолучитьЭлементы();
		
	ИначеЕсли ТипЗнч(ИдентификаторСтроки) = Тип("Массив") Тогда
		ЭлементыКоллекции = Новый Массив;
		Для каждого Идентификатор Из ИдентификаторСтроки Цикл
			ЭлементыКоллекции.Добавить(НастройкиСогласования.НайтиПоИдентификатору(Идентификатор));
		КонецЦикла;
	Иначе
		ЭлементыКоллекции = Новый Массив;
		ЭлементыКоллекции.Добавить(НастройкиСогласования.НайтиПоИдентификатору(ИдентификаторСтроки));
	КонецЕсли;
	
	УчастникиГруппыПользователей = Новый Массив;
	Для каждого Элемент Из ЭлементыКоллекции Цикл
		
		Если ТипЗнч(Элемент.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		
			УчастникиГруппыПользователей.Добавить(Элемент.Пользователь);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УчастникиГруппыПользователей", УчастникиГруппыПользователей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоставыГруппПользователей.ГруппаПользователей,
	|	СоставыГруппПользователей.Пользователь
	|ИЗ
	|	РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|ГДЕ
	|	СоставыГруппПользователей.ГруппаПользователей В(&УчастникиГруппыПользователей)
	|	И СоставыГруппПользователей.Пользователь.Недействителен <> ИСТИНА";
	
	ПользователиГрупп = Запрос.Выполнить().Выгрузить();
	ПользователиГрупп.Индексы.Добавить("ГруппаПользователей");
	
	Для каждого Элемент Из ЭлементыКоллекции Цикл
		Элемент.Ссылка = Элемент.Пользователь;
		
		Если ТипЗнч(Элемент.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		
			// Заполнение пользователей группы.
			СтарыеПользователи = Элемент.ПолучитьЭлементы();
			Отбор = Новый Структура("ГруппаПользователей", Элемент.Пользователь);
			НовыеПользователи = ПользователиГрупп.НайтиСтроки(Отбор);
			
			ЕстьИзменения = Ложь;
			
			Если СтарыеПользователи.Количество() <> НовыеПользователи.Количество() Тогда
				СтарыеПользователи.Очистить();
				Для каждого Строка Из НовыеПользователи Цикл
					НовыйЭлемент = СтарыеПользователи.Добавить();
					НовыйЭлемент.Ссылка                = Строка.Пользователь;
					НовыйЭлемент.Пользователь          = Строка.Пользователь;
					НовыйЭлемент.ЭтоПодчиненныйЭлемент = Истина;
				КонецЦикла;
				ЕстьИзменения = Истина;
			Иначе
				Индекс = 0;
				Для каждого Строка Из СтарыеПользователи Цикл
					
					Если Строка.Ссылка       <> НовыеПользователи[Индекс].Пользователь
					 ИЛИ Строка.Пользователь <> НовыеПользователи[Индекс].Пользователь Тогда
						
						Строка.Ссылка       = НовыеПользователи[Индекс].Пользователь;
						Строка.Пользователь = НовыеПользователи[Индекс].Пользователь;
						ЕстьИзменения = Истина;
					КонецЕсли;
					Индекс = Индекс + 1;
				КонецЦикла;
			КонецЕсли;
			
			Если ЕстьИзменения Тогда
				ИзмененныеСтроки.Добавить(Элемент.ПолучитьИдентификатор());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Пользователи.ЗаполнитьНомераКартинокПользователей(
		НастройкиСогласования, "Ссылка", "НомерКартинки", ИдентификаторСтроки, Истина);
	
	// Установка отображения дерева.
	ЕстьДерево = Ложь;
	Для каждого Элемент Из НастройкиСогласования.ПолучитьЭлементы() Цикл
		Если Элемент.ПолучитьЭлементы().Количество() > 0 Тогда
			ЕстьДерево = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Элементы.НастройкиСогласования.Отображение = ?(ЕстьДерево, ОтображениеТаблицы.Дерево, ОтображениеТаблицы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодобратьПользователей(Подобрать)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ?(
		Элементы.НастройкиСогласования.ТекущиеДанные = Неопределено,
		Неопределено,
		Элементы.НастройкиСогласования.ТекущиеДанные.Пользователь));
	
	Если Подобрать Тогда
		
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
		ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
		ПараметрыФормы.Вставить("РасширенныйПодбор", Истина);
		ПараметрыФормы.Вставить("ПараметрыРасширеннойФормыПодбора", ПараметрыРасширеннойФормыПодбора());
		ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элементы.НастройкиСогласования);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ДеревоНастроек = НастройкиСогласования.ПолучитьЭлементы();
	ДеревоНастроек.Очистить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Объект.НастройкиСогласования,ДеревоНастроек); 
	ОбновитьПользователейГрупп();
	
	КоличествоСтрокСогласования = НастройкиСогласования.ПолучитьЭлементы().Количество();
	
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыРасширеннойФормыПодбора()
	
	ЭлементыКоллекции = НастройкиСогласования.ПолучитьЭлементы();
	
	ВыбранныеПользователи = Новый ТаблицаЗначений;
	ВыбранныеПользователи.Колонки.Добавить("Пользователь");
	ВыбранныеПользователи.Колонки.Добавить("НомерКартинки");
	
	Для каждого Элемент Из ЭлементыКоллекции Цикл
		
		СтрокаВыбранныеПользователи = ВыбранныеПользователи.Добавить();
		СтрокаВыбранныеПользователи.Пользователь = Элемент.Пользователь;
		СтрокаВыбранныеПользователи.НомерКартинки = Элемент.НомерКартинки;
		
	КонецЦикла;
	
	ЗаголовокФормыПодбора = НСтр("ru = 'Подбор участников согласования'");
	ПараметрыРасширеннойФормыПодбора = Новый Структура;
	ПараметрыРасширеннойФормыПодбора.Вставить("ЗаголовокФормыПодбора", ЗаголовокФормыПодбора);
	ПараметрыРасширеннойФормыПодбора.Вставить("ВыбранныеПользователи", ВыбранныеПользователи);
	Если Объект.Ссылка = УправлениеДоступом.ГруппаДоступаАдминистраторы() Тогда
		ПараметрыРасширеннойФормыПодбора.Вставить("ПодборГруппНевозможен");
	КонецЕсли;
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ПараметрыРасширеннойФормыПодбора);
	Возврат АдресХранилища;
	
КонецФункции

&НаКлиенте
Процедура НастройкиСогласованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		
		Если Элемент.ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
			Отказ = Истина;
			
			Элементы.НастройкиСогласования.ТекущаяСтрока =
				Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьИдентификатор();
			
			Элементы.НастройкиСогласования.СкопироватьСтроку();
			
		КонецЕсли;
		
	ИначеЕсли Элементы.НастройкиСогласования.ТекущаяСтрока <> Неопределено Тогда
		
		Отказ = Истина;
		Элементы.НастройкиСогласования.СкопироватьСтроку();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
#Область НастройкиСогласования
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиСогласованияСогласующий.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиСогласования.ЭтоПодчиненныйЭлемент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст",                 НСтр("ru = '<указывается для группы>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",        Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста" ,           ЦветаСтиля.НедоступнаяДляВыбораЗадача);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиСогласованияПользователь.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиСогласования.ЭтоПодчиненныйЭлемент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
#КонецОбласти

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиСогласования.Очистить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НастройкиСогласования.ПолучитьЭлементы(),ТекущийОбъект.НастройкиСогласования); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Форма.Объект.ВыполняетсяСогласование Тогда
		
		Элементы.СтраницыФормы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.Основной.РасширеннаяПодсказка.Заголовок = СтрЗаменить(Элементы.Основной.РасширеннаяПодсказка.Заголовок, НСтр("ru = 'планирования'"), НСтр("ru = 'согласования'"));
		
	Иначе
		
		Элементы.СтраницыФормы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.СтраницыФормы.ТекущаяСтраница    = Элементы.СтраницаОсновное;
		Элементы.Основной.РасширеннаяПодсказка.Заголовок = СтрЗаменить(Элементы.Основной.РасширеннаяПодсказка.Заголовок, НСтр("ru = 'согласования'"), НСтр("ru = 'планирования'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
