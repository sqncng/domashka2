#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ПотребляемаяФункция = Параметры.ПотребляемаяФункция;
	
	Список.Параметры.УстановитьЗначениеПараметра("ПотребляемаяФункция", ПотребляемаяФункция);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Ссылки = Элементы.Список.ВыделенныеСтроки;
	ПотребителиВыбраны = Ложь;
	
	ДобавитьСвязи(Ссылки, ПредопределенноеЗначение("Перечисление.ВидыВходящихСвязейФункций.Вход"), ПотребителиВыбраны);
	
	Если Не ПотребителиВыбраны Тогда
		ТекстСообщения = НСтр("ru='Не выбрано ни одной конечной функции для добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСОобщения);
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОчиститьСообщения();
	
	Ссылки = Элементы.Список.ВыделенныеСтроки;
	ПотребителиВыбраны = Ложь;
	
	ДобавитьСвязи(Ссылки, ПредопределенноеЗначение("Перечисление.ВидыВходящихСвязейФункций.Вход"), ПотребителиВыбраны);
	
	Если Не ПотребителиВыбраны Тогда
		ТекстСообщения = НСтр("ru='Не выбрано ни одной конечной функции для добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСОобщения);
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДляВхода(Команда)
	
	ОчиститьСообщения();
	
	Ссылки = Элементы.Список.ВыделенныеСтроки;
	ПотребителиВыбраны = Ложь;
	
	ДобавитьСвязи(Ссылки, ПредопределенноеЗначение("Перечисление.ВидыВходящихСвязейФункций.Вход"), ПотребителиВыбраны);
	
	Если Не ПотребителиВыбраны Тогда
		ТекстСообщения = НСтр("ru='Не выбрано ни одной конечной функции для добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСОобщения);
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДляУправления(Команда)
	
	ОчиститьСообщения();
	
	Ссылки = Элементы.Список.ВыделенныеСтроки;
	ПотребителиВыбраны = Ложь;
	
	ДобавитьСвязи(Ссылки, ПредопределенноеЗначение("Перечисление.ВидыВходящихСвязейФункций.Управление"), ПотребителиВыбраны);
	
	Если Не ПотребителиВыбраны Тогда
		ТекстСообщения = НСтр("ru='Не выбрано ни одной конечной функции для добавления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСОобщения);
		Возврат;
	КонецЕсли;
	
	Закрыть();
				  
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСвязь(ФункцияПотребитель, ВидСвязи)
	
	Попытка
		ФункцияПотребительОбъект = ФункцияПотребитель.ПолучитьОбъект();
		ФункцияПотребительОбъект.Заблокировать();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось заблокировать функцию для изменения. %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ВызватьИсключение(ТекстСообщения);
	КонецПопытки;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Функция",  ПотребляемаяФункция);
	СтруктураОтбора.Вставить("ВидСвязи", ВидСвязи);
	
	МассивСтрок = ФункцияПотребительОбъект.ВходящиеДанные.НайтиСтроки(СтруктураОтбора);
	
	Если МассивСтрок.Количество()=0 Тогда
		
		НоваяСтрока = ФункцияПотребительОбъект.ВходящиеДанные.Добавить();
		НоваяСтрока.Функция = ПотребляемаяФункция;
		НоваяСтрока.ВИдСвязи = ВидСвязи;
		
		ФункцияПотребительОбъект.Записать();
		
	КонецЕсли;
	
	ФункцияПотребительОбъект.Разблокировать();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСвязи(Ссылки, ТипСвязи, ПотребителиВыбраны)
	
	ВыбранныеФункции = Новый Массив();
	Потребители = Новый Массив;
	
	Для Каждого СсылкаФункции из Ссылки Цикл
		Если ЗначениеЗаполнено(СсылкаФункции) Тогда
			ВыбранныеФункции.Добавить(СсылкаФункции);
		КонецЕсли;
	КонецЦикла;
	
	РеквизитыПотребителей = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВыбранныеФункции, "ЭтоГруппа");
	
	Для Каждого ДанныеПотребителя из РеквизитыПотребителей Цикл
		Если Не ДанныеПотребителя.Значение Тогда
			Потребители.Добавить(ДанныеПотребителя.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Если Потребители.Количество()>0 Тогда
	    ПотребителиВыбраны = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Для Каждого Потребитель из Потребители Цикл
		ДобавитьСвязь(Потребитель, ТипСвязи);
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти