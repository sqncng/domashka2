#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		СкопироватьДанныеКопируемогоОбъекта(Параметры.ЗначениеКопирования);
	КонецЕсли;
	
	Если Параметры.ФормаОткрытаИзСхемы Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСхема;
	КонецЕсли;
	
	УстановитьШрифтФорматированногоТекста();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбщегоНазначенияСППР.УстановитьФорматированноеОписаниеИзХранилища(Описание, РедактируемыйОбъект.ХранилищеОписания);
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ПриЧтенииСозданииНаСервере();
	
	НастройкиСервер.УстановитьТекущуюСтраницу("Справочник.ФункцииСистемы.ФормаГруппы",
	                                          Элементы.ГруппаСтраницы,
											  "ТекущаяСтраницаФормыГруппыФункцииСистемы");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(Описание, ТекущийОбъект.ХранилищеОписания);
	ТекущийОбъект.Описание = Описание.ПолучитьТекст();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СтатусКонтроля = КонтрольИзменений.СтатусКонтроля(Объект.Ссылка);
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеИнформацииОбИспользованииИсточника" И Параметр= Объект.Ссылка Тогда
		ПриИзмененииДанныхОбИспользованииИсточникаНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	СформироватьСхемуФункции();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если Объект.Владелец <> Проект Тогда
		ПриИзмененииВладельцаНаСервере();
		Проект = Объект.Владелец;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура СхемаФункцииВыбор(Элемент)
	
	Если Элемент.ТекущийЭлемент <> Неопределено Тогда
		
		Если ТипЗнч(ГиперссылкиСвязей) = Тип("Структура") Тогда
			
			Если ТипЗнч(Элемент.ТекущийЭлемент) = Тип("ЭлементГрафическойСхемыДекоративнаяЛиния") Тогда
				
				ДанныеСвязей = Неопределено;
				ГиперссылкиСвязей.Свойство(Элемент.ТекущийЭлемент.Имя, ДанныеСвязей);
				
				Если ТипЗнч(ДанныеСвязей) = Тип("Соответствие") Тогда
					ПараметрыОткрытия = Новый Структура("Связи", ДанныеСвязей);
					ОткрытьФорму("Справочник.ФункцииСистемы.Форма.СвязиАгрегатнойФункции", ПараметрыОткрытия);
					Возврат;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	
		СоответствиеСсылок = Новый Соответствие;
		Для Каждого СтрокаТаблицы из ПризнакиГиперссылок Цикл
			СоответствиеСсылок.Вставить(СтрокаТаблицы.Гиперссылка, СтрокаТаблицы.ЭтоГруппа);
		КонецЦикла;
		
		ГрафическиеСхемыКлиент.ОткрытьГиперссылкуИзСхемыФункции(Элемент.ТекущийЭлемент, ГиперссылкиСвязей,
		                                                        СоответствиеСсылок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображаетсяВИнтерфейсеПриИзменении(Элемент)
	
	Если НЕ Объект.ОтображаетсяВИнтерфейсе Тогда
		
		Если ЗначениеЗаполнено(Объект.НаименованиеВИнтерфейсе) Тогда
			Объект.НаименованиеВИнтерфейсе = "";
		КонецЕсли;
		
		Если  ЗначениеЗаполнено(Объект.Подсистема) Тогда
			Объект.Подсистема = ПредопределенноеЗначение("Справочник.Подсистемы.ПустаяСсылка");
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьОтображенияВИнтерфейсе();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИсточникаНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ОбъектИсточник) Тогда
		ПоказатьЗначение(,ОбъектИсточник);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоИспользованияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Приемник", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("Источник", ОбъектИсточник);
	ПараметрыОткрытия.Вставить("ПравилоИспользования", ПравилоИспользования);
	
	ОткрытьФорму("ОбщаяФорма.ИнформацияОбИспользованииОбъектаИсточника", ПараметрыОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Родитель(Команда)
	
	Если НЕ Объект.Родитель.Пустая() Тогда
		ПараметрыФормы = Новый Структура("Ключ", Объект.Родитель);
		ОткрытьФорму("Справочник.ФункцииСистемы.ФормаГруппы", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСхему(Команда)
	
	СформироватьСхемуФункции();
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Проект = Объект.Владелец;
	
	ДоступноИзменениеФункции = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеФункцийСистемы", Объект.Владелец);
		
	ДоступноИзменениеИнформацииПоИспользованиюОбъектов =
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеИнформацииОбИспользованииОбъектов", Объект.Владелец);
		
	ОбщегоНазначенияСППРКлиентСервер.УстановитьОтображениеСостоянияКонтроля(ЭтаФорма);
		
	СформироватьСхемуФункции();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДанныеОбИспользованииОбъектаИсточника();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектИсточник)
		И ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.БезИзменений Тогда
		ТребуетсяБлокировкаПоИспользованиюИсточника = Истина;
	Иначе
		ТребуетсяБлокировкаПоИспользованиюИсточника = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьОтображенияВИнтерфейсе();
	УстановитьВидимостьДанныхОбИспользованииИсточника();
	УстановитьДоступностьИзмененияПравилаИспользования();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВладельцаНаСервере()
	
	ДоступноИзменениеФункции = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеФункцийСистемы", Объект.Владелец);
		
	ДоступноИзменениеИнформацииПоИспользованиюОбъектов =
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ДобавлениеИзменениеИнформацииОбИспользованииОбъектов", Объект.Владелец);
		
	Если ЗначениеЗаполнено(ОбъектИсточник)
		И ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.БезИзменений Тогда
		ТребуетсяБлокировкаПоИспользованиюИсточника = Истина;
	Иначе
		ТребуетсяБлокировкаПоИспользованиюИсточника = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьИзмененияПравилаИспользования();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьДанныеКопируемогоОбъекта(КопируемыйОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФункцииСистемы.ХранилищеОписания КАК ХранилищеОписания
	|ИЗ
	|	Справочник.ФункцииСистемы КАК ФункцииСистемы
	|ГДЕ
	|	ФункцииСистемы.Ссылка = &Ссылка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", КопируемыйОбъект);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ОписаниеИзХранилища = Выборка.ХранилищеОписания.Получить();
		Если ТипЗнч(ОписаниеИзХранилища) = Тип("ФорматированныйДокумент") Тогда
			Описание = ОписаниеИзХранилища;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтФорматированногоТекста()

	ШрифтФорматированногоТекста = РаботаСФорматированнымДокументом.ШрифтФорматированногоТекста();
	Элементы.Описание.Шрифт = ШрифтФорматированногоТекста;

КонецПроцедуры

&НаСервере
Процедура СформироватьСхемуФункции()
	
	Если НЕ ЗначениеЗаполнено(Объект.Родитель)
		И НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		СхемаФункции.РежимОтрисовкиСетки = РежимОтрисовкиСеткиГрафическойСхемы.НеРисовать;
		
		Возврат;
	КонецЕсли;
	
	РеквизитыФункции = Новый Структура;
	РеквизитыФункции.Вставить("Родитель", Объект.Родитель);
	РеквизитыФункции.Вставить("Ссылка", Объект.Ссылка);
	РеквизитыФункции.Вставить("ПолныйКод", Объект.ПолныйКод);
	РеквизитыФункции.Вставить("Наименование", Объект.Наименование);
	
	СхемаФункции = ГрафическиеСхемыСервер.СхемаНеконечнойФункции(РеквизитыФункции, ГиперссылкиСвязей);
	
	МассивСсылок = Новый Массив;
	ПризнакиГиперссылок.Очистить();
	
	Если ТипЗнч(ГиперссылкиСвязей) = Тип("Структура") Тогда
		Для Каждого ЭлементСтруктуры из ГиперссылкиСвязей Цикл
			Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("СправочникСсылка.ФункцииСистемы") Тогда
				МассивСсылок.Добавить(ЭлементСтруктуры.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "ЭтоГруппа");
	
	Для Каждого ЭлементСоответствия из ЗначенияРеквизитов Цикл
		СтрокаТаблицы = ПризнакиГиперссылок.Добавить();
		СтрокаТаблицы.Гиперссылка = ЭлементСоответствия.Ключ;
		СтрокаТаблицы.ЭтоГруппа = ЭлементСоответствия.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначения()
	
	НастройкиСервер.СохранитьТекущуюСтраницу("Справочник.ФункцииСистемы.ФормаГруппы",
	                                         Элементы.ГруппаСтраницы,
											 "ТекущаяСтраницаФормыГруппыФункцииСистемы");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьОтображенияВИнтерфейсе()
	
	Элементы.НаименованиеВИнтерфейсе.Доступность = Объект.ОтображаетсяВИнтерфейсе;
	Элементы.Подсистема.Доступность = Объект.ОтображаетсяВИнтерфейсе;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОбИспользованииОбъектаИсточника()
	
	ДанныеОбИспользовании = РегистрыСведений.ИспользованиеОбъектов.ДанныеОбИспользованииОбъектаИсточника(Объект.Ссылка);
	
	ОбъектИсточник = ДанныеОбИспользовании.Источник;
	ПравилоИспользования = ДанныеОбИспользовании.ПравилоИспользования;
	
	Элементы.ПредставлениеИсточника.Заголовок = ДанныеОбИспользовании.НаименованиеИсточника;
	УстановитьКартинкуИспользованияИсточника();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДанныхОбИспользованииИсточника()

	Элементы.ГруппаПравилоИспользования.Видимость = ЗначениеЗаполнено(ПравилоИспользования);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДанныхОбИспользованииИсточникаНаСервере()
	
	ЗаполнитьДанныеОбИспользованииОбъектаИсточника();
	УстановитьВидимостьДанныхОбИспользованииИсточника();
	
	Если ЗначениеЗаполнено(ОбъектИсточник)
		И ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.БезИзменений Тогда
		ТребуетсяБлокировкаПоИспользованиюИсточника = Истина;
	Иначе
		ТребуетсяБлокировкаПоИспользованиюИсточника = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуИспользованияИсточника()
	
	Если ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.СИзменениями Тогда
		Элементы.КартинкаПравилоИспользованияИсточника.Картинка = БиблиотекаКартинок.ОбъектИспользуетсяСИзменениями;
	Иначе
		Элементы.КартинкаПравилоИспользованияИсточника.Картинка = БиблиотекаКартинок.ОбъектИспользуетсяБезИзменений;
	КонецЕсли;
	
КОнецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИзмененияПравилаИспользования()
	
	Элементы.ПравилоИспользования.Гиперссылка = ДоступноИзменениеИнформацииПоИспользованиюОбъектов;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	ИспользуемыеЭлементы = ИспользуемыеПоляОбъектаИсточника();
	
	Для Каждого ИспользуемыйЭлемент из ИспользуемыеЭлементы Цикл
		
		Если НЕ Доступность ИЛИ ТолькоПросмотр ИЛИ НЕ ДоступноИзменениеФункции Тогда
			ИспользуемыйЭлемент.ТолькоПросмотр = Истина;
			Продолжить;
		КонецЕсли;
		
		ИспользуемыйЭлемент.ТолькоПросмотр = ТребуетсяБлокировкаПоИспользованиюИсточника;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИспользуемыеПоляОбъектаИсточника()
	
	Поля = Новый Массив;
	
	Поля.Добавить(Элементы.Наименование);
	Поля.Добавить(Элементы.Код);
	Поля.Добавить(Элементы.Описание);
	Поля.Добавить(Элементы.ОтображаетсяВИнтерфейсе);
	Поля.Добавить(Элементы.НаименованиеВИнтерфейсе);
	
	Возврат Поля;
	
КонецФункции

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти