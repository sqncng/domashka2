#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Проекты.УстановитьОтборВСпискеПоПроекту(Список);
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("ВидОбъекта",
	      Версионирование.ВидВерсионируемогоОбъекта(Справочники.ФункцииСистемы.ПустаяСсылка()));
		  
	УстановитьУсловноеОформлениеСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененТекущийПроект" Тогда
		УстановитьОтборПоПроектуСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Владелец, ТекущиеДанные.Родитель, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Владелец, ТекущиеДанные.Родитель, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоПроектуСервер()
	
	Проекты.УстановитьОтборВСпискеПоПроекту(Список);
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьЭлемент(Ссылка, Владелец, Родитель, Вверх = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФункцииСистемы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ФункцииСистемы КАК ФункцииСистемы
	|ГДЕ
	|	ФункцииСистемы.Владелец = &Владелец
	|	И ФункцииСистемы.Родитель = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФункцииСистемы.Код"
	;
	
	Запрос.Параметры.Вставить("Владелец", Владелец);
	Запрос.Параметры.Вставить("Родитель", Родитель);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	КоличествоСтрок = Таблица.Количество();
	
	Если КоличествоСтрок < 2 Тогда
		// Нет смысла изменения порядка
		Возврат;
	КонецЕсли;
	
	ТекущийИндекс = Таблица.Индекс(Таблица.Найти(Ссылка, "Ссылка"));
	
	Если Вверх Тогда
		НовыйИндекс = ТекущийИндекс - 1;
	Иначе
		// перемещение вниз
		НовыйИндекс = ТекущийИндекс + 1;
	КонецЕсли;
	
	Если НовыйИндекс < 0 ИЛИ НовыйИндекс > КоличествоСтрок - 1 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		ПервыйЭлемент = Таблица[ТекущийИндекс].Ссылка.ПолучитьОбъект();
		ПервыйЭлемент.Заблокировать();
		
		ВторойЭлемент = Таблица[НовыйИндекс].Ссылка.ПолучитьОбъект();
		ВторойЭлемент.Заблокировать();
	Исключение
		ТекстСообщения = НСтр("ru = 'Перемещение не выполнено. Не удалось заблокировать функцию");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;
	
	ПервыйКод = ПервыйЭлемент.Код;
	ПервыйЭлемент.Код = ВторойЭлемент.Код;
	ВторойЭлемент.Код = ПервыйКод;
	
	ПервыйЭлемент.Записать();
	ПервыйЭлемент.Разблокировать();
	ВторойЭлемент.Записать();
	ВторойЭлемент.Разблокировать();
	
	ЗафиксироватьТранзакцию();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	УсловноеОформлениеСписка = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеСписка.Элементы.Очистить();
	
	ОбщегоНазначенияСППР.УстановитьУсловноеОформлениеСпискаОтветственный(УсловноеОформлениеСписка);
	КонтрольИзменений.УстановитьУсловноеОформлениеСпискаСостояниеКонтроля(УсловноеОформлениеСписка);
	
КонецПроцедуры

#КонецОбласти