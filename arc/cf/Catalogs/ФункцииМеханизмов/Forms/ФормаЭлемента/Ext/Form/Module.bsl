
#Область ОбработчикиСобытий
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Справочники.ОбъектыМетаданных.УстановитьТекстИндексаКартикиВТекстеЗапроса(Элементы.СписокОбъектовМетаданных);
	
	УсловноеОформлениеСписка = СписокОбъектовМетаданных.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеСписка.Элементы.Очистить();
	ОбщегоНазначенияСППР.УстановитьУсловноеОформлениеСпискаОтветственный(УсловноеОформлениеСписка);
	РегистрыСведений.СтатусыВстраиванияМеханизмов.УстановитьУсловноеОформлениеСтатусовВстраивания(УсловноеОформлениеСписка);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	
	ДанныеХранилища = РедактируемыйОбъект.ИнструкцияПоВстраиванию.Получить();
	Если ТипЗнч(ДанныеХранилища) = Тип("ФорматированныйДокумент") Тогда
		ИнструкцияПоВстраиванию = ДанныеХранилища;
	Иначе
		ИнструкцияПоВстраиванию = Новый ФорматированныйДокумент;
	КонецЕсли;
	
	ДанныеХранилища = РедактируемыйОбъект.ПрограммныйИнтерфейс.Получить();
	Если ТипЗнч(ДанныеХранилища) = Тип("ФорматированныйДокумент") Тогда
		ПрограммныйИнтерфейс = ДанныеХранилища;
	Иначе
		ПрограммныйИнтерфейс = Новый ФорматированныйДокумент;
	КонецЕсли;
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ИнструкцияПоВстраиванию = Новый ХранилищеЗначения(ИнструкцияПоВстраиванию);
	ТекущийОбъект.ПрограммныйИнтерфейс = Новый ХранилищеЗначения(ПрограммныйИнтерфейс);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// ЗадачиПроцессов
	ЗадачиПроцессов.ЗаписатьДанныеСогласующихРесурсыПредмета(ЭтотОбъект, Объект.Ссылка);
	// Конец ЗадачиПроцессов
	
	УстановитьПараметрыСпискаОбъектовМетаданных();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УстановитьОтборПоСтатусу(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВстраиваетсяВСправочникиПриИзменении(Элемент)
	УстановитьПараметрыСпискаОбъектовМетаданных();
КонецПроцедуры

&НаКлиенте
Процедура ВстраиваетсяВДокументыПриИзменении(Элемент)
	УстановитьПараметрыСпискаОбъектовМетаданных();
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	УстановитьПараметрыСпискаОбъектовМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяРеквизитаОбъектаПриИзменении(Элемент)
	ИмяРеквизитаОбъектаПриИзмененииНаСервере();
КонецПроцедуры

// ЗадачиПроцессов

&НаКлиенте
Процедура Подключаемый_ОбработкаНавигационнойСсылкиСогласующиеРесурс(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ЗадачиПроцессовКлиент.ОбработкаНавигационнойСсылкиСогласующиеРесурс(ЭтотОбъект,
	                                                                    Элемент,
	                                                                    НавигационнаяСсылкаФорматированнойСтроки,
	                                                                    СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбработатьИзменениеСогласующихРесурсыПоПредмету()
	
	ЗадачиПроцессов.ОбработатьИзменениеСогласующихРесурсыПоПредмету(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СогласующийРесурсПриИзменении()

	ЗадачиПроцессовКлиент.ОтразитьИзменениеЕдинственногоСогласующегоРесурса(ЭтотОбъект);

КонецПроцедуры

// Конец ЗадачиПроцессов

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписокОбъектовМетаданных

&НаКлиенте
Процедура СписокОбъектовМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокОбъектовМетаданныхКомментарий" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОбработчика = Новый Структура("НовыйСтатус", Неопределено);
		Обработчик = Новый ОписаниеОповещения("ОбработкаВводаКомментария",ЭтаФорма, ПараметрыОбработчика);
		ПоказатьВводСтроки(Обработчик,Элемент.ТекущиеДанные.Комментарий,НСтр("ru = 'Укажите комментарий'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура НеобходимоВстроить(Команда)
	
	УстановитьСтатусФункции(ПредопределенноеЗначение("Перечисление.СтатусыВстраиванияФункцийМеханизмов.НеобходимоВстроить"));
	
КонецПроцедуры

&НаКлиенте
Процедура НеВстраивается(Команда)
	
	УстановитьСтатусФункции(ПредопределенноеЗначение("Перечисление.СтатусыВстраиванияФункцийМеханизмов.НеВстраивается"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяАнализ(Команда)
	
	УстановитьСтатусФункции(ПредопределенноеЗначение("Перечисление.СтатусыВстраиванияФункцийМеханизмов.ТребуетсяАнализ"));
	
КонецПроцедуры

&НаКлиенте
Процедура Встроена(Команда)
	
	УстановитьСтатусФункции(ПредопределенноеЗначение("Перечисление.СтатусыВстраиванияФункцийМеханизмов.Встроена"));
	
КонецПроцедуры

&НаКлиенте
Процедура НеВстраиваетсяМеханизм(Команда)
	
	УстановитьСтатусФункции("НеВстраиваетсяМеханизм");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомментарийВстраивания(Команда)
	
	Если Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не выбраны объекты метаданных для установки комментария.'"));
	Иначе
		ПараметрыОбработчика = Новый Структура("НовыйСтатус", Неопределено);
		Обработчик = Новый ОписаниеОповещения("ОбработкаВводаКомментария", ЭтаФорма, ПараметрыОбработчика);
		ПоказатьВводСтроки(Обработчик,Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Комментарий,НСтр("ru = 'Укажите комментарий'"));
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	// ЗадачиПроцессов
	ЗадачиПроцессов.ОтобразитьИнформациюПоСогласующимВФорме(ЭтотОбъект, Объект.Ссылка, "ГруппаОсновноеЛево");
	// Конец ЗадачиПроцессов
	
	УстановитьПараметрыСпискаОбъектовМетаданных();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСпискаОбъектовМетаданных()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"Ссылка", 
		Объект.Ссылка);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"Механизм", 
		Объект.Владелец);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"ТекущийПроект", 
		ПараметрыСеанса.ТекущийПроект);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"ВстраиваетсяВДокументы", 
		Объект.ВстраиваетсяВДокументы);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"ВстраиваетсяВСправочники", 
		Объект.ВстраиваетсяВСправочники);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"ИмяРеквизитаОбъекта", 
		?(ПустаяСтрока(ИмяРеквизитаОбъекта), "", "%"+ИмяРеквизитаОбъекта+"%"));
		
	СформироватьОтборыПоСтатусам();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСтатусу(ОтборСтатуса)
	
	РегистрыСведений.СтатусыВстраиванияМеханизмов.УстановитьОтборСпискаПоСтатусу(СписокОбъектовМетаданных, ОтборСтатуса, ОтборПоСтатусам);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусФункции(НовыйСтатус) Экспорт
	
	Если Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не выбраны объекты метаданных для установки статуса.'"));
	ИначеЕсли НовыйСтатус = ПредопределенноеЗначение("Перечисление.СтатусыВстраиванияФункцийМеханизмов.НеобходимоВстроить") Тогда
		ПараметрыОбработчика = Новый Структура("НовыйСтатус", НовыйСтатус);
		Обработчик = Новый ОписаниеОповещения("ОбработкаВводаКомментария",ЭтаФорма, ПараметрыОбработчика);
		ПоказатьВводСтроки(Обработчик,,НСтр("ru = 'Укажите комментарий'"));
	Иначе
		УстановитьСтатусФункцииНаСервере(НовыйСтатус, Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Комментарий);
	КонецЕсли;
	
	Оповестить("ИзмененСтатусФункции");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВводаКомментария(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		УстановитьСтатусФункцииНаСервере(ДополнительныеПараметры.НовыйСтатус, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусФункцииНаСервере(НовыйСтатус, Комментарий = "")
	
	Если НовыйСтатус = Неопределено Тогда
		РегистрыСведений.СтатусыВстраиванияМеханизмов.УстановитьКомментарийВстраивания(
			Комментарий,
			Объект.Владелец,
			Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки,
			Объект.Ссылка);
	Иначе
		РегистрыСведений.СтатусыВстраиванияМеханизмов.УстановитьСтатусВстраивания(
			НовыйСтатус,
			Объект.Владелец,
			Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки,
			Объект.Ссылка,
			Комментарий);
	КонецЕсли;
	
	Элементы.СписокОбъектовМетаданных.Обновить();
	СформироватьОтборыПоСтатусам();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтборыПоСтатусам()
	
	ОтборПоСтатусам = РегистрыСведений.СтатусыВстраиванияМеханизмов.СтрокаОтборовПоСтатусам(СписокОбъектовМетаданных);
	
КонецПроцедуры

&НаСервере
Процедура ИмяРеквизитаОбъектаПриИзмененииНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокОбъектовМетаданных, 
		"ИмяРеквизитаОбъекта", 
		"%"+ИмяРеквизитаОбъекта+"%");
		
	СформироватьОтборыПоСтатусам();
	
КонецПроцедуры

#КонецОбласти