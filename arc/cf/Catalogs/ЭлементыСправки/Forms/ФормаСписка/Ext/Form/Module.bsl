
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьПараметры();
	
	УстановитьДоступностьКомандБуфераОбмена();
	УстановитьДоступностьКомандыВеденияСправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КопированиеЭлементовСправки" Тогда
		УстановитьДоступностьКомандБуфераОбмена();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Владелец, ТекущиеДанные.Родитель, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьЭлемент(ТекущиеДанные.Ссылка, ТекущиеДанные.Владелец, ТекущиеДанные.Родитель, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьЭлемент(Ссылка, Владелец, Родитель, Вверх = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлементыСправки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЭлементыСправки КАК ЭлементыСправки
	|ГДЕ
	|	ЭлементыСправки.Владелец = &Владелец
	|	И ЭлементыСправки.Родитель = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлементыСправки.ПолныйКод"
	;
	
	Запрос.Параметры.Вставить("Владелец", Владелец);
	Запрос.Параметры.Вставить("Родитель", Родитель);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	КоличествоСтрок = Таблица.Количество();
	
	Если КоличествоСтрок < 2 Тогда
		// Нет смысла изменения порядка
		Возврат;
	КонецЕсли;
	
	// строка должна быть найдена всегда
	ТекущийИндекс = Таблица.Индекс(Таблица.Найти(Ссылка, "Ссылка"));
	
	Если Вверх Тогда
		НовыйИндекс = ТекущийИндекс - 1;
	Иначе
		// перемещение вниз
		НовыйИндекс = ТекущийИндекс + 1;
	КонецЕсли;
	
	Если НовыйИндекс < 0 ИЛИ НовыйИндекс > КоличествоСтрок - 1 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		ПервыйЭлемент = Таблица[ТекущийИндекс].Ссылка.ПолучитьОбъект();
		ПервыйЭлемент.Заблокировать();
		
		ВторойЭлемент = Таблица[НовыйИндекс].Ссылка.ПолучитьОбъект();
		ВторойЭлемент.Заблокировать();
	Исключение
		ТекстСообщения = НСтр("ru = 'Перемещение не выполнено. Не удалось заблокировать элемент справки'");
		Сообщить(ТекстСообщения);
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;
	
	ПервыйКод = ПервыйЭлемент.Код;
	ПервыйЭлемент.Код = ВторойЭлемент.Код;
	ВторойЭлемент.Код = ПервыйКод;
	
	ПервыйЭлемент.Записать();
	ПервыйЭлемент.Разблокировать();
	ВторойЭлемент.Записать();
	ВторойЭлемент.Разблокировать();
	
	ЗафиксироватьТранзакцию();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьЭлементы(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено 
		И Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru='Не указан элемент для копирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	КопируемыеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Владелец = Элементы.Список.ДанныеСтроки(Элементы.Список.ВыделенныеСтроки[1]).Владелец;	
	Иначе	
		Владелец = Элементы.Список.ТекущиеДанные.Владелец;
	КонецЕсли;
	
	СкопироватьЭлементыСервер(КопируемыеСтроки, Владелец);
	
	Оповестить("КопированиеЭлементовСправки");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивЭлементовКопирования(МассивЭллементов, Владелец);

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлементыСправки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЭлементыСправки КАК ЭлементыСправки
	|ГДЕ
	|	ЭлементыСправки.Владелец = &Владелец
	|	И ЭлементыСправки.Ссылка В(&МассивЭллементов)
	|	И (НЕ ЭлементыСправки.Родитель В (&МассивЭллементов)
	|			ИЛИ ЭлементыСправки.Родитель = ЗНАЧЕНИЕ(Справочник.ЭлементыСправки.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	Запрос.Параметры.Вставить("Владелец", Владелец);
	Запрос.Параметры.Вставить("МассивЭллементов", МассивЭллементов);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")

КонецФункции	
	
&НаКлиенте
Процедура ВставитьЭлементы(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		
		Владелец = Неопределено;
		
		МассивЭлементовОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор, "Владелец");
		
		Если МассивЭлементовОтбора.Количество()>0 Тогда
			ЭлементОтбора = МассивЭлементовОтбора[0];
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				Если ЗначениеЗаполнено(ЭлементОтбора.ПравоеЗначение)
					И ЭлементОтбора.Использование
					И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					Владелец = ЭлементОтбора.ПравоеЗначение;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Владелец = Неопределено Тогда
			ОчиститьСообщения();
			ТекстСообщения = НСтр("ru='Не задан владелец элементов справки. Вставка невозможна'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Установить для новых элементов признак ""Включать в справку""?'");
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Включить в справку'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Не включать в справку'"));
	ОписаниеОповещения = Новый ОписаниеОповещения("ВставитьЭлементыЗавершение", ЭтотОбъект, Владелец);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВедениеСправкиВыделенных(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МассивОбъектов", Новый Массив);
	ПараметрыФормы.Вставить("Проект",         Проект);
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока <> Неопределено Тогда
			ПараметрыФормы.МассивОбъектов.Добавить(ТекущаяСтрока.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыФормы.МассивОбъектов.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ЭлементыСправки.Форма.ГрупповоеРедактирование", ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьПараметры()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			
			ОткрываемыйОбъект = Параметры.Отбор.Владелец;
			Проект            = ОбщегоНазначенияСППРВызовСервера.ПроектОбъекта(ОткрываемыйОбъект);
			
			ОбъектПоставщика = РаботаСоСправкой.ПолучитьОбъектПоставщика(ОткрываемыйОбъект);
			Если ЗначениеЗаполнено(ОбъектПоставщика) Тогда
				
				ПроектПоставщика = ОбщегоНазначенияСППРВызовСервера.ПроектОбъекта(ОбъектПоставщика);
				ПроектВарианты   = РаботаСоСправкойПовтИсп.ПроектыДляКоторыхВедетсяСправка(ПроектПоставщика);
				
				Если ПроектВарианты.Найти(Проект, "Проект") <> Неопределено Тогда
					
					Параметры.Отбор.Владелец = ОбъектПоставщика;
					Проект                   = ПроектПоставщика;
					
				КонецЕсли;
				
			КонецЕсли; 
			
			ШаблонЗаголовка = "%ИмяПроекта%: %ИмяОбъекта%";
			ШаблонЗаголовка = СтрЗаменить(ШаблонЗаголовка, "%ИмяПроекта%", Строка(Проект));
			ШаблонЗаголовка = СтрЗаменить(ШаблонЗаголовка, "%ИмяОбъекта%", Строка(Параметры.Отбор.Владелец));
			
			Заголовок = ШаблонЗаголовка;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьЭлементыСервер(СтрокиКопирования, Владелец)
	
	МассивКопирования = ПолучитьМассивЭлементовКопирования(СтрокиКопирования, Владелец);
	
	СтруктураКопирования = Новый Структура;
	СтруктураКопирования.Вставить("КопированиеЭлементовСправки",);
	СтруктураКопирования.Вставить("МассивКопирования",МассивКопирования);
		
	ХранилищаНастроек.ХранилищеБуфераОбмена.ПоместитьСправкуВБуферОбмена(СтруктураКопирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьЭлементыЗавершение(РезультатВопроса, Владелец) Экспорт
	
	ВключитьВСправкуНовыеЭлементы = (РезультатВопроса = КодВозвратаДиалога.Да);
	
	КоличествоЭлементов = 0;
	ВставитьЭлементыСервер(Элементы.Список.ТекущаяСтрока, Владелец, ВключитьВСправкуНовыеЭлементы, КоличествоЭлементов);
	
	Если КоличествоЭлементов > 0 Тогда
		ТекстСообщения = НСтр("ru='Скопировано элементов: %Количество%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", КоличествоЭлементов);
		ТекстЗаголовка = НСтр("ru='Копирование элементов справки'");
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

 &НаСервере
Процедура ВставитьЭлементыСервер(Родитель, Владелец, ВключитьВСправкуНовыеЭлементы, КоличествоЭлементов)
	
	СтруктураКопирвания = ХранилищаНастроек.ХранилищеБуфераОбмена.ПолучитьСправкуИзБуфераОбмена();
	
	Если ТипЗнч(СтруктураКопирвания) <> Тип("Структура") Тогда
		Возврат;
	Иначе	
		Если Не СтруктураКопирвания.Свойство("КопированиеЭлементовСправки") Тогда	
			Возврат;	
		КонецЕсли;	
	КонецЕсли;
	
	МассивКопирования = СтруктураКопирвания.МассивКопирования;
	
	Для Каждого КопируемыйЭлементСправки Из МассивКопирования Цикл
		
		Если ТипЗнч(КопируемыйЭлементСправки) <> Тип("СправочникСсылка.ЭлементыСправки") Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Родитель) Тогда
			ВладелецЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Родитель, "Владелец");
		Иначе
			ВладелецЭлемента = Владелец;
		КонецЕсли;
		
		ПроектВладельцаЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецЭлемента, "Владелец");
		Если ТипЗнч(ПроектВладельцаЭлемента) <> Тип("СправочникСсылка.Проекты") Тогда
			ПроектВладельцаЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроектВладельцаЭлемента, "Владелец");
		КонецЕсли;
		
		ПроектКопируемогоЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КопируемыйЭлементСправки, "Владелец");
		Если ТипЗнч(ПроектКопируемогоЭлемента) <> Тип("СправочникСсылка.Проекты") Тогда
			ПроектКопируемогоЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроектКопируемогоЭлемента, "Владелец");
			Если ТипЗнч(ПроектКопируемогоЭлемента) <> Тип("СправочникСсылка.Проекты") Тогда
				ПроектКопируемогоЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроектКопируемогоЭлемента, "Владелец");
			КонецЕсли;
		КонецЕсли;
		
		// Копирование тэгов поддерживается только внутри одного проекта
		КопироватьПроектыВключающиеСправку = (ПроектКопируемогоЭлемента = ПроектВладельцаЭлемента);
		
		ДеревоЭлементов = ДеревоКопируемыхЭлементов(КопируемыйЭлементСправки, ПроектВладельцаЭлемента);
		
		НачатьТранзакцию();
		
		Попытка
			СоздатьЭлементы(ДеревоЭлементов.Строки, Родитель, ВладелецЭлемента, ВключитьВСправкуНовыеЭлементы, 
				КоличествоЭлементов, КопироватьПроектыВключающиеСправку);
			ЗафиксироватьТранзакцию();
			Элементы.Список.Обновить();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ДеревоКопируемыхЭлементов(КопируемыйЭлементСправки, ПроектВладельцаЭлемента)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлементыСправки.Ссылка КАК Ссылка,
	|	ЭлементыСправки.Наименование,
	|	ЭлементыСправки.ТекстСправки,
	|	ЭлементыСправки.СтильФорматированияСправки,
	|	ЭлементыСправки.ПодменяющийЭлементСправки,
	|	ЭлементыСправки.ПометкаУдаления,
	|	ЭлементыСправки.ГиперссылкиДляСправки.(
	|		Ссылка,
	|		НомерСтроки,
	|		ТекстГиперссылки,
	|		Гиперссылка
	|	),
	|	ЭлементыСправки.КартинкиДляСправки.(
	|		Ссылка,
	|		НомерСтроки,
	|		НазваниеКартинки,
	|		Картинка
	|	),
	|	ЭлементыСправки.ПроектыВключающиеСправку.(
	|		Ссылка,
	|		НомерСтроки,
	|		Проект
	|	)
	|ИЗ
	|	Справочник.ЭлементыСправки КАК ЭлементыСправки
	|ГДЕ
	|	ЭлементыСправки.Ссылка В ИЕРАРХИИ(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПолныйКод ИЕРАРХИЯ"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", КопируемыйЭлементСправки);
	Запрос.УстановитьПараметр("Проект", ПроектВладельцаЭлемента);
	
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементы(Строки, Родитель, Владелец, ВключитьВСправкуНовыеЭлементы, 
                          КоличествоЭлементов, КопироватьПроектыВключающиеСправку = Ложь)
		
	Для Каждого Строка Из Строки Цикл
		НовыйЭлемент = СоздатьЭлемент(Строка, Родитель, Владелец, ВключитьВСправкуНовыеЭлементы, 
		                              КопироватьПроектыВключающиеСправку);
		КоличествоЭлементов = КоличествоЭлементов + 1;
		СоздатьЭлементы(Строка.Строки, НовыйЭлемент, Владелец, ВключитьВСправкуНовыеЭлементы, 
		                КоличествоЭлементов, КопироватьПроектыВключающиеСправку);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СоздатьЭлемент(Строка, Родитель, Владелец, ВключитьВСправкуНовыеЭлементы, 
                       КопироватьПроектыВключающиеСправку = Ложь)
	
	НовыйЭлемент = Справочники.ЭлементыСправки.СоздатьЭлемент();
	НовыйЭлемент.Владелец = Владелец;
	НовыйЭлемент.Родитель = Родитель;
	ЗаполнитьЗначенияСвойств(НовыйЭлемент, Строка, "Наименование, ТекстСправки, СтильФорматированияСправки, ПодменяющийЭлементСправки, ПометкаУдаления");
	
	НовыйЭлемент.ВключатьВСправку = ВключитьВСправкуНовыеЭлементы;
	
	ТаблицаГиперссылок = Строка.ГиперссылкиДляСправки;
	
	Для Каждого СтрокаТаблицы из ТаблицаГиперссылок Цикл
		СтрокаТЧ = НовыйЭлемент.ГиперссылкиДляСправки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТаблицы, "ТекстГиперссылки, Гиперссылка");
	КонецЦикла;
	
	ТаблицаКартинок = Строка.КартинкиДляСправки;
	
	Для Каждого СтрокаТаблицы из ТаблицаКартинок Цикл
		СтрокаТЧ = НовыйЭлемент.КартинкиДляСправки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТаблицы, "НазваниеКартинки, Картинка");
	КонецЦикла;
	
	Если КопироватьПроектыВключающиеСправку Тогда
	
		ТаблицаПроектовВключающихСправку = Строка.ПроектыВключающиеСправку;
		
		Для Каждого СтрокаТаблицы из ТаблицаПроектовВключающихСправку Цикл
			СтрокаТЧ = НовыйЭлемент.ПроектыВключающиеСправку.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТаблицы, "Проект");
		КонецЦикла;
	
	КонецЕсли; 
	
	НовыйЭлемент.Записать();
	
	Возврат НовыйЭлемент.Ссылка;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьКомандБуфераОбмена()
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		
		ДанныеКопирования = ХранилищаНастроек.ХранилищеБуфераОбмена.ПолучитьСправкуИзБуфераОбмена();
		
		Если ТипЗнч(ДанныеКопирования) = Тип("Структура") Тогда
			Если ДанныеКопирования.Свойство("КопированиеЭлементовСправки") Тогда	
				ВставкаВозможна = Истина;
			Иначе
				ВставкаВозможна = Ложь;
			КонецЕсли;
		Иначе
			ВставкаВозможна = Ложь;
		КонецЕсли;
		
		Элементы.ФормаВставитьЭлементы.Доступность = ВставкаВозможна;
		
	Иначе
		Элементы.ФормаВставитьЭлементы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКомандыВеденияСправки()
	
	ПроектыДляКоторыхВедетсяСправка = РаботаСоСправкойПовтИсп.ПроектыДляКоторыхВедетсяСправка(Проект);
	КомандаДоступна                 = ПроектыДляКоторыхВедетсяСправка.Количество() > 0;
	
	Элементы.ФормаИзменитьВедениеСправкиВыделенных.Видимость = КомандаДоступна
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКартинку(Команда)
	
	ПараметрыЗаполнения = Новый Структура();
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		ПараметрыЗаполнения.Вставить("Владелец", Список.Отбор.Элементы[0].ПравоеЗначение);
	КонецЕсли;
	ПараметрыЗаполнения.Вставить("Родитель", Элементы.Список.ТекущаяСтрока); 
	ПараметрыЗаполнения.Вставить("Картинка", Истина);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
	ОткрытьФорму("Справочник.ЭлементыСправки.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТекст(Команда)
	
	ПараметрыЗаполнения = Новый Структура();
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		ПараметрыЗаполнения.Вставить("Владелец", Список.Отбор.Элементы[0].ПравоеЗначение);
	КонецЕсли;
	ПараметрыЗаполнения.Вставить("Родитель", Элементы.Список.ТекущаяСтрока); 
	ПараметрыЗаполнения.Вставить("Картинка", Ложь);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
	ОткрытьФорму("Справочник.ЭлементыСправки.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти
