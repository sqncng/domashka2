
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Проект = ОбщегоНазначенияСППРВызовСервера.ПроектОбъекта(Объект.Владелец);
	
	СоздатьРеквизитыПроектовСправки();
	ОтразитьПроектыВключающиеСправку();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КартинкиСправки") Тогда
		
		Если Объект.Картинка Тогда
			
			АдресКартинки = ПолучитьНавигационнуюСсылку(ВыбранноеЗначение, "ХранилищеКартинки");
			Элементы.ПолеКартинки.Обновить();
			Если Объект.КартинкиДляСправки.Количество() = 0 Тогда
				ДобавитьКартинкуВТЧ(ВыбранноеЗначение, ВыбранноеЗначение);
			ИначеЕсли Объект.КартинкиДляСправки.Количество() = 1 Тогда
				Объект.КартинкиДляСправки[0].Картинка = ВыбранноеЗначение;
			КонецЕсли;
			
			Элементы.РедактироватьКартинку.Доступность = Истина;
			Элементы.СохранитьКартинку.Доступность = Истина;

		Иначе
			
			Если СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) > 0 Тогда
				НазваниеКартинки = Элементы.ПолеВвода.ВыделенныйТекст;
			Иначе
				НазваниеКартинки = ВыбранноеЗначение;
			КонецЕсли;
			ДобавитьКартинкуВТекст(НазваниеКартинки);
			ДобавитьКартинкуВТЧ(НазваниеКартинки, ВыбранноеЗначение);
						
		КонецЕсли;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ПроектыВключающиеСправку.Очистить();
	
	Если СвязьПроектовИРеквизитов.Количество() > 0
	   И СвязьПроектовИРеквизитов.Количество() <> ОтмеченныеПроекты.Количество() Тогда
		
		Для Каждого СтрокаОтметки Из ОтмеченныеПроекты Цикл
			
			НоваяСтрока = Объект.ПроектыВключающиеСправку.Добавить();
			НоваяСтрока.Проект = СтрокаОтметки.Проект;
			
		КонецЦикла; 
	КонецЕсли;
	
	Если Объект.Картинка Тогда
		Если Объект.КартинкиДляСправки.Количество() > 0 Тогда
			Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда
				ПараметрыКартинки = Новый Структура;
				ПараметрыКартинки.Вставить("ПолноеИмя", Объект.КартинкиДляСправки[0].НазваниеКартинки);
				ПараметрыКартинки.Вставить("АдресВременногоХранилища", АдресКартинки);
				ЗаписатьКартинкуСправки(ПараметрыКартинки);
				Объект.КартинкиДляСправки[0].Картинка = ПараметрыКартинки.Ссылка;
			КонецЕсли;
			Объект.ТекстСправки = НСтр("ru = 'Картинка'") + " " + Объект.КартинкиДляСправки[0].Картинка;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.Картинка Тогда
		Элементы.РедактироватьКартинку.Доступность = Истина;
		Элементы.СохранитьКартинку.Доступность = Истина;
	КонецЕсли;

	ЗаполнитьКэшируемыеЗначения(Объект.ГиперссылкиДляСправки);
	Оповестить("Запись_ЭлементыСправки",, Объект.Владелец);	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КартинкаСправки" Тогда
		
		КартинкаСправки = Параметр;
		СтруктураПоиска = Новый Структура("Картинка", КартинкаСправки);
		СписокСтрок = Объект.КартинкиДляСправки.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() > 0 Тогда
			СписокСтрок[0].Картинка = КартинкаСправки;
		КонецЕсли;
		
		Если Объект.Картинка Тогда
			Элементы.ПолеКартинки.Обновить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Объект.ПодменяющийЭлементСправки) Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Проект = ОбщегоНазначенияСППРВызовСервера.ПроектОбъекта(Объект.Владелец);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаПриИзменении(Элемент)
	
	ОбновитьГиперссылкиСправки();
	ОбновитьКартинкиСправки();
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаПриИзменении(Элемент)
	
	УстановитьВидимостьВЗависимостиОтСтиляФорматирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыВключающиеСправкуПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	ОтборСвязи  = Новый Структура("ИмяРеквизита", Элемент.Имя);
	СтрокаСвязи = СвязьПроектовИРеквизитов.НайтиСтроки(ОтборСвязи)[0];
	
	Если ЭтаФорма[Элемент.Имя] = Истина Тогда 
		
		СтрокаОтметки = ОтмеченныеПроекты.Добавить();
		СтрокаОтметки.Проект = СтрокаСвязи.Проект;
		
	Иначе 
		
		Если ОтмеченныеПроекты.Количество() = 1 Тогда
			ЭтаФорма[Элемент.Имя] = Истина;
			ПоказатьПредупреждение(, НСтр("ru = 'Элемент справки должен относиться хотя бы к одному проекту.'"));
			Возврат;
		КонецЕсли; 
		
		Отбор = Новый Структура("Проект", СтрокаСвязи.Проект);
		СтрокиОтметки = ОтмеченныеПроекты.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаОтметки Из СтрокиОтметки Цикл
			ОтмеченныеПроекты.Удалить(СтрокаОтметки);
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыГиперссылкиДляСправки

&НаКлиенте
Процедура ГиперссылкиДляСправкиГиперссылкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ГиперссылкиДляСправки.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Гиперссылка) = Тип("СправочникСсылка.ОбъектыМетаданных") 
		ИЛИ ТипЗнч(ТекущиеДанные.Гиперссылка) = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораГиперссылки(Текст, Проект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиТекстоваяГиперссылкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГиперссылкиДляСправки.ТекущиеДанные;
	Если ТекущиеДанные.ТекстоваяГиперссылка И ТипЗнч(ТекущиеДанные.Гиперссылка) <> Тип("Строка") Тогда
		ТекущиеДанные.Гиперссылка = "";
	ИначеЕсли НЕ ТекущиеДанные.ТекстоваяГиперссылка И ТипЗнч(ТекущиеДанные.Гиперссылка) = Тип("Строка") Тогда
		ТекущиеДанные.Гиперссылка = ПредопределенноеЗначение("Справочник.ОбъектыМетаданных.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиГиперссылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ГиперссылкиДляСправки.ТекущиеДанные;
	
	Если ТекущиеДанные.ТекстоваяГиперссылка Тогда
		Возврат;
	КонецЕсли;
	
	Гиперссылка = ТекущиеДанные.Гиперссылка;
	
	ПараметрыВыбораСсылки = Новый Структура;
	ПараметрыВыбораСсылки.Вставить("ВыборФункций", Истина);
	ПараметрыВыбораСсылки.Вставить("ВыборОбъектовМетаданных", Истина);
	ПараметрыВыбораСсылки.Вставить("ВыборФормОбъектовМетаданных", Истина);
	ПараметрыВыбораСсылки.Вставить("ВыборПодсистем", Истина);
	
	ОбщегоНазначенияСППРКлиент.ОткрытьФормуВыбораГиперссылки(Элемент, Проект, ПараметрыВыбораСсылки, Гиперссылка);

КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиГиперссылкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ГиперссылкиДляСправки.ТекущиеДанные;
	
	Если ТекущиеДанные.ТекстоваяГиперссылка Тогда
		ТекущиеДанные.Гиперссылка = "";
	Иначе
		ТекущиеДанные.Гиперссылка = ПредопределенноеЗначение("Справочник.ОбъектыМетаданных.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиПриИзменении(Элемент)
	
	ОбновитьГиперссылкиСправки();
		
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НЕ НоваяСтрока Тогда
		
		ТекстБуфер = Элемент.ТекущиеДанные.ТекстГиперссылки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкиДляСправкиТекстГиперссылкиПриИзменении(Элемент)
	
	Если Элемент.ТекстРедактирования <> ТекстБуфер Тогда
				
		ОстатокТекстаСправки = Объект.ТекстСправки;
		
		ПозицияОткрывающегоТэга = Найти(ОстатокТекстаСправки, "<A>");

		Пока ПозицияОткрывающегоТэга > 0 Цикл
		
			ОстатокТекстаСправки = Сред(ОстатокТекстаСправки, ПозицияОткрывающегоТэга + 3);
			
			ПозицияЗакрывающегоТэга = Найти(ОстатокТекстаСправки, "</A>");
						
			Если ПозицияЗакрывающегоТэга > 0 Тогда
				ТекстГиперссылки = СокрЛП(Сред(ОстатокТекстаСправки, 1, ПозицияЗакрывающегоТэга - 1));
				
				Если Найти(ТекстГиперссылки, "<A>") = 0 Тогда
					Если ВРег(ТекстБуфер) = ВРег(ТекстГиперссылки) Тогда
						ТекстГиперссылки = "<A>" + ТекстГиперСсылки + "</A>";
						НовыйТекстГиперссылки = "<A>" + Элемент.ТекстРедактирования + "</A>";
						Объект.ТекстСправки = СтрЗаменить(Объект.ТекстСправки, ТекстГиперссылки, НовыйТекстГиперссылки);	
					КонецЕсли;
					ОстатокТекстаСправки = Сред(ОстатокТекстаСправки, ПозицияЗакрывающегоТэга + 4);
				КонецЕсли;
			КонецЕсли;
			
			ПозицияОткрывающегоТэга = Найти(ОстатокТекстаСправки, "<A>");
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыГиперссылкиДляСправки

&НаКлиенте
Процедура КартинкиДляСправкиПриИзменении(Элемент)
	
	ОбновитьКартинкиСправки();
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкиДляСправкиНазваниеКартинкиПриИзменении(Элемент)
	
	Если Элемент.ТекстРедактирования <> ТекстБуфер Тогда
		
		ОстатокТекстаСправки = Объект.ТекстСправки;
		
		ПозицияОткрывающегоТэга = Найти(ОстатокТекстаСправки, "<IMG>");

		Пока ПозицияОткрывающегоТэга > 0 Цикл
		
			ОстатокТекстаСправки = Сред(ОстатокТекстаСправки, ПозицияОткрывающегоТэга + 5);
			
			ПозицияЗакрывающегоТэга = Найти(ОстатокТекстаСправки, "</IMG>");
						
			Если ПозицияЗакрывающегоТэга > 0 Тогда
				НазваниеКартинки = СокрЛП(Сред(ОстатокТекстаСправки, 1, ПозицияЗакрывающегоТэга - 1));
				
				Если Найти(НазваниеКартинки, "<IMG>") = 0 Тогда
					Если ВРег(ТекстБуфер) = ВРег(НазваниеКартинки) Тогда
						НазваниеКартинки = "<IMG>" + НазваниеКартинки + "</IMG>";
						НовоеНазваниеКартинки = "<IMG>" + Элемент.ТекстРедактирования + "</IMG>";
						Объект.ТекстСправки = СтрЗаменить(Объект.ТекстСправки, НазваниеКартинки, НовоеНазваниеКартинки);
					КонецЕсли;
					ОстатокТекстаСправки = Сред(ОстатокТекстаСправки, ПозицияЗакрывающегоТэга + 6);
				КонецЕсли;
			КонецЕсли;
			
			ПозицияОткрывающегоТэга = Найти(ОстатокТекстаСправки, "<IMG>");
			
		КонецЦикла;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КартинкиДляСправкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НЕ НоваяСтрока Тогда
		
		ТекстБуфер = Элемент.ТекущиеДанные.НазваниеКартинки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкиДляСправкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КартинкиСправки") Тогда
		Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка = ВыбранноеЗначение;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КартинкиДляСправкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КартинкиДляСправкиКартинка" Тогда
		ПараметрыФормы = Новый Структура("Ключ", Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка);
		ОткрытьФорму("Справочник.КартинкиСправки.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Полужирный(Команда)
	
	ДобавитьТегКВыделенномуТексту("<B>", "</B>");
	
КонецПроцедуры

&НаКлиенте
Процедура Курсив(Команда)
	
	ДобавитьТегКВыделенномуТексту("<I>", "</I>");
	
КонецПроцедуры

&НаКлиенте
Процедура Ссылка(Команда)
	
	// Разметка текста
	ВыделенныйТекст = Элементы.ПолеВвода.ВыделенныйТекст;
	Если СтрДлина(ВыделенныйТекст) > 255 Тогда
		ТекстСообщения = НСтр("ru = 'Длина выделенного текста не должна превышать 255 символов.'");
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Найти(ВыделенныйТекст, Символы.ПС) или Найти(ВыделенныйТекст, Символы.ВК) или Найти(ВыделенныйТекст, Символы.Таб) Тогда
		ТекстСообщения = НСтр("ru = 'Выделенный текст не должен содержать символов табуляции и переноса строки.'");
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ДобавитьТегКВыделенномуТексту("<A>", "</A>");
	
	ТекстГиперссылки = СокрЛП(ВыделенныйТекст);
	СтруктураОтбора = Новый Структура("ТекстГиперссылки", ТекстГиперссылки);
	МассивСтрок  = Объект.ГиперссылкиДляСправки.НайтиСтроки(СтруктураОтбора);
			
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаТЧ = Объект.ГиперссылкиДляСправки.Добавить();
		СтрокаТЧ.ТекстГиперссылки = ТекстГиперссылки;
		
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ОбъектыМетаданных") 
			ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
			СтрокаТЧ.Гиперссылка = ПредопределенноеЗначение("Справочник.ОбъектыМетаданных.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
    		
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКартинку(Команда)

	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");	
	ДиалогВыбораФайла.Фильтр = "(*.png;*.jpg;*.jpeg)|*.png;*.jpg;*.jpeg|" + 
		"(*.bmp;*.dib;*.rle;*.tif;*.gif;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.tif;*.gif;*.ico;*.wmf;*.emf)";	
	ДиалогВыбораФайла.Каталог = КаталогДокументов();
	ДополнительныеПараметры = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("ОбработатьДиалогВыбораФайла", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбораФайла.Показать(Оповещение);				
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКартинкуТЧ(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	ДиалогВыбораФайла.Фильтр = "(*.png;*.jpg;*.jpeg)|*.png;*.jpg;*.jpeg|" + 
		"(*.bmp;*.dib;*.rle;*.tif;*.gif;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.tif;*.gif;*.ico;*.wmf;*.emf)";
	ДиалогВыбораФайла.Каталог = КаталогДокументов();
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДляЗамены");
	Оповещение = Новый ОписаниеОповещения("ОбработатьДиалогВыбораФайла", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКартинкуИзБуфера(Команда)
	
	ОчиститьСообщения();
	
	КомпонентаУстановлена = РаботаСКартинкамиКлиент.ПроинициализироватьКомпоненту();
	Если Не КомпонентаУстановлена Тогда
		РаботаСКартинкамиКлиент.УстановитьКомпоненту();
	КонецЕсли;
		
	КомпонентаПолученияКартинкиИзБуфера = ПараметрыПриложения["СППР.КомпонентаПолученияКартинкиИзБуфера"];
    ПутьКФайлу = КомпонентаПолученияКартинкиИзБуфера.ПолучитьКартинкуИзБуфера();
    
	Если НЕ ПустаяСтрока(ПутьКФайлу) Тогда
		СтруктураИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
		ПараметрыКартинки = Новый Структура;
		ПараметрыКартинки.Вставить("Наименование", СтруктураИмениФайла.ИмяБезРасширения);
		ПараметрыКартинки.Вставить("Расширение", СтруктураИмениФайла.Расширение);
		ПараметрыКартинки.Вставить("ИзБуфера");
		Оповещение = Новый ОписаниеОповещения("ОбработатьПомещениеКартинки", ЭтотОбъект, ПараметрыКартинки);
		НачатьПомещениеФайла(Оповещение,, ПутьКФайлу, Ложь, УникальныйИдентификатор);
    Иначе
        ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Буфер обмена не содержит картинки'"));
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВставитьКартинкуИзБуфераТЧ(Команда)
	
	ОчиститьСообщения();
	
	КомпонентаУстановлена = РаботаСКартинкамиКлиент.ПроинициализироватьКомпоненту();
	Если Не КомпонентаУстановлена Тогда
		РаботаСКартинкамиКлиент.УстановитьКомпоненту();
	КонецЕсли;
		
	КомпонентаПолученияКартинкиИзБуфера = ПараметрыПриложения["СППР.КомпонентаПолученияКартинкиИзБуфера"];
    ПутьКФайлу = КомпонентаПолученияКартинкиИзБуфера.ПолучитьКартинкуИзБуфера();
    
	Если НЕ ПустаяСтрока(ПутьКФайлу) Тогда
		СтруктураИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
		ПараметрыКартинки = Новый Структура;
		ПараметрыКартинки.Вставить("Наименование", СтруктураИмениФайла.ИмяБезРасширения);
		ПараметрыКартинки.Вставить("Расширение", СтруктураИмениФайла.Расширение);
		ПараметрыКартинки.Вставить("ИзБуфера");
		ПараметрыКартинки.Вставить("ДляЗамены");
		Оповещение = Новый ОписаниеОповещения("ОбработатьПомещениеКартинки", ЭтотОбъект, ПараметрыКартинки);
		НачатьПомещениеФайла(Оповещение,, ПутьКФайлу, Ложь, УникальныйИдентификатор);
    Иначе
        ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Буфер обмена не содержит картинки'"));
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьКартинку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Проект", Проект);
	ОткрытьФорму("Справочник.КартинкиСправки.ФормаВыбора", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьКартинкуТЧ(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Проект", Проект);
	ОткрытьФорму("Справочник.КартинкиСправки.ФормаВыбора", ПараметрыФормы, Элементы.КартинкиДляСправки);

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрКартинки(Команда)
	КартинкаСправки = Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка;
	Картинка = Новый Картинка(ДвоичныеДанныеКартинки(КартинкаСправки));
	ПоказатьЗначение(,Картинка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКартинку(Команда)
	
	Если Объект.Картинка Тогда
		КартинкаСправки = Объект.КартинкиДляСправки[0].Картинка;
	Иначе
		КартинкаСправки = Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка;
	КонецЕсли;
	
	ДанныеКартинки = ДанныеКартинки(КартинкаСправки);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Введите имя файла'");
	ДиалогВыбораФайла.Расширение = ДанныеКартинки.Расширение;
	Фильтр = НСтр("ru = '(*%Расширение%)|*%Расширение%'");
	Фильтр = СтрЗаменить(Фильтр, "%Расширение%", ДанныеКартинки.Расширение);
	ДиалогВыбораФайла.Фильтр = Фильтр;
	ДиалогВыбораФайла.Каталог = КаталогДокументов();
	Оповещение = Новый ОписаниеОповещения("ОбработатьСохранениеФайла", ЭтотОбъект, ДанныеКартинки.ДвоичныеДанные);
	ДиалогВыбораФайла.Показать(Оповещение);				

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКартинку(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.КартинкиДляСправки[0].Картинка);
    ОткрытьФорму("Справочник.КартинкиСправки.ФормаОбъекта", ПараметрыФормы);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьВЗависимостиОтСтиляФорматирования()

	Если Объект.Картинка Тогда
		
		Элементы.ВидСправкиСтраницы.ТекущаяСтраница = Элементы.СправкаКартинка;
		Элементы.СтильФорматированияСправки.Заголовок = НСтр("ru='Стиль оформления картинки'");
		
		Если НЕ Объект.СтильФорматированияСправки.СтильКартинка Тогда
			Объект.СтильФорматированияСправки = Справочники.СтилиФорматирования.ПустаяСсылка();
		КонецЕсли;
		
		Если Объект.КартинкиДляСправки.Количество() > 0 Тогда
			Если НЕ ЭтоАдресВременногоХранилища(АдресКартинки) Тогда
				АдресКартинки =  ПолучитьНавигационнуюСсылку(Объект.КартинкиДляСправки[0].Картинка, "ХранилищеКартинки");
				Элементы.РедактироватьКартинку.Доступность = Истина;
				Элементы.СохранитьКартинку.Доступность = Истина;
			КонецЕсли;
		Иначе
			Элементы.РедактироватьКартинку.Доступность = Ложь;
			Элементы.СохранитьКартинку.Доступность = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.ВидСправкиСтраницы.ТекущаяСтраница = Элементы.СправкаТекст;
		Элементы.СтильФорматированияСправки.Заголовок = НСтр("ru='Стиль форматирования текста'");

		Если Объект.СтильФорматированияСправки.СтильКартинка Тогда
			Объект.СтильФорматированияСправки = Справочники.СтилиФорматирования.ПустаяСсылка();
		КонецЕсли;

		Если Объект.КартинкиДляСправки.Количество() = 0 Тогда
			Элементы.КартинкиДляСправкиПросмотрКартинки.Доступность = Ложь;
			Элементы.КартинкиДляСправкиВставитьКартинку.Доступность = Ложь;
			Элементы.КартинкиДляСправкиСохранитьКартинку.Доступность = Ложь;
			Элементы.КартинкиДляСправкиПодобратьКартинкуТЧ.Доступность = Ложь;
			Элементы.КартинкиДляСправкиВставитьКартинкуИзБуфераТЧ.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.СтильКартинка", Объект.Картинка);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.СтильФорматированияСправки.ПараметрыВыбора = НовыеПараметры;

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВЗависимостиОтПодменяющегоЭлемента()

	Если ЗначениеЗаполнено(Объект.ПодменяющийЭлементСправки) Тогда
		
		Элементы.ПолеВвода.Доступность = Ложь;
		Элементы.СтильФорматированияСправки.Доступность = Ложь;
		Элементы.ГиперссылкиДляСправки.Доступность = Ложь;
		Элементы.КомандыСправкаТекст.Доступность = Ложь;
		
	Иначе
		
		Элементы.ПолеВвода.Доступность = Истина;
		Элементы.СтильФорматированияСправки.Доступность = Истина;
		Элементы.ГиперссылкиДляСправки.Доступность = Истина;
		Элементы.КомандыСправкаТекст.Доступность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодменяющийЭлементСправкиПриИзменении(Элемент)
	
	Если Объект.Ссылка = Объект.ПодменяющийЭлементСправки Тогда
		Объект.ПодменяющийЭлементСправки = Неопределено;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Элемент справки не может ссылаться сам на себя'");
		Сообщение.Сообщить();
	КонецЕсли;
	
	УстановитьДоступностьВЗависимостиОтПодменяющегоЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодменяющийЭлементСправкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыДляВыбора = Новый Структура("ВыборЭлементовСправки", Истина);
	
	ОбщегоНазначенияСППРКлиент.ОткрытьФормуВыбораГиперссылки(Элемент, Проект, ПараметрыДляВыбора, Объект.ПодменяющийЭлементСправки);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКэшируемыеЗначения(ГиперссылкиДляСправки)
	
	Для Каждого СтрокаТЧ из ГиперссылкиДляСправки Цикл
		Если ТипЗнч(СтрокаТЧ.Гиперссылка) = Тип("Строка") Тогда
			СтрокаТЧ.ТекстоваяГиперссылка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОтразитьПроектыВключающиеСправку();
	ЗаполнитьКэшируемыеЗначения(Объект.ГиперссылкиДляСправки);
	УстановитьДоступностьВЗависимостиОтПодменяющегоЭлемента();
	УстановитьВидимостьВЗависимостиОтСтиляФорматирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТегКВыделенномуТексту(НачалоТега, КонецТега)

	Перем НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки;
	
	Элементы.ПолеВвода.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	
	Элементы.ПолеВвода.ВыделенныйТекст = НачалоТега + Элементы.ПолеВвода.ВыделенныйТекст + КонецТега;
	
	Элементы.ПолеВвода.УстановитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки + СтрДлина(НачалоТега) + СтрДлина(КонецТега));

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораГиперссылки(Знач Текст, Знач Проект)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	1 КАК Порядок,
	|	ОбъектыМетаданных.Ссылка,
	|	ОбъектыМетаданных.Имя,
	|	ОбъектыМетаданных.Наименование КАК Представление
	|ПОМЕСТИТЬ ОбъектыМетаданных
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Владелец = &Проект
	|	И (ОбъектыМетаданных.Имя ПОДОБНО &НачинаетсяТекст
	|			ИЛИ ОбъектыМетаданных.Наименование ПОДОБНО &НачинаетсяТекст)
	|	И НЕ ОбъектыМетаданных.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 10
	|	2,
	|	ОбъектыМетаданных.Ссылка,
	|	ОбъектыМетаданных.Имя,
	|	ОбъектыМетаданных.Наименование
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Владелец = &Проект
	|	И (ОбъектыМетаданных.Имя ПОДОБНО &СодержитТекст
	|			ИЛИ ОбъектыМетаданных.Наименование ПОДОБНО &СодержитТекст)
	|	И НЕ ОбъектыМетаданных.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
	|	ОбъектыМетаданных.Порядок,
	|	ОбъектыМетаданных.Ссылка,
	|	ОбъектыМетаданных.Имя,
	|	ОбъектыМетаданных.Представление
	|ИЗ
	|	ОбъектыМетаданных КАК ОбъектыМетаданных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
	|	ОбъектыМетаданных.Порядок,
	|	ФормыОбъектовМетаданных.Ссылка,
	|	ОбъектыМетаданных.Имя,
	|	ФормыОбъектовМетаданных.Наименование
	|ИЗ
	|	ОбъектыМетаданных КАК ОбъектыМетаданных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|		ПО (ФормыОбъектовМетаданных.Владелец = ОбъектыМетаданных.Ссылка)
	|			И (НЕ ФормыОбъектовМетаданных.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектыМетаданных.Порядок,
	|	ОбъектыМетаданных.Представление";
	
	Запрос.УстановитьПараметр("НачинаетсяТекст", Текст + "%");
	Запрос.УстановитьПараметр("СодержитТекст", "%" + Текст + "%");
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеВыбора.НайтиПоЗначению(Выборка.Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПредставлениеСсылки = ОбщегоНазначенияСППР.ПредставлениеНайденногоТекста(Текст, Выборка.Представление, Выборка.Имя);
		
		ДанныеВыбора.Добавить(Выборка.Ссылка, ПредставлениеСсылки);
		
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

&НаСервере
Процедура ОбновитьГиперссылкиСправки()

	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ОбъектыМетаданных") 
		ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
		ГиперссылкаПоУмолчанию = Справочники.ОбъектыМетаданных.ПустаяСсылка();
	КонецЕсли;
	
	Справочники.ЭлементыСправки.ОбновитьГиперссылкиСправки(Объект.ТекстСправки, Объект.ГиперссылкиДляСправки, ГиперссылкаПоУмолчанию, Ложь);
	
	СтрокиКУдалению = Новый Массив;
	Для каждого ДанныеСтроки Из Объект.ГиперссылкиДляСправки Цикл
		
		Если СтрокиКУдалению.Найти(ДанныеСтроки) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки.ТекстГиперссылки = ДанныеСтроки.ТекстГиперссылки;
		
		СтруктураПоиска = Новый Структура("ТекстГиперссылки", ДанныеСтроки.ТекстГиперссылки);
  		СписокСтрок = Объект.ГиперссылкиДляСправки.НайтиСтроки(СтруктураПоиска);
		Для каждого ЭлементКоллекции Из СписокСтрок Цикл
			Если ЭлементКоллекции <> ДанныеСтроки И НЕ ЗначениеЗаполнено(ЭлементКоллекции.Гиперссылка) Тогда
				СтрокиКУдалению.Добавить(ЭлементКоллекции);
			КонецЕсли; 
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого ДанныеСтроки Из СтрокиКУдалению Цикл
		Объект.ГиперссылкиДляСправки.Удалить(ДанныеСтроки);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКартинкиСправки()
	
	Справочники.ЭлементыСправки.ОбновитьКартинкиСправки(Объект.ТекстСправки, Объект.КартинкиДляСправки, Ложь);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДиалогВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		СтруктураИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранныеФайлы[0]);
		ПараметрыКартинки = Новый Структура;
		ПараметрыКартинки.Вставить("Наименование", СтруктураИмениФайла.ИмяБезРасширения);
		ПараметрыКартинки.Вставить("Расширение", СтруктураИмениФайла.Расширение);
		Если ДополнительныеПараметры.Свойство("ДляЗамены") Тогда
			ПараметрыКартинки.Вставить("ДляЗамены");
		КонецЕсли;
		Оповещение = Новый ОписаниеОповещения("ОбработатьПомещениеКартинки", ЭтотОбъект, ПараметрыКартинки);
		НачатьПомещениеФайла(Оповещение,, ВыбранныеФайлы[0], Ложь, УникальныйИдентификатор);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПомещениеКартинки(Результат, Адрес, ВыбранноеИмяФайла, ПараметрыКартинки) Экспорт
                               
    Если Не Результат Тогда
        Возврат;
	КонецЕсли;
	
	Если Объект.Картинка Тогда
	    АдресКартинки = Адрес;
		Элементы.ПолеКартинки.Обновить();
		Элементы.РедактироватьКартинку.Доступность = Ложь;
		Элементы.СохранитьКартинку.Доступность = Ложь;
	
		Если Объект.КартинкиДляСправки.Количество() = 0 Тогда
			ДобавитьКартинкуВТЧ(ПараметрыКартинки.Наименование + ПараметрыКартинки.Расширение, 
				ПредопределенноеЗначение("Справочник.КартинкиСправки.ПустаяСсылка"));
		Иначе 
			Объект.КартинкиДляСправки[0].НазваниеКартинки = ПараметрыКартинки.Наименование + ПараметрыКартинки.Расширение;
		КонецЕсли;
	Иначе
		ПараметрыКартинки.Вставить("АдресВременногоХранилища", Адрес);
		Если (ПараметрыКартинки.Свойство("ИзБуфера") 
			И НЕ ПараметрыКартинки.Свойство("ДляЗамены")
			И СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) = 0)
			ИЛИ (ПараметрыКартинки.Свойство("ИзБуфера")
			И ПараметрыКартинки.Свойство("ДляЗамены")) Тогда
				Подсказка = НСтр("ru = 'Укажите наименование картинки'");
				Оповещение = Новый ОписаниеОповещения("ОбработатьВводНаименованияКартинки", ЭтотОбъект, ПараметрыКартинки);
				ПоказатьВводСтроки(Оповещение,, Подсказка);
				Возврат;
		ИначеЕсли ПараметрыКартинки.Свойство("ИзБуфера") И СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) > 0 Тогда
			ПараметрыКартинки.Вставить("Наименование", Элементы.ПолеВвода.ВыделенныйТекст);
		КонецЕсли;
				
		ЗаписатьКартинкуСправки(ПараметрыКартинки);	
		Если ПараметрыКартинки.Свойство("ДляЗамены") Тогда
			Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка = ПараметрыКартинки.Ссылка;
		Иначе
			Если СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) > 0 Тогда
				НазваниеКартинки = Элементы.ПолеВвода.ВыделенныйТекст;
			Иначе
				НазваниеКартинки = ПараметрыКартинки.Наименование;
			КонецЕсли;
			ДобавитьКартинкуВТекст(НазваниеКартинки);
			ДобавитьКартинкуВТЧ(НазваниеКартинки, ПараметрыКартинки.Ссылка);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСохранениеФайла(ВыбранныеФайлы, ДвоичныеДанные) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		Картинка = Новый Картинка(ДвоичныеДанные);
		Картинка.Записать(ВыбранныеФайлы[0]);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКартинкуСправки(ПараметрыКартинки)
	
	Если ПараметрыКартинки.Свойство("ПолноеИмя") Тогда
		СтруктураИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПараметрыКартинки.ПолноеИмя);
		ПараметрыКартинки.Вставить("Наименование", СтруктураИмениФайла.ИмяБезРасширения);
		ПараметрыКартинки.Вставить("Расширение", СтруктураИмениФайла.Расширение);
	КонецЕсли;

	КартинкаСправки = Справочники.КартинкиСправки.СоздатьЭлемент();
	КартинкаСправки.ДатаИзменения = ТекущаяДата();
	КартинкаСправки.Наименование = ПараметрыКартинки.Наименование;
	КартинкаСправки.Расширение = ПараметрыКартинки.Расширение;	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ПараметрыКартинки.АдресВременногоХранилища);
	КартинкаСправки.Размер = ДвоичныеДанные.Размер();
	КартинкаСправки.ХранилищеКартинки = Новый ХранилищеЗначения(ДвоичныеДанные);
	КартинкаСправки.Записать();
	
	ПараметрыКартинки.Вставить("Ссылка", КартинкаСправки.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКартинкуВТекст(НазваниеКартинки)

	Перем НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки;
	
	Элементы.ПолеВвода.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	
	ТекстКартинки = НСтр("ru = '<IMG>%НазваниеКартинки%</IMG>'");
	ТекстКартинки = СтрЗаменить(ТекстКартинки, "%НазваниеКартинки%", НазваниеКартинки);
	
	ТекстВыделен = СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) > 0;
	
	Элементы.ПолеВвода.ВыделенныйТекст = ТекстКартинки;

	Элементы.ПолеВвода.УстановитьГраницыВыделения(НачалоСтроки, НачалоКолонки, 
		КонецСтроки, КонецКолонки + ?(ТекстВыделен, 11, СтрДлина(ТекстКартинки)));

КонецПроцедуры
	
&НаКлиенте
Процедура ДобавитьКартинкуВТЧ(НазваниеКартинки, Ссылка)
	
	НоваяСтрока = Объект.КартинкиДляСправки.Добавить();
	НоваяСтрока.НазваниеКартинки = НазваниеКартинки;
	НоваяСтрока.Картинка = Ссылка;
	
	Если Объект.КартинкиДляСправки.Количество() = 1 Тогда
		Элементы.КартинкиДляСправкиПросмотрКартинки.Доступность = Истина;
		Элементы.КартинкиДляСправкиВставитьКартинку.Доступность = Истина;
		Элементы.КартинкиДляСправкиСохранитьКартинку.Доступность = Истина;
		Элементы.КартинкиДляСправкиПодобратьКартинкуТЧ.Доступность = Истина;
		Элементы.КартинкиДляСправкиВставитьКартинкуИзБуфераТЧ.Доступность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВводНаименованияКартинки(Наименование, ПараметрыКартинки) Экспорт
	
	Если НЕ Наименование = Неопределено Тогда
		ПараметрыКартинки.Вставить("Наименование", Наименование);
	КонецЕсли;
	
	ЗаписатьКартинкуСправки(ПараметрыКартинки);	
	Если ПараметрыКартинки.Свойство("ДляЗамены") Тогда
		Элементы.КартинкиДляСправки.ТекущиеДанные.Картинка = ПараметрыКартинки.Ссылка;
	Иначе
		Если СтрДлина(Элементы.ПолеВвода.ВыделенныйТекст) > 0 Тогда
			НазваниеКартинки = Элементы.ПолеВвода.ВыделенныйТекст;
		Иначе
			НазваниеКартинки = ПараметрыКартинки.Наименование;
		КонецЕсли;
		ДобавитьКартинкуВТекст(НазваниеКартинки);
		ДобавитьКартинкуВТЧ(НазваниеКартинки, ПараметрыКартинки.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ДвоичныеДанныеКартинки(КартинкаСправки)
	
	Возврат КартинкаСправки.ХранилищеКартинки.Получить();
		
КонецФункции

&НаСервере
Функция ДанныеКартинки(КартинкаСправки)
	
	ДанныеКартинки = Новый Структура;
	ДанныеКартинки.Вставить("Наименование", КартинкаСправки.Наименование); 
	ДанныеКартинки.Вставить("Расширение", КартинкаСправки.Расширение); 
	ДанныеКартинки.Вставить("ДвоичныеДанные", КартинкаСправки.ХранилищеКартинки.Получить()); 
	
	Возврат ДанныеКартинки;
		
КонецФункции

&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ДанныеВыбораВладельца();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ДанныеВыбораВладельца(Текст);
	
КонецПроцедуры

&НаСервере
Функция ДанныеВыбораВладельца(Текст=Неопределено)
	
	ПараметрыВыбораВладельца = Новый Структура;
	
	ТекущийПроект = ПараметрыСеанса.ТекущийПроект;
	
	Если ЗначениеЗаполнено(ТекущийПроект) Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Владелец", ТекущийПроект);
	КонецЕсли;
	
	ПараметрыВыборавладельца.Вставить("Отбор", СтруктураОтбора);
	
	Если Текст <> Неопределено Тогда
		ПараметрыВыбораВладельца.Вставить("СтрокаПоиска", Текст);
	КонецЕсли;
	
	Возврат Справочники.ОбъектыМетаданных.ПолучитьДанныеВыбора(ПараметрыВыбораВладельца);
	
КонецФункции

&НаСервере
Процедура СоздатьРеквизитыПроектовСправки()
	
	ПроектыДляКоторыхВедетсяСправка = РаботаСоСправкойПовтИсп.ПроектыДляКоторыхВедетсяСправка(Проект);
	
	Если ПроектыДляКоторыхВедетсяСправка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для Индекс = 0 По ПроектыДляКоторыхВедетсяСправка.Количество() - 1 Цикл
		
		СтрокаТаблицы = ПроектыДляКоторыхВедетсяСправка[Индекс];
		ИмяРеквизита  = "ПроектыСправки_" + Строка(Индекс);
		
		СтрокаСвязи = СвязьПроектовИРеквизитов.Добавить();
		СтрокаСвязи.Проект       = СтрокаТаблицы.Проект;
		СтрокаСвязи.ИмяРеквизита = ИмяРеквизита;
		
		РеквизитФормы = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Булево"),,СтрокаТаблицы.ИмяПроекта);
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
		
	КонецЦикла; 
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Индекс = 0 По ДобавляемыеРеквизиты.Количество() - 1 Цикл
	
		РеквизитФормы = ДобавляемыеРеквизиты[Индекс];
		
		НумераторГруппы = Индекс % 3;
		ГруппаФлажка = Элементы["ГруппаПроектыКолонка_" + Строка(НумераторГруппы)];
	
		ПолеФлажка = Элементы.Добавить(РеквизитФормы.Имя, Тип("ПолеФормы"), ГруппаФлажка);
		ПолеФлажка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		ПолеФлажка.ПутьКДанным = РеквизитФормы.Имя;
		ПолеФлажка.Вид = ВидПоляФормы.ПолеФлажка;
		
		ПолеФлажка.УстановитьДействие("ПриИзменении", "ПроектыВключающиеСправкуПриИзменении");
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ОтразитьПроектыВключающиеСправку()
	
	ОтмеченныеПроекты.Очистить();
	
	Если Объект.ПроектыВключающиеСправку.Количество() = 0 Тогда
		
		Для Каждого Строка Из СвязьПроектовИРеквизитов Цикл
			СтрокаОтметки = ОтмеченныеПроекты.Добавить();
			СтрокаОтметки.Проект = Строка.Проект;
		КонецЦикла; 
		
	Иначе 
		
		Для Каждого Строка Из Объект.ПроектыВключающиеСправку Цикл
			СтрокаОтметки = ОтмеченныеПроекты.Добавить();
			СтрокаОтметки.Проект = Строка.Проект;
		КонецЦикла; 
		
	КонецЕсли; 
	
	Отбор = Новый Структура("Проект");
	Для Каждого Связь Из СвязьПроектовИРеквизитов Цикл
		
		Отбор.Проект = Связь.Проект;
		ЭтаФорма[Связь.ИмяРеквизита] = ОтмеченныеПроекты.НайтиСтроки(Отбор).Количество() > 0;
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти