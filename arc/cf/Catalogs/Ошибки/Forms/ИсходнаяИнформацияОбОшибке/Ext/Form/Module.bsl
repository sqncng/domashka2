
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИсходнаяИнформацияОбОшибке") Тогда
		ИсходнаяИнформацияОбОшибке = Параметры.ИсходнаяИнформацияОбОшибке;
	КонецЕсли;
	
	Если Параметры.Свойство("Клиент") Тогда
		Клиент = Параметры.Клиент;
	КонецЕсли;
	
	Если Параметры.Свойство("СУБД") Тогда
		СУБД = Параметры.СУБД;
	КонецЕсли;
	
	Если Параметры.Свойство("ВерсияПлатформы") Тогда
		ВерсияПлатформы = Параметры.ВерсияПлатформы;
	КонецЕсли;
	
	Если Параметры.Свойство("СерверТипПлатформы") Тогда
		СерверТипПлатформы = Параметры.СерверТипПлатформы;
	КонецЕсли;
	
	Если Параметры.Свойство("КлиентТипПлатформы") Тогда
		КлиентТипПлатформы = Параметры.КлиентТипПлатформы;
	КонецЕсли;
	
	Если Параметры.Свойство("КодОбращения") Тогда
		КодОбращения = Параметры.КодОбращения;
	КонецЕсли;
	
	Если НЕ Параметры.ДоступноРедактирование Тогда
		
		ТолькоПросмотр = Истина;
		
		Если Элементы.Найти("ФормаОК") <> Неопределено Тогда
			Элементы.ФормаОК.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	ПризнакиИдентификаторовОбращенийПоОшибкам = Константы.ПризнакиИдентификаторовОбращенийПоОшибкам.Получить();
	
	УстановитьШрифтФорматированногоТекста();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсходнаяИнформацияОбОшибкеПриИзменении(Элемент)
	
	ЗаполнитьКодОбращенияПоИсходнойИнформации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ИсходнаяИнформацияОбОшибке", ИсходнаяИнформацияОбОшибке);
	СтруктураРезультата.Вставить("Клиент", Клиент);
	СтруктураРезультата.Вставить("СУБД", СУБД);
	СтруктураРезультата.Вставить("ВерсияПлатформы", ВерсияПлатформы);
	СтруктураРезультата.Вставить("КлиентТипПлатформы", КлиентТипПлатформы);
	СтруктураРезультата.Вставить("СерверТипПлатформы", СерверТипПлатформы);
	СтруктураРезультата.Вставить("КодОбращения", КодОбращения);
	
	Закрыть(СтруктураРезультата);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтФорматированногоТекста()

	ШрифтФорматированногоТекста = РаботаСФорматированнымДокументом.ШрифтФорматированногоТекста();
	Элементы.ИсходнаяИнформацияОбОшибке.Шрифт = ШрифтФорматированногоТекста;

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылке(Команда)
	
	ОбщегоНазначенияСППРКлиент.ПерейтиПоСсылкеФорматированногоДокумента(Элементы.ИсходнаяИнформацияОбОшибке, ИсходнаяИнформацияОбОшибке);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФормат(Команда)
	
	ОчищенныйТекст = ИсходнаяИнформацияОбОшибке.ПолучитьТекст();
	ИсходнаяИнформацияОбОшибке.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока(ОчищенныйТекст));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьКодОбращенияПоИсходнойИнформации()
	
	Если ЗначениеЗаполнено(КодОбращения) Тогда
		Возврат;
	КонецЕсли;
	
	Разделители = Новый Массив;
	Разделители.Добавить(" ");
	Разделители.Добавить(",");
	Разделители.Добавить(".");
	Разделители.Добавить(";");
	Разделители.Добавить(":");
	Разделители.Добавить("|");
	Разделители.Добавить("/");
	Разделители.Добавить("\");
	Разделители.Добавить(Символы.ПС);
	Разделители.Добавить(Символы.ВК);
	Разделители.Добавить(Символы.Таб);
	
	ТекстИсходнойИнформации = ИсходнаяИнформацияОбОшибке.ПолучитьТекст();
	
	Если ЗначениеЗаполнено(ПризнакиИдентификаторовОбращенийПоОшибкам) Тогда
		
		МассивПризнаковИдентификаторовОбращений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
			НРег(ПризнакиИдентификаторовОбращенийПоОшибкам), " ");
		
		ИсходнаяИнформацияНРег = НРег(ТекстИсходнойИнформации);
		
		Для Каждого Признак из МассивПризнаковИдентификаторовОбращений Цикл
			
			СтрокаИнформации = "";
			
			ПозицияНачалаПризнака = Найти(ИсходнаяИнформацияНРег, Признак);
			
			Если ПозицияНачалаПризнака>0 Тогда
				
				КодОбращенияПолучен = Ложь;
				ПозицияНайденногоРазделителя = 0;
				
				Для Каждого Разделитель из Разделители Цикл
					
					ПозицияРазделителя = СтрНайти(ТекстИсходнойИнформации, Разделитель,,ПозицияНачалаПризнака);
					
					Если ПозицияРазделителя > 0
						И (ПозицияРазделителя < ПозицияНайденногоРазделителя ИЛИ ПозицияНайденногоРазделителя = 0) Тогда
						
						СтрокаИнформации = Сред(ТекстИсходнойИнформации, ПозицияНачалаПризнака, ПозицияРазделителя-ПозицияНачалаПризнака);
						КодОбращенияПолучен = Истина;
						ПозицияНайденногоРазделителя = ПозицияРазделителя;
					КонецЕсли;
					
				КонецЦикла;
				
				Если КодОбращенияПолучен Тогда
					КодОбращения = СтрокаИнформации;
					Прервать;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти