
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СоздаватьБазуДанныхВСлучаеОтстутствия = Истина;
	ЗаполнитьПараметрыИзСтрокиСоединения(Параметры.СтрокаСоединения);
	
	Если   (ЗначениеЗаполнено(КластерСерверов1С) ИЛИ ЗначениеЗаполнено(ИмяБазыВКластере))
	     И Не ЗначениеЗаполнено(ТипСУБД)
	     И Не ЗначениеЗаполнено(СерверБазыДанных)
	     И Не ЗначениеЗаполнено(ИмяБазыДанных)
	     И Не ЗначениеЗаполнено(ПользовательСервераБазыДанных)
	     И Не ЗначениеЗаполнено(ПарольПользователяСервераБазыДанных) Тогда
		
		СоздатьИспользоватьБазу = 1;
	
	КонецЕсли; 
	
	УправлениеДоступностьюВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если СоздатьИспользоватьБазу = 1 Тогда
	
		НепроверяемыеРеквизиты.Добавить("ТипСУБД");
		НепроверяемыеРеквизиты.Добавить("СерверБазыДанных");
		НепроверяемыеРеквизиты.Добавить("ИмяБазыДанных");
		
	КонецЕсли; 
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипСУБДПриИзменении(Элемент)
	
	Если ТипСУБД = ПредопределенноеЗначение("Перечисление.СУБД.MSSQLServer") Тогда
		СмещениеДат = "2000";
	Иначе 
		СмещениеДат = "0";
	КонецЕсли; 
	
	УправлениеДоступностьюВидимостью(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьИспользоватьБазуПриИзменении(Элемент)
	УправлениеДоступностьюВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КластерСерверов1СПриИзменении(Элемент)
	
	Если СоздатьИспользоватьБазу = 0 
	   И    ЗначениеЗаполнено(КластерСерверов1С)
	   И Не ЗначениеЗаполнено(СерверБазыДанных) Тогда
	
		СерверБазыДанных = КластерСерверов1С;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяБазыВКластереПриИзменении(Элемент)
	
	Если СоздатьИспользоватьБазу = 0 
	   И    ЗначениеЗаполнено(ИмяБазыВКластере)
	   И Не ЗначениеЗаполнено(ИмяБазыДанных) Тогда
	
		ИмяБазыДанных = ИмяБазыВКластере;
		
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	Ответ = Новый Структура;
	Ответ.Вставить("КластерСерверов1С", КластерСерверов1С);
	Ответ.Вставить("ИмяБазыВКластере",  ИмяБазыВКластере);
	
	Если СоздатьИспользоватьБазу = 1 Тогда
		
		Ответ.Вставить("СтрокаСоединения", "Srvr=""" + КластерСерверов1С + """;"
		                                 + "Ref="""  + ИмяБазыВКластере  + """;");
		
	Иначе
		
		Ответ.Вставить("ТипСУБД",                               ТипСУБД);
		Ответ.Вставить("СерверБазыДанных",                       СерверБазыДанных);
		Ответ.Вставить("ИмяБазыДанных",                         ИмяБазыДанных);
		Ответ.Вставить("ПользовательСервераБазыДанных",         ПользовательСервераБазыДанных);
		Ответ.Вставить("ПарольПользователяСервераБазыДанных",   ПарольПользователяСервераБазыДанных);
		Ответ.Вставить("СмещениеДат",                           СмещениеДат);
		Ответ.Вставить("СоздаватьБазуДанныхВСлучаеОтстутствия", СоздаватьБазуДанныхВСлучаеОтстутствия);
		Ответ.Вставить("СтрокаСоединения", 
			"Srvr="""      + КластерСерверов1С + """;"
			+ "Ref="""     + ИмяБазыВКластере  + """;"
			+ "DBMS="""    + ПолучитьИмяЗначенияПеречисления(ТипСУБД) + """;"
			+ "DBSrvr="""  + СерверБазыДанных   + """;"
			+ "DB="""      + ИмяБазыДанных     + """;"
			+ "DBUID="""   + ПользовательСервераБазыДанных       + """;"
			+ "DBPwd="""   + ПарольПользователяСервераБазыДанных + """;"
			+ ?(ЗначениеЗаполнено(СмещениеДат), "SQLYOffs=""" + СмещениеДат + """;", "")
			+ "CrSQLDB=""" + ?(СоздаватьБазуДанныхВСлучаеОтстутствия, "Y", "N") + """;");
		
	КонецЕсли; 
	
	Закрыть(Ответ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыИзСтрокиСоединения(СтрокаСоединения)
	
	КластерСерверов1С = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "Srvr");
	ИмяБазыВКластере  = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "Ref");
	
	ИмяТипаСУБД = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "DBMS");
	Если ЗначениеЗаполнено(ИмяТипаСУБД) Тогда
		Попытка
			ТипСУБД = Перечисления.СУБД[ИмяТипаСУБД];
		Исключение
			ТипСУБД = Неопределено;
		КонецПопытки;
	КонецЕсли; 
	
	СмещениеДат                           = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "SQLYOffs");
	СерверБазыДанных                       = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "DBSrvr");
	ИмяБазыДанных                         = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "DB");
	ПользовательСервераБазыДанных         = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "DBUID");
	ПарольПользователяСервераБазыДанных   = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "DBPwd");
	
	СоздаватьБазуСтрока = ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, "CrSQLDB");
	Если СоздаватьБазуСтрока = "Y" Тогда
		СоздаватьБазуДанныхВСлучаеОтстутствия = Истина;
	ИначеЕсли СоздаватьБазуСтрока = "N" Тогда
		СоздаватьБазуДанныхВСлучаеОтстутствия = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПараметрИзСтрокиСоединения(СтрокаСоединения, ИмяПараметра)

	СтрокаСоединенияВРег = ВРег(СтрокаСоединения);
	
	НачалоПараметра = Найти(СтрокаСоединенияВРег, ВРег(ИмяПараметра) + "=");
	
	Если НачалоПараметра <> 0 Тогда
		
		СтрокаСПараметром = Сред(СтрокаСоединения, НачалоПараметра);
		КонецПараметра  = Найти(СтрокаСПараметром, ";");
		
		ДлинаПараметра = СтрДлина(ИмяПараметра) + 2;
		
		Если КонецПараметра <> 0 Тогда
			Возврат Сред(СтрокаСоединения, НачалоПараметра + ДлинаПараметра, КонецПараметра - ДлинаПараметра - 2);
		Иначе 
			Возврат Сред(СтрокаСоединения, НачалоПараметра + ДлинаПараметра);
		КонецЕсли;
		
	Иначе 
		Возврат "";
	КонецЕсли; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюВидимостью(Форма)
	
	Элементы = Форма.Элементы;
	
	ВыбранMSSQLServer = (Форма.ТипСУБД = ПредопределенноеЗначение("Перечисление.СУБД.MSSQLServer"));
	
	Если Не ВыбранMSSQLServer Тогда
		Форма.СмещениеДат = "";
	КонецЕсли; 
	
	Элементы.СмещениеДат.Доступность = ВыбранMSSQLServer;
	
	Если Форма.СоздатьИспользоватьБазу = 0 Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСозданиеБазы;
	Иначе 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаУказатьСуществующуюБазу;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяЗначенияПеречисления(ЗначениеПеречисления)
	
	ИмяПеречисления = ЗначениеПеречисления.Метаданные().Имя;
	ИндексЗначенияПеречисления = Перечисления[ИмяПеречисления].Индекс(ЗначениеПеречисления);
	Возврат Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;

КонецФункции

#КонецОбласти

