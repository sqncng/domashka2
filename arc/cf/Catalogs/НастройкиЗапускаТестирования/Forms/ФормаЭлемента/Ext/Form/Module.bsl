#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПравоНаЗапускТестирования = ПравоДоступа("Добавление", Метаданные.Документы.ЗапускТестирования);
	Элементы.ФормаЗапуститьТестирование.Доступность = ПравоНаЗапускТестирования;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыТесты

&НаКлиенте
Процедура ТестыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Для Каждого ВыбранныйЭлемент Из ВыбранноеЗначение Цикл
		НоваяСтрока = Объект.Тесты.Добавить();
		НоваяСтрока.Тест = ВыбранныйЭлемент;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборТестов(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	Отбор = Новый Структура;
	Отбор.Вставить("Владелец", Объект.Владелец);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОткрытьФорму("Справочник.Тесты.ФормаВыбора", ПараметрыФормы, Элементы.Тесты);

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьТестирование(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Настройка еще не записана. Записать?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗапуститьТестированиеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		СоздатьЗапускТестирования();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьТестированиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗапуститьТестированиеПослеЗаписи", ЭтотОбъект);
		СтруктураПараметровЗаписи = Новый Структура;
		СтруктураПараметровЗаписи.Вставить("ДействиеПослеЗаписи", ОписаниеОповещения);
		
		Отказ = Ложь;
		ОбщегоНазначенияСППРКлиент.ОбработатьЗаписьОбъектаВФорме(ЭтотОбъект, СтруктураПараметровЗаписи, Отказ);
	Иначе
		СоздатьЗапускТестирования();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьТестированиеПослеЗаписи(РезультатДействия, ДополнительныеПараметры) Экспорт
	
	СоздатьЗапускТестирования();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗапускТестирования()
	
	ОткрытьФорму(
		"Документ.ЗапускТестирования.Форма.ФормаДокумента",
		Новый Структура("ЗначенияЗаполнения", Новый Структура("Настройка", Объект.Ссылка)),
		Истина);
		
КонецПроцедуры

#КонецОбласти
