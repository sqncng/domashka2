#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
		"ПометкаУдаления", Истина,
		ВидСравненияКомпоновкиДанных.НеРавно, , ,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
	
	Проект = ПараметрыСеанса.ТекущийПроект;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
		"Владелец", Проект,
		ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Проект));
	
	ОтборПоСтатусам = Новый Массив;
	ОтборПоСтатусам.Добавить(Перечисления.СтатусыПатчей.ПатчНеТребуется);
	ОтборПоСтатусам.Добавить(Перечисления.СтатусыПатчей.Отозван);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СтатусыВерсий", ОтборПоСтатусам);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	Ключи = Строки.ПолучитьКлючи();
	
	Публикуется = Новый Массив;
	Публикуется.Добавить(Перечисления.СтатусыПатчей.Публикуется);
	Публикуется.Добавить(Перечисления.СтатусыПатчей.ОжидаетПубликации);
	
	Создание = Новый Массив;
	Создание.Добавить(Перечисления.СтатусыПатчей.ОжиданиеИсправления);
	Создание.Добавить(Перечисления.СтатусыПатчей.СозданиеПатча);
	Создание.Добавить(Перечисления.СтатусыПатчей.СозданиеВручную);
	
	Ошибка = Новый Массив;
	Ошибка.Добавить(Перечисления.СтатусыПатчей.Ошибка);
	Ошибка.Добавить(Перечисления.СтатусыПатчей.ОшибкаОтзыва);
	Ошибка.Добавить(Перечисления.СтатусыПатчей.ОшибкаПубликации);
	
	ОтозванНеТребуется = Новый Массив;
	ОтозванНеТребуется.Добавить(Перечисления.СтатусыПатчей.ПатчНеТребуется);
	ОтозванНеТребуется.Добавить(Перечисления.СтатусыПатчей.Отозван);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Опубликован", Перечисления.СтатусыПатчей.Опубликован);
	Запрос.УстановитьПараметр("ТребуетПроверки", Перечисления.СтатусыПатчей.СозданНеПроверен);
	Запрос.УстановитьПараметр("Проверен", Перечисления.СтатусыПатчей.СозданПроверен);
	Запрос.УстановитьПараметр("Публикуется", Публикуется);
	Запрос.УстановитьПараметр("Создание", Создание);
	Запрос.УстановитьПараметр("Ошибка", Ошибка);
	Запрос.УстановитьПараметр("ОтозванНеТребуется", ОтозванНеТребуется);
	Запрос.УстановитьПараметр("Патчи", Ключи);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПатчей.Патч КАК Патч,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние = &Опубликован
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Опубликовано,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние В (&Публикуется)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Публикуется,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние = &Проверен
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПроверенОжидаетПубликации,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние = &ТребуетПроверки
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТребуютПроверки,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние В (&Создание)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Создается,
		|	СУММА(ВЫБОР
		|			КОГДА ВерсииПатчей.Состояние В (&Ошибка)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Ошибка,
		|	ВерсииПатчей.ПодписанДляКонфигурации КАК ПодписанДляКонфигурации
		|ИЗ
		|	РегистрСведений.ВерсииПатчей КАК ВерсииПатчей
		|ГДЕ
		|	ВерсииПатчей.Патч В(&Патчи)
		|	И НЕ ВерсииПатчей.Состояние В (&ОтозванНеТребуется)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВерсииПатчей.Патч,
		|	ВерсииПатчей.ПодписанДляКонфигурации";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ПатчИСостояние Из Результат Цикл
		Если ЗначениеЗаполнено(ПатчИСостояние.ПодписанДляКонфигурации) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписка = Строки.Получить(ПатчИСостояние.Патч);
		ОбщееСостояние = "";
		ВсеОпубликованы = Истина;
		Если ПатчИСостояние.Опубликовано <> 0 Тогда
			Состояние = НСтр("ru = 'Опубликовано: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.Опубликовано);
		КонецЕсли;
		
		Если ПатчИСостояние.Публикуется <> 0 Тогда
			Состояние = НСтр("ru = 'Публикуется: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.Публикуется);
			ВсеОпубликованы = Ложь;
		КонецЕсли;
		
		Если ПатчИСостояние.ПроверенОжидаетПубликации <> 0 Тогда
			Состояние = НСтр("ru = 'Проверено: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.ПроверенОжидаетПубликации);
			ВсеОпубликованы = Ложь;
		КонецЕсли;
		
		Если ПатчИСостояние.ТребуютПроверки <> 0 Тогда
			Состояние = НСтр("ru = 'Требуется проверка: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.ТребуютПроверки);
			ВсеОпубликованы = Ложь;
		КонецЕсли;
		
		Если ПатчИСостояние.Создается <> 0 Тогда
			Состояние = НСтр("ru = 'Создание: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.Создается);
			ВсеОпубликованы = Ложь;
		КонецЕсли;
		
		Если ПатчИСостояние.Ошибка <> 0 Тогда
			Состояние = НСтр("ru = 'Ошибка: %1'");
			ДобавитьСостояние(ОбщееСостояние, Состояние, ПатчИСостояние.Ошибка);
			ВсеОпубликованы = Ложь;
		КонецЕсли;
		
		Если ВсеОпубликованы Тогда
			СтрокаСписка.Данные.Состояние = НСтр("ru = 'Опубликовано'");
		Иначе
			СтрокаСписка.Данные.Состояние = ОбщееСостояние;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Патчи_ИзменениеСтатуса" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СостояниеВерсийПриИзменении(Элемент)
	УстановитьОтборПоСостоянию(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
		"Владелец", Проект,
		ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Проект));
КонецПроцедуры

&НаКлиенте
Процедура СостояниеВерсийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("СписокВыбора", СостояниеВерсий);
	
	ОткрытьФорму("Перечисление.СтатусыПатчей.Форма.ФормаВыбораСтатусов", СтруктураПараметров, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеВерсийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СостояниеВерсий = ВыбранноеЗначение;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Копирование;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ДобавитьСостояние(ОбщееСостояние, ДобавляемоеСостояние, Количество)
	ДобавляемоеСостояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ДобавляемоеСостояние, Количество);
	Если ЗначениеЗаполнено(ОбщееСостояние) Тогда
		ОбщееСостояние = ОбщееСостояние + ", " + ДобавляемоеСостояние;
	Иначе
		ОбщееСостояние = ДобавляемоеСостояние;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСостоянию(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"СостояниеВерсии",
		Форма.СостояниеВерсий,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		ЗначениеЗаполнено(Форма.СостояниеВерсий));
КонецПроцедуры

#КонецОбласти