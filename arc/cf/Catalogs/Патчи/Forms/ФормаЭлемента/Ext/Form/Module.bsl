
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ПатчПоОшибке = (ТипЗнч(Объект.Ошибка) = Тип("СправочникСсылка.Ошибки"));
	УстановитьДоступностьЭлементов();
	ЭтоНовый = Не ЗначениеЗаполнено(Объект.Ссылка);
	Если ЭтоНовый Тогда
		Объект.Ошибка = "";
		Объект.АвторИсправления = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Владелец = ПараметрыСеанса.ТекущийПроект;
	КонецЕсли;
	
	ЗаполнитьДоступныеВерсииПроектаДляПатчей();
	
	Если Не ВключенаПубликация Тогда
		Элементы.Опубликовать.Заголовок = НСтр("ru = 'Проверен'");
		Элементы.ОпубликоватьКонтекст.Заголовок = НСтр("ru = 'Проверен'");
		Если ДополнительныйКонтроль Тогда
			Элементы.Опубликовать.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОпубликованныеПатчи Тогда
		Предупреждение = НСтр("ru = 'Изменение публикуемого описания не применяется к уже
			|опубликованным патчам. Для обновления описания опубликованного патча его потребуется
			|отозвать и выпустить повторно'");
		Предупреждение = СтрЗаменить(Предупреждение, Символы.ПС, " ");
		Элементы.Описание.ПредупреждениеПриРедактировании = Предупреждение;
	КонецЕсли;
	
	Если ПатчПоОшибке Тогда
		Элементы.Описание.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ПатчПоОшибке");
		АвторИсправления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ошибка, "Исправил");
	Иначе
		Если Не ЕстьОпубликованныеПатчи Тогда
			Элементы.Описание.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		КонецЕсли;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ПатчПоНомеру");
		АвторИсправления = Объект.АвторИсправления;
	КонецЕсли;
	
	ИзменениеДоступно = УправлениеДоступом.ИзменениеРазрешено(Объект.Ссылка);
	ПубликацияДоступна = УправлениеДоступомСППР.РольДоступнаПоПроекту("ПубликацияПатчей", Объект.Владелец);
	
	Если Не ДополнительныйКонтроль Тогда
		Элементы.ОтметитьПроверкуПатча.Видимость = Ложь;
		Элементы.ОтменитьПроверку.Видимость = Ложь;
		Если ВключенаПубликация Тогда
			Элементы.Опубликовать.Заголовок = НСтр("ru = 'Проверен, опубликовать'");
			Элементы.ОпубликоватьКонтекст.Заголовок = НСтр("ru = 'Проверен, опубликовать'");
		КонецЕсли;
	КонецЕсли;
	
	АктивныеДлительныеОперации = Новый Структура;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПоказыватьОтозванные = Истина;
	
	// Определение, кто открыл карточку.
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ЭтоАвтор       = (ТекущийПользователь = Объект.АвторИсправления);
	ЭтоПроверяющий = (ТекущийПользователь = Объект.Проверяющий);
	ЭтоАудитор     = (ТекущийПользователь = Объект.Аудитор);
	
	ПараметрыПроекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец,
		"ПроверкаПатчаПередПубликацией,АудитПатчаПередПубликацией");
	НуженАудитор     = ПараметрыПроекта.АудитПатчаПередПубликацией;
	НуженПроверяющий = ПараметрыПроекта.ПроверкаПатчаПередПубликацией;
	
	ВключенаПубликация = ПолучитьФункциональнуюОпцию("ИспользоватьПубликациюПатчейВСервисе");
	
	ДополнительныйКонтроль = НуженПроверяющий Или НуженАудитор;
	
	Элементы.ГруппаАудитор.Видимость = НуженАудитор;
	Элементы.ГруппаПроверяющий.Видимость = НуженПроверяющий;
	Если НуженПроверяющий
		И НуженАудитор
		И ЗначениеЗаполнено(Объект.Проверяющий)
		И ЗначениеЗаполнено(Объект.Аудитор)
		И Объект.Проверяющий = Объект.Аудитор Тогда
		Элементы.Проверяющий.Заголовок = НСтр("ru = 'Проверяет и выполняет аудит'");
		Элементы.ДекорацияУказатьАудитора.Видимость = НуженАудитор;
		Элементы.ГруппаАудитор.Видимость = Ложь;
	Иначе
		Элементы.ДекорацияУказатьАудитора.Видимость = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ошибка) = Тип("СправочникСсылка.Ошибки")
		И ЗначениеЗаполнено(Объект.Ошибка) Тогда
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыОшибок.Закрыта);
		Статусы.Добавить(Перечисления.СтатусыОшибок.Исправлена);
		Статусы.Добавить(Перечисления.СтатусыОшибок.ПроверенаИсправлена);
		
		СтатусОшибки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ошибка, "Статус");
		Если Статусы.Найти(СтатусОшибки) = Неопределено Тогда
			Элементы.ГруппаИндикацияИсправленияОшибки.Видимость = Истина;
			Шаблон = НСтр("ru = 'Сборка будет запущена после отметки об исправлении ошибки. Текущий статус - %1.'");
			Элементы.НадписьОшибкаНеИсправлена.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Шаблон, СтатусОшибки);
		Иначе
			Элементы.ГруппаИндикацияИсправленияОшибки.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если ИзмененПроект Тогда
		ИзмененПроект = Ложь;
		ПатчиСлужебный.УдалитьВсеВерсииПатча(ТекущийОбъект.Ссылка);
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ошибка) = Тип("СправочникСсылка.Ошибки") Тогда
		НеобходимыеСвойства = "Ссылка,Статус,Обнаружена,
			|СборкаОбнаружения,ДатаОбнаружения,ДатаИсправления,ВеткаОбнаружения";
		Если ЭтоНовый Тогда
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.Ошибки");
			ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", Объект.Ошибка);
			ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
			БлокировкаДанных.Заблокировать();
			
			ОшибкаОбъект = Объект.Ошибка.ПолучитьОбъект();
			ОшибкаОбъект.СоздатьПатч = Истина;
			СвойстваОшибки = Новый Структура(НеобходимыеСвойства);
			ЗаполнитьЗначенияСвойств(СвойстваОшибки, ОшибкаОбъект);
			ОшибкаОбъект.Записать();
		Иначе
			СвойстваОшибки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ошибка, НеобходимыеСвойства);
		КонецЕсли;
		
		ПатчиСлужебный.ДобавитьВерсииПатчаПоОшибке(ТекущийОбъект.Ссылка, СвойстваОшибки);
	Иначе
		Для Каждого Версия Из Версии Цикл
			ПатчиСлужебный.ДобавитьПатчНаКонкретнуюВерсию(ТекущийОбъект.Ссылка, Версия.Значение, Ложь);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НаписатьСообщениеВОбсуждениях();
	
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ПатчПоОшибке Тогда
		Индекс = ПроверяемыеРеквизиты.Найти("Версии");
		Если Индекс <> 0 Тогда
			ПроверяемыеРеквизиты.Удалить(Индекс);
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Патчи_РучноеСоздание" Тогда
		Если Параметр = Неопределено Тогда
			Прочитать();
		Иначе
			Для Каждого ВерсияПатча Из ВерсииПатчаДерево.ПолучитьЭлементы() Цикл
				Если ВерсияПатча.УникальныйИдентификатор <> Источник Тогда
					Продолжить;
				КонецЕсли;
				
				ВерсияПатча.Индикатор = БиблиотекаКартинок.ДлительнаяОперация16; 
				Параметр.Вставить("ИдентификаторПатча", ВерсияПатча.УникальныйИдентификатор);
				Прервать;
			КонецЦикла;
			
			АктивныеДлительныеОперации.Вставить(КлючАктивнойДлительнойОперации(Источник), Параметр);
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатРучногоСозданияПатча", ЭтотОбъект, Источник);
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
			ПараметрыОжидания.Интервал = 1;
			ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
			ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОбработатьРезультатРучногоСозданияПатчаПрогресс", ЭтотОбъект, Источник);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(Параметр, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Патчи_ИзменениеСтатуса" Тогда
		Если Источник = "ФормаЭлемента" Тогда
			Возврат;
		КонецЕсли;
		Прочитать();
	КонецЕсли;
	
	Если ИмяСобытия = "Патчи_ОшибкаОбновленияПрименимости" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		Если Параметр.Патч = Объект.Ссылка Тогда
			ПоказатьПредупреждение(, Параметр.ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработатьРезультатРучногоСозданияПатчаПрогресс(Прогресс, Источник) Экспорт
	
	Если Прогресс = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Прогресс <> Неопределено Тогда
		
		Ключ = КлючАктивнойДлительнойОперации(Источник);
		АктивныеДлительныеОперации[Ключ].Вставить("Прогресс", Прогресс.Прогресс.Процент);
		
		Оповестить("Патчи_Прогресс", Прогресс.Прогресс, Источник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если Не ЗавершениеРаботы Тогда
		Оповестить("Патчи_ЗакрытиеКарточкиПатча");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ТипЗнч(Объект.Ошибка) = Тип("Строка") Тогда
		Проверка = СтрЗаменить(Объект.Ошибка, " ", "");
		Если Проверка <> Объект.Ошибка Тогда
			ТекстОшибки = НСтр("ru = 'В качестве значения в поле Ошибка указано недопустимое значение.
				|Номер ошибки может содержать буквы, цифры и символ ""-"".'");
			Отказ = Истина;
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Не ЗавершениеРаботы
		И Не ЗакрытиеПодтверждено
		И ТипЗнч(АктивныеДлительныеОперации) = Тип("Структура")
		И АктивныеДлительныеОперации.Количество() <> 0 Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Имеются активные операции добавления патчей, при закрытии они будут отменены.
			|Отменить выполнение?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОшибкаПриИзменении(Элемент)
	ОшибкаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВерсииПатчаПриАктивизацииСтроки(Элемент)
	
	Подключаемый_ВерсииПатчаПриАктивизацииСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВерсииПатчаПриАктивизацииСтроки()
	
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	
	ОтмеченоПроверяющим = Не НуженПроверяющий;
	ОтмеченоАудитором = Не НуженАудитор;
	ОтмеченоРазработчиком = Ложь;
	КонтрольВыполнен = Ложь;
	ПроверившийРазработчик = "";
	ПроверяющийДатаПроверки = "";
	АудиторДатаПроверки = "";
	РазработчикДатаПроверки = "";
	Если Объект.СостоянияПроверкиПатча.Количество() > 0 И ТекущиеДанные <> Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВерсияПатча", ТекущиеДанные.Версия);
		ПараметрыОтбора.Вставить("ИдентификаторПатча", ТекущиеДанные.УникальныйИдентификатор);
		НайденныеСтроки = Объект.СостоянияПроверкиПатча.НайтиСтроки(ПараметрыОтбора);
		Для Каждого ОтметкаОПроверке Из НайденныеСтроки Цикл
			Если ОтметкаОПроверке.Роль = "Аудитор" И ОтметкаОПроверке.ВерсияПатча = ТекущиеДанные.Версия Тогда
				ОтмеченоАудитором = Истина;
				АудиторДатаПроверки = ОтметкаОПроверке.ДатаПроверки;
			КонецЕсли;
			Если ОтметкаОПроверке.Роль = "Проверяющий" И ОтметкаОПроверке.ВерсияПатча = ТекущиеДанные.Версия Тогда
				ОтмеченоПроверяющим = Истина;
				ПроверяющийДатаПроверки = ОтметкаОПроверке.ДатаПроверки;
			КонецЕсли;
			Если ОтметкаОПроверке.Роль = "Разработчик" И ОтметкаОПроверке.ВерсияПатча = ТекущиеДанные.Версия Тогда
				ПроверившийРазработчик = ОтметкаОПроверке.Выполнил;
				РазработчикДатаПроверки = ОтметкаОПроверке.ДатаПроверки;
				ОтмеченоРазработчиком = Истина;
			КонецЕсли;
		КонецЦикла;
		
		КонтрольВыполнен = ОтмеченоПроверяющим И ОтмеченоАудитором И ОтмеченоРазработчиком;
		Элементы.КонтрольИсправления.Видимость = ДополнительныйКонтроль;
		Элементы.КонтрольИсправленияДоПроверки.Видимость = Ложь;
	Иначе
		Элементы.КонтрольИсправления.Видимость = ЗначениеЗаполнено(Объект.Проверяющий) Или ЗначениеЗаполнено(Объект.Аудитор);
		Элементы.КонтрольИсправленияДоПроверки.Видимость = ТекущиеДанные <> Неопределено
			И (Не Элементы.КонтрольИсправления.Видимость
				И ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен"))
			И ДополнительныйКонтроль;
	КонецЕсли;
	
	МожноСохранитьПатч = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления")
		И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданиеПатча")
		И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданиеВручную")
		И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется");
	
	МожноПроверитьПатч = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И (НуженАудитор Или НуженПроверяющий)
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен"))
		И (((ЭтоАвтор Или ПубликацияДоступна) И Не ОтмеченоРазработчиком) // Можно отметить проверку за разработчика, если пользователь не проверяет патч.
		  Или (ЭтоПроверяющий И Не ОтмеченоПроверяющим И ОтмеченоРазработчиком)
		  Или (ЭтоАудитор И Не ОтмеченоАудитором И ОтмеченоРазработчиком));
	
	МожноОтменитьПроверку = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен")
		  Или ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданПроверен"))
		И ((ЭтоАвтор И ОтмеченоРазработчиком)
		  Или (ЭтоПроверяющий И ОтмеченоПроверяющим)
		  Или (ЭтоАудитор И ОтмеченоАудитором));
	
	МожноОпубликовать = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И ПубликацияДоступна
		И (КонтрольВыполнен Или Не ДополнительныйКонтроль)
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен")
			Или ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданПроверен"));
	
	МожноПосмотретьПрименимость = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданиеПатча"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданиеВручную"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется"));
	
	МожноПересоздать = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Публикуется"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Отозван"));
	
	МожноСоздатьВручную = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления")
		   Или ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданиеВручную"));
	
	МожноОтметитьНеТребуется = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован"))
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Отозван"));
	
	МожноОтозвать = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован"));
	
	МожноПовторитьПубликацию = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаПубликации"));
	
	ПоказатьПредупреждение = ТекущиеДанные <> Неопределено
		И (Не ТекущиеДанные.ЭтоСтрокаПереключателя
			И ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен")
			И Не ЭтоАвтор
			И Не ОтмеченоРазработчиком
			Или ТекущиеДанные.ЭтоСтрокаПереключателя);
	
	МожноПеревыпуститьПатч = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован"))
		И ПеревыпускаемыеПатчи.НайтиПоЗначению(ТекущиеДанные.УникальныйИдентификатор) = Неопределено;
	
	МожноУказатьКоммитыДляСборкиПатча = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И ИзменениеДоступно
		И (ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжидаетПубликации")
		   И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Публикуется")
		   И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаПубликации")
		   И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован")
		   И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Отозван")
		   И ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаОтзыва"));
	
	ЗаголовокКнопкиПересозданияПатча = "";
	Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоСтрокаПереключателя Тогда
		Если ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления") Тогда
			ЗаголовокКнопкиПересозданияПатча = НСтр("ru = 'Коммиты для сборки патча...'");
		Иначе
			ЗаголовокКнопкиПересозданияПатча = НСтр("ru = 'Пересоздать патч...'");
		КонецЕсли;
	КонецЕсли;
	
	Если ОтмеченоРазработчиком
		И (Не ОтмеченоПроверяющим Или Не ОтмеченоАудитором)
		И Не ЭтоПроверяющий
		И Не ЭтоАудитор Тогда
		Текст = НСтр("ru = 'Патч для версии %1 проверен разработчиком %2 %3. Для публикации требуется контроль %4.'");
		Если Не ОтмеченоПроверяющим И Не ОтмеченоАудитором Тогда
			ПараметрРоль = НСтр("ru = 'проверяющего и аудитора'");
		ИначеЕсли Не ОтмеченоПроверяющим Тогда
			ПараметрРоль = НСтр("ru = 'проверяющего'");
		Иначе
			ПараметрРоль = НСтр("ru = 'аудитора'");
		КонецЕсли;
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст,
			ТекущиеДанные.Версия,
			ПроверившийРазработчик,
			Формат(РазработчикДатаПроверки, "ДФ='dd.MM.yyyy HH:mm'"),
			ПараметрРоль);
		НадписьИнформация = Текст;
		Элементы.ДекорацияПредупреждение.Видимость = Истина;
		Элементы.ДекорацияУспешно.Видимость = Ложь;
		ПоказатьПредупреждение = Истина;
	КонецЕсли;
	
	Если ОтмеченоРазработчиком И (ЭтоПроверяющий Или ЭтоАудитор Или КонтрольВыполнен) Тогда
		Текст = НСтр("ru = 'Патч для версии %1 проверен разработчиком %2 %3'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст,
			ТекущиеДанные.Версия,
			ПроверившийРазработчик,
			Формат(РазработчикДатаПроверки, "ДФ='dd.MM.yyyy HH:mm'"));
		НадписьИнформация = Текст;
		Элементы.ДекорацияПредупреждение.Видимость = Ложь;
		Элементы.ДекорацияУспешно.Видимость = Истина;
		ПоказатьПредупреждение = Истина;
	КонецЕсли;
	
	Если Не ОтмеченоРазработчиком
		И ТекущиеДанные <> Неопределено
		И ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен") Тогда
		Если Не ЗначениеЗаполнено(Объект.Аудитор) И Не ЗначениеЗаполнено(Объект.Проверяющий) Тогда
			Если ЭтоАвтор Тогда
				Текст = НСтр("ru = 'Необходимо проверить версии патча, после чего назначить проверяющего и аудитора'");
			Иначе
				Текст = НСтр("ru = 'Патч для версии %1 еще не проверен автором исправления (%2)'");
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ТекущиеДанные.Версия, АвторИсправления);
			КонецЕсли;
			НадписьИнформацияДоПроверки = Текст;
		Иначе
			Текст = НСтр("ru = 'Патч для версии %1 еще не проверен автором исправления (%2)'");
		КонецЕсли;
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ТекущиеДанные.Версия, АвторИсправления);
		НадписьИнформация = Текст;
		Элементы.ДекорацияПредупреждение.Видимость = Истина;
		Элементы.ДекорацияУспешно.Видимость = Ложь;
		ПоказатьПредупреждение = Истина;
	КонецЕсли;
	
	Если ОтмеченоПроверяющим И ТекущиеДанные <> Неопределено Тогда
		Текст = НСтр("ru = 'Версия %1 проверена %2'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст,
			ТекущиеДанные.Версия,
			Формат(ПроверяющийДатаПроверки, "ДФ='dd.MM.yyyy HH:mm'"));
		НадписьПроверяющийСтатус = Текст;
	КонецЕсли;
	
	Если ОтмеченоАудитором И ТекущиеДанные <> Неопределено Тогда
		Текст = НСтр("ru = 'Версия %1 проверена %2'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст,
			ТекущиеДанные.Версия,
			Формат(АудиторДатаПроверки, "ДФ='dd.MM.yyyy HH:mm'"));
		НадписьАудиторСтатус = Текст;
	КонецЕсли;
	
	ПроверкаЗаРазработчика = Ложь;
	Если ВключенаПубликация И Не ОтмеченоРазработчиком И Не ЭтоАвтор И ПубликацияДоступна Тогда
		ПроверкаЗаРазработчика = Истина;
		Элементы.ОтметитьПроверкуПатча.Заголовок = НСтр("ru = 'Проверить за разработчика'");
	ИначеЕсли ВключенаПубликация И ЭтоАудитор Тогда
		Элементы.ОтметитьПроверкуПатча.Заголовок = НСтр("ru = 'Аудит выполнен'");
	Иначе
		Элементы.ОтметитьПроверкуПатча.Заголовок = НСтр("ru = 'Проверен'");
	КонецЕсли;
	
	Элементы.ГруппаПроверяющийСтатусПроверки.Видимость = ОтмеченоПроверяющим;
	Элементы.ГруппаАудиторСтатусПроверки.Видимость = ОтмеченоАудитором;
	Элементы.ГруппаОтображениеИнформации.Видимость = ПоказатьПредупреждение
		И ДополнительныйКонтроль
		И ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ПатчДляБазовой;
	
	Элементы.СохранитьПатч.Видимость                       = МожноСохранитьПатч;
	Элементы.СохранитьПатчКонтекст.Доступность             = МожноСохранитьПатч;
	Элементы.ОтметитьПроверкуПатча.Видимость               = МожноПроверитьПатч;
	Элементы.ОтменитьПроверку.Доступность                  = МожноОтменитьПроверку;
	Элементы.ПодготовитьЗамещающийПатчКонтекст.Доступность = МожноПеревыпуститьПатч;
	Элементы.ПодготовитьЗамещающийПатч.Видимость           = МожноПеревыпуститьПатч;
	Элементы.Опубликовать.Видимость                        = МожноОпубликовать И Не МожноПовторитьПубликацию;
	Элементы.ОпубликоватьКонтекст.Доступность              = МожноОпубликовать;
	Элементы.ОпубликоватьКонтекст.Видимость                = Не МожноПовторитьПубликацию;
	Элементы.Применимость.Видимость                        = МожноПосмотретьПрименимость;
	Элементы.ПрименимостьКонтекст.Доступность              = МожноПосмотретьПрименимость;
	Элементы.РедактироватьПатч.Видимость                   = МожноПересоздать;
	Элементы.РедактироватьПатчКонтекст.Доступность         = МожноПересоздать;
	Элементы.ПатчНеТребуется.Доступность                   = МожноОтметитьНеТребуется;
	Элементы.ПатчНеТребуетсяКонтекст.Доступность           = МожноОтметитьНеТребуется;
	Элементы.ОтозватьВерсиюПатча.Видимость                 = МожноОтозвать;
	Элементы.ОтозватьВерсиюПатчаКонтекст.Доступность       = МожноОтозвать;
	Элементы.ПовторитьПубликацию.Видимость                 = МожноПовторитьПубликацию;
	Элементы.УстановитьКоммитыДляСборкиПатчаКонтекст.Доступность = МожноУказатьКоммитыДляСборкиПатча;
	Если ЗначениеЗаполнено(ЗаголовокКнопкиПересозданияПатча) Тогда
		Элементы.УстановитьКоммитыДляСборкиПатчаКонтекст.Заголовок = ЗаголовокКнопкиПересозданияПатча;
	КонецЕсли;
	Если МожноПовторитьПубликацию Тогда
		Элементы.ПовторитьПубликацию.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанелиИВДополнительномПодменю;
	Иначе
		Элементы.ПовторитьПубликацию.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	КонецЕсли;
	Элементы.СоздатьВручную.Видимость = МожноСоздатьВручную;
	Элементы.ОткрытьКарточку.Доступность = ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.ЭтоСтрокаПереключателя
		И Не ТекущиеДанные.ПатчДляБазовой;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ВерсииЗавершениеВыбора", ЭтотОбъект);
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отмеченные", Версии);
	ПараметрыОткрытия.Вставить("ОписаниеТипов", Новый ОписаниеТипов("СправочникСсылка.ВерсииПроекта"));
	ПараметрыОткрытия.Вставить("ЗначенияДляВыбора", ДоступныеВерсииПроекта);
	ПараметрыОткрытия.Вставить("ЗначенияДляВыбораЗаполнены", ДоступныеВерсииПроекта.Количество() > 0);
	ПараметрыОткрытия.Вставить("ОграничиватьВыборУказаннымиЗначениями", Истина);
	ПараметрыОткрытия.Вставить("Представление", НСтр("ru = 'Выбор версий'"));
	ПараметрыОткрытия.Вставить("ПараметрыВыбора", Новый Массив);
	ПараметрыОткрытия.Вставить("ВыборГруппИЭлементов", ГруппыИЭлементы.Элементы);
	
	ОткрытьФорму("Справочник.Патчи.Форма.ВводЗначенийСпискомСФлажками", ПараметрыОткрытия, ЭтотОбъект,,,, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Если Не ПатчПоОшибке Тогда
		ИзмененПроект = Истина;
		ЗаполнитьДоступныеВерсииПроектаДляПатчей();
		Версии.Очистить();
		Объект.РазделПроекта = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОтозванныеПриИзменении(Элемент)
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаКлиенте
Процедура РазделПроектаПриИзменении(Элемент)
	Предупреждать = Ложь;
	Для Каждого ВерсияПатча Из ВерсииПатчаДерево.ПолучитьЭлементы() Цикл
		Если ВерсияПатча.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления")
			И ВерсияПатча.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется")
			И ВерсияПатча.Состояние <> ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Отозван") Тогда
			Предупреждать = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Предупреждать Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Новое значение раздела будет учтено только после пересоздания версий патча.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВерсииПатчаДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВерсииПатчаДеревоПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийПриИзменении(Элемент)
	ИзмененПроверяющий = Истина;
	ЭтоПроверяющий = (ТекущийПользователь = Объект.Проверяющий);
КонецПроцедуры

&НаКлиенте
Процедура АудиторПриИзменении(Элемент)
	ИзмененАудитор = Истина;
	ЭтоАудитор     = (ТекущийПользователь = Объект.Аудитор);
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = АвторИсправления Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение = НСтр("ru = 'Проверяющим не может быть автор исправления или разработчик, выполнивший первоначальную проверку патча.'");
		ПоказатьПредупреждение(, Предупреждение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АудиторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = АвторИсправления Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение = НСтр("ru = 'Аудитором не может быть автор исправления или разработчик, выполнивший первоначальную проверку патча.'");
		ПоказатьПредупреждение(, Предупреждение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияУказатьАудитораНажатие(Элемент)
	Элементы.ДекорацияУказатьАудитора.Видимость = Ложь;
	Элементы.ГруппаАудитор.Видимость = Истина;
	Элементы.Проверяющий.Заголовок = НСтр("ru = 'Проверяющий'");
КонецПроцедуры 

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	
	Если ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Необходимо сохранить измененное описание в собранных патчах.
		|Операция может занять длительное время.
		|Продолжить?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеПриИзмененииПослеВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыВерсииПатча

&НаКлиенте
Процедура ВерсииПатчаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = Элементы.ВерсииПатчаДеревоПереключатель.Имя Тогда
		СтрокаПереключателя = ВерсииПатчаДерево.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Родитель            = СтрокаПереключателя.ПолучитьРодителя();
		ДочерниеЭлементы    = Родитель.ПолучитьЭлементы();
		Если СтрокаПереключателя.Отображать Тогда
			КоличествоБазовых = ДочерниеЭлементы.Количество() - 1;
			ШаблонПереключателя = НСтр("ru = 'Показать патчи для базовых версий (%1)'");
			
			СтрокаПереключателя.ПолеПереключателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонПереключателя, КоличествоБазовых);
		Иначе
			СтрокаПереключателя.ПолеПереключателя = НСтр("ru = 'Скрыть патчи для базовых версий'");
		КонецЕсли;
		ПереключитьОтображениеСтрок(ДочерниеЭлементы, Не СтрокаПереключателя.Отображать);
		Возврат;
	ИначеЕсли Поле.Имя = Элементы.ВерсииПатчаДеревоИндикаторСозданияПоКоммитам.Имя Тогда
		ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
		ПередаваемыеПараметры = Новый Структура;
		ПередаваемыеПараметры.Вставить("Версия", ТекущиеДанные.Версия);
		ПередаваемыеПараметры.Вставить("ИдентификаторПатча", ТекущиеДанные.УникальныйИдентификатор);
		ПередаваемыеПараметры.Вставить("Патч", Объект.Ссылка);
		ПередаваемыеПараметры.Вставить("УстановкаКоммитов", Истина);
		
		ОбработчикЗавершения = Новый ОписаниеОповещения("ПослеУстановкиКоммитовДляСборкиПатча", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.Патчи.Форма.ПересоздатьИУказатьКоммиты", ПередаваемыеПараметры, , , , , ОбработчикЗавершения);
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ВерсииПатчаДерево.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Ключ = КлючАктивнойДлительнойОперации(ТекущаяСтрока.УникальныйИдентификатор);
	Если АктивныеДлительныеОперации.Свойство(Ключ) Тогда
		ОткрытьФормуРедактированияПатча();
	Иначе
		ОткрытьКарточкуПатча(ВыбраннаяСтрока, Поле.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьОтображениеСтрок(Строки, Значение)
	
	Для Каждого Строка Из Строки Цикл
		Строка.Отображать = Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПатч(Команда)
	ИнформацияОПатче = ИнформацияОПатче();
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, ИнформацияОПатче.ДанныеПатча, ИнформацияОПатче.ИмяПатча);
КонецПроцедуры

&НаКлиенте
Процедура ПроверенОпубликовать(Команда)
	
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Ключ = КлючАктивнойДлительнойОперации(ТекущиеДанные.УникальныйИдентификатор);
		Если АктивныеДлительныеОперации.Свойство(Ключ) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Выполняется сохранение измененного патча, необходимо дождаться завершения операции.'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПеревыпускаемыеПатчи.Количество() <> 0 Тогда
		Для Каждого ВерсияПатча Из ВерсииПатчаДерево.ПолучитьЭлементы() Цикл
			Если ВерсияПатча.Версия = ТекущиеДанные.Версия
				И ВерсияПатча.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован") Тогда
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("Патч", Объект.Ссылка);
				ДополнительныеПараметры.Вставить("Версия", ВерсияПатча.Версия);
				ДополнительныеПараметры.Вставить("УникальныйИдентификатор", ВерсияПатча.УникальныйИдентификатор);
				ДополнительныеПараметры.Вставить("ПеревыпускПатча", Истина);
				
				ОбработчикЗавершения = Новый ОписаниеОповещения("ПослеВопросаОПеревыпускеПатчаЗавершение", ЭтотОбъект);
				ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ОтзывПатча", ДополнительныеПараметры, , , , , ОбработчикЗавершения);
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОпубликоватьПатч();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПатч(Перевыпуск = Ложь)
	
	Если ДополнительныйКонтроль Тогда
		ТекстВопроса = НСтр("ru = 'Опубликовать патч?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОпубликоватьПроверенныйПатч", ЭтотОбъект);
		Если Перевыпуск Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
			Возврат;
		КонецЕсли;
		
		КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("Проект", Объект.Владелец);
		ПараметрыПроверки.Вставить("НужноУказатьПроверяющего", Ложь);
		ПараметрыПроверки.Вставить("АвторИсправления", АвторИсправления);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОпубликоватьПатчПослеПроверки", ЭтотОбъект);
		ОткрытьФорму("Справочник.Патчи.Форма.ПодтверждениеПроверкиПатча", ПараметрыПроверки , , , , , ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОПеревыпускеПатчаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> "Успешно" Тогда
		Возврат;
	КонецЕсли;
	
	ОпубликоватьПатч(Истина);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура Применимость(Команда)
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДлительныеОперации = АктивныеДлительныеОперации;
	Если ТипЗнч(ТекущиеДлительныеОперации) = Тип("Структура") Тогда
		Для Каждого АктивнаяДлительнаяОперация Из ТекущиеДлительныеОперации Цикл
			Если АктивнаяДлительнаяОперация.Значение.Свойство("ИдентификаторПатча") Тогда
				Если АктивнаяДлительнаяОперация.Значение.ИдентификаторПатча = ТекущиеДанные.УникальныйИдентификатор Тогда
					ПоказатьПредупреждение(, НСтр("ru = 'Необходимо дождаться завершения операции добавления патча.'"));
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПрименимостьЗавершение", ЭтотОбъект);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Патч", Объект.Ссылка);
	ПередаваемыеПараметры.Вставить("Версия", ТекущиеДанные.Версия);
	ПередаваемыеПараметры.Вставить("УникальныйИдентификатор", ТекущиеДанные.УникальныйИдентификатор);
	ПередаваемыеПараметры.Вставить("ПатчОпубликован", ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Опубликован"));
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.РедактированиеПрименимости", ПередаваемыеПараметры,, ТекущиеДанные.УникальныйИдентификатор,,, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьВерсиюПатча(Команда)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОтозватьВерсиюПатчаЗавершение", ЭтотОбъект);
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ОтзывПатча", ПередаваемыеПараметры(), , , , , ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПатчНеТребуется(Команда)
	ПатчНеТребуетсяНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	ОткрытьКарточкуПатча(Элементы.ВерсииПатчаДерево.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПовторитьПубликацию(Команда)
	
	ТекстВопроса = НСтр("ru = 'Повторить публикацию патча?'");
	ИдентификаторПатча = Элементы.ВерсииПатчаДерево.ТекущиеДанные.УникальныйИдентификатор;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьПубликациюПатча", ЭтотОбъект, ИдентификаторПатча);
	КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПроверкуПатча(Команда)
	
	ПараметрыПроверки = Новый Структура;
	Если Не ЭтоАудитор И Не ЭтоПроверяющий Тогда
		Если Не ЗначениеЗаполнено(Объект.Проверяющий) Тогда
			ПараметрыПроверки.Вставить("НужноУказатьПроверяющего", НуженПроверяющий);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Аудитор) Тогда
			ПараметрыПроверки.Вставить("НужноУказатьАудитора", НуженАудитор);
		КонецЕсли;
	ИначеЕсли ПроверкаЗаРазработчика Тогда
		ПараметрыПроверки.Вставить("НужноУказатьПроверяющего", Истина);
		ПараметрыПроверки.Вставить("НужноУказатьАудитора", Истина);
	КонецЕсли;
	
	ПараметрыПроверки.Вставить("Проект", Объект.Владелец);
	Если ПроверкаЗаРазработчика Тогда
		ПараметрыПроверки.Вставить("ЗамещаетРазработчика", ТекущийПользователь);
	КонецЕсли;
	ПараметрыПроверки.Вставить("АвторИсправления", АвторИсправления);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьПроверкуПатча", ЭтотОбъект);
	ОткрытьФорму("Справочник.Патчи.Форма.ПодтверждениеПроверкиПатча", ПараметрыПроверки , , , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроверку(Команда)
	ТекстВопроса = НСтр("ru = 'Снять отметку о проверке патча?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтменитьПроверкуЗавершение", ЭтотОбъект);
	
	КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура СравнитьВерсииПатча(Команда)
	Если Элементы.ВерсииПатчаДерево.ВыделенныеСтроки.Количество() < 2 Тогда
		Текст = НСтр("ru = 'Выберите версии патча для сравнения.'");
		ПоказатьПредупреждение(, Текст);
		Возврат;
	КонецЕсли;
	
	СписокИдентификаторов = Новый СписокЗначений;
	Для Каждого ВыделеннаяСтрока Из Элементы.ВерсииПатчаДерево.ВыделенныеСтроки Цикл
		Строка = ВерсииПатчаДерево.НайтиПоИдентификатору(ВыделеннаяСтрока);
		СписокИдентификаторов.Добавить(Строка.УникальныйИдентификатор);
	КонецЦикла;
	
	ОткрытьФорму("Справочник.Патчи.Форма.СравнениеВерсийПатча", Новый Структура("ИдентификаторыПатчей", СписокИдентификаторов));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВручную(Команда)
	
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления") Тогда
		ТекстВопроса = НСтр("ru = 'Автоматическое создание будет отключено.
			|Включить его обратно можно по команде ""Редактировать патч...""
			|в контекстном меню для версии патча.
			|
			|Продолжить?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрикрепитьПатчПослеВопроса", ЭтотОбъект, ТекущиеДанные.УникальныйИдентификатор);
		КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуРучногоСозданияПатча(ТекущиеДанные.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПатч(Команда)
	ОткрытьФормуРедактированияПатча();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияПатча()
	
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуРучногоСозданияПатча(ТекущиеДанные.УникальныйИдентификатор, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьЗамещающийПатч(Команда)
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Если патч привносит более критичную ошибку, то его сначала нужно отозвать.'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодготовитьЗамещающийПатчПослеВопроса", ЭтотОбъект, ТекущиеДанные.Версия);
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить("ПодготовитьНовуюВерсию", НСтр("ru = 'Подготовить новую версию патча'"));
	КнопкиВопроса.Добавить("ОтозватьПатч", НСтр("ru = 'Отозвать патч'"));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоммитыПоКоторымСобирать(Команда)
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Версия", ТекущиеДанные.Версия);
	ПередаваемыеПараметры.Вставить("ИдентификаторПатча", ТекущиеДанные.УникальныйИдентификатор);
	ПередаваемыеПараметры.Вставить("Патч", Объект.Ссылка);
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПослеУстановкиКоммитовДляСборкиПатча", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Патчи.Форма.ПересоздатьИУказатьКоммиты", ПередаваемыеПараметры, , , , , ОбработчикЗавершения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодготовитьЗамещающийПатчПослеВопроса(Результат, Версия) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = "ПодготовитьНовуюВерсию" Тогда
		ДобавитьЗамещающийПатч(Версия);
	ИначеЕсли Результат = "ОтозватьПатч" Тогда
		ПередаваемыеПараметры = ПередаваемыеПараметры();
		ПередаваемыеПараметры.Вставить("ОтзывБезВопросов", Истина);
		ОбработчикЗавершения  = Новый ОписаниеОповещения("ОтозватьВерсиюПатчаЗавершение", ЭтотОбъект);
		ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ОтзывПатча", ПередаваемыеПараметры, , , , , ОбработчикЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиКоммитовДляСборкиПатча(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		ЗаполнитьВерсииПатча();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗамещающийПатч(Версия)
	
	ПатчиСлужебный.ДобавитьПатчНаКонкретнуюВерсию(Объект.Ссылка, Версия, Ложь, , Истина);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуПатча(ВыбраннаяСтрока, ИмяПоля = Неопределено)
	ТекущаяСтрока = ВерсииПатчаДерево.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяПоля <> Неопределено
		И ИмяПоля = Элементы.ВерсииПатчаДеревоСостояние.Имя 
		И (ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Ошибка")
			Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаПубликации")) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("УникальныйИдентификатор", ТекущаяСтрока.УникальныйИдентификатор);
		ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ПросмотрОшибок", ПараметрыФормы);
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.ПатчДляБазовой Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура(
		"Патч, Версия, УникальныйИдентификатор, Ошибка",
		Объект.Ссылка,
		ТекущаяСтрока.Версия,
		ТекущаяСтрока.УникальныйИдентификатор,
		ПустаяОшибка);
	
	ТипЗначения = Тип("РегистрСведенийКлючЗаписи.ВерсииПатчей");
	ПараметрыЗаписи = Новый Массив(1);
	ПараметрыЗаписи[0] = Отбор;
	
	КлючЗаписи = Новый(ТипЗначения, ПараметрыЗаписи);
	ПоказатьЗначение(Неопределено, КлючЗаписи);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВерсииПатча()
	
	Идентификатор = Неопределено;
	Если Элементы.ВерсииПатчаДерево.ТекущаяСтрока <> Неопределено Тогда
		НайденнаяСтрока = ВерсииПатчаДерево.НайтиПоИдентификатору(Элементы.ВерсииПатчаДерево.ТекущаяСтрока);
		Идентификатор = НайденнаяСтрока.УникальныйИдентификатор;
	КонецЕсли;
	
	ТаблицаВерсийПатча = РеквизитФормыВЗначение("ВерсииПатчаДерево");
	ТаблицаВерсийПатча.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Патч", Объект.Ссылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрСведений.ВерсииПатчей КАК ВерсииПатчей
		|ГДЕ
		|	ВерсииПатчей.Патч = &Патч";
	ТаблицаЗаписей = Запрос.Выполнить().Выгрузить();
	ТаблицаЗаписей.Сортировать("ПодписанДляКонфигурации");
	ОпубликованныеПатчи = Новый Массив;
	КоличествоПатчейДляСравнения = 0;
	Для Каждого Запись Из ТаблицаЗаписей Цикл
		Если Не ПоказыватьОтозванные
			И Запись.Состояние = Перечисления.СтатусыПатчей.Отозван Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.ПодписанДляКонфигурации) Тогда
			Родитель = Неопределено;
			Если Запись.Состояние = Перечисления.СтатусыПатчей.Отозван
				Или Запись.Состояние = Перечисления.СтатусыПатчей.Опубликован Тогда
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Состояние", Запись.Состояние);
				ПараметрыОтбора.Вставить("Версия", Запись.Версия);
				РодительскиеПатчи = ТаблицаВерсийПатча.Строки.НайтиСтроки(ПараметрыОтбора);
				Для Каждого ПатчРодитель Из РодительскиеПатчи Цикл
					Свойства = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ПатчРодитель.УникальныйИдентификатор, "Параметры");
					ПараметрыПатча = Свойства.Параметры.Получить();
					Если Не ПараметрыПатча.Свойство("ПатчиБазовыхВерсий") Тогда
						Продолжить;
					КонецЕсли;
					Если ПараметрыПатча.ПатчиБазовыхВерсий.Найти(Запись.УникальныйИдентификатор) <> Неопределено Тогда
						Родитель = ПатчРодитель;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если Родитель = Неопределено
				И ЗначениеЗаполнено(Запись.ВладелецПатча) Тогда
				Родитель = ТаблицаВерсийПатча.Строки.Найти(Запись.ВладелецПатча, "УникальныйИдентификатор");
			КонецЕсли;
			
			Если Родитель = Неопределено Тогда
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Версия", Запись.Версия);
				РодительскиеПатчи = ТаблицаВерсийПатча.Строки.НайтиСтроки(ПараметрыОтбора);
				Для Каждого ПатчРодитель Из РодительскиеПатчи Цикл
					Если ПатчРодитель.Состояние = Перечисления.СтатусыПатчей.Отозван Тогда
						Продолжить;
					КонецЕсли;
					
					Родитель = ПатчРодитель;
					Прервать;
				КонецЦикла;
			КонецЕсли;
			
			Если Родитель = Неопределено Тогда
				Родитель = ТаблицаВерсийПатча.Строки.Найти(Запись.Версия, "Версия");
			КонецЕсли;
			
			Если Родитель = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Строка = Родитель.Строки.Добавить();
			УстановитьПривилегированныйРежим(Истина);
			Строка.Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ПодписанДляКонфигурации, "ИмяКонфигурации");
			УстановитьПривилегированныйРежим(Ложь);
			Строка.ПатчДляБазовой = Истина; 
		Иначе
			Строка = ТаблицаВерсийПатча.Строки.Добавить();
			Строка.Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ИмяКонфигурации");
			
			ПараметрыПатча = ПатчиСлужебный.ПараметрыПатча(Запись.Параметры.Получить());
			Если ПараметрыПатча.КоммитыИсправления.Количество() > 0 Тогда
				Строка.ИндикаторСозданияПоКоммитам = БиблиотекаКартинок.GitСоздатьВетку;
			Иначе
				Строка.ИндикаторСозданияПоКоммитам = БиблиотекаКартинок.Пустая;
			КонецЕсли;
		КонецЕсли;
		Строка.Имя = Запись.ИмяПатча;
		ЗаполнитьЗначенияСвойств(Строка, Запись, "Версия, Состояние, УникальныйИдентификатор");
		
		Ключ = КлючАктивнойДлительнойОперации(Строка.УникальныйИдентификатор);
		Если АктивныеДлительныеОперации <> Неопределено
			И АктивныеДлительныеОперации.Свойство(Ключ) Тогда
			Строка.Индикатор = БиблиотекаКартинок.ДлительнаяОперация16;
		КонецЕсли;
		
		Если ДополнительныйКонтроль Тогда
			УстановитьКартинкуВДереве(Строка);
		КонецЕсли;
		
		Если Строка.Состояние = Перечисления.СтатусыПатчей.СозданНеПроверен
			Или Строка.Состояние = Перечисления.СтатусыПатчей.СозданПроверен
			Или Строка.Состояние = Перечисления.СтатусыПатчей.ОжидаетПубликации
			Или Строка.Состояние = Перечисления.СтатусыПатчей.Публикуется
			Или Строка.Состояние = Перечисления.СтатусыПатчей.Опубликован Тогда
			КоличествоПатчейДляСравнения = КоличествоПатчейДляСравнения + 1;
		КонецЕсли; 
		
		Если Строка.Состояние = Перечисления.СтатусыПатчей.Опубликован Тогда
			ЕстьОпубликованныеПатчи = Истина;
		КонецЕсли;
		
		Строка.Отозван = (Строка.Состояние = Перечисления.СтатусыПатчей.Отозван);
		
		Шаблон = НСтр("ru = '%1 от %2'");
		Если Не ЗначениеЗаполнено(Запись.НачальнаяСборка)
			И Не ЗначениеЗаполнено(Запись.КонечнаяСборка) Тогда
			Сборки = "";
		ИначеЕсли Запись.НачальнаяСборка = Запись.КонечнаяСборка Тогда
			ДатаПубликации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.НачальнаяСборка, "ДатаПубликации");
			Сборки = СтрШаблон(Шаблон, Запись.НачальнаяСборка, Формат(ДатаПубликации, "ДЛФ=Д"));
		Иначе
			Ссылки = Новый Массив;
			Ссылки.Добавить(Запись.НачальнаяСборка);
			Ссылки.Добавить(Запись.КонечнаяСборка);
			Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Ссылки, "ДатаПубликации");
			Сборки = СтрШаблон(Шаблон, Запись.НачальнаяСборка, Формат(Результат[Запись.НачальнаяСборка], "ДЛФ=Д"))
				+ " - "
				+ СтрШаблон(Шаблон, Запись.КонечнаяСборка, Формат(Результат[Запись.КонечнаяСборка], "ДЛФ=Д"));
		КонецЕсли;
		
		Строка.Сборки = Сборки;
	КонецЦикла;
	
	Если Не ПатчПоОшибке Тогда
		Версии.ЗагрузитьЗначения(ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаВерсийПатча.Строки, "Версия", Истина));
	КонецЕсли;
	
	ПроверенныеВерсии = Новый Массив;
	Для Каждого СтрокаВерсияПатча Из ТаблицаВерсийПатча.Строки Цикл
		Если СтрокаВерсияПатча.Состояние <> Перечисления.СтатусыПатчей.Опубликован
			И СтрокаВерсияПатча.Состояние <> Перечисления.СтатусыПатчей.Отозван
			И ПроверенныеВерсии.Найти(СтрокаВерсияПатча.Версия) = Неопределено Тогда
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Версия", СтрокаВерсияПатча.Версия);
			ПараметрыОтбора.Вставить("Состояние", Перечисления.СтатусыПатчей.Опубликован);
			РезультатПоиска = ТаблицаВерсийПатча.Строки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого Строка Из РезультатПоиска Цикл
				ПеревыпускаемыеПатчи.Добавить(Строка.УникальныйИдентификатор);
				Прервать;
			КонецЦикла;
		КонецЕсли;
		
		КоличествоБазовых = СтрокаВерсияПатча.Строки.Количество();
		Если КоличествоБазовых = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ШаблонПереключателя = НСтр("ru = 'Показать патчи для базовых версий (%1)'");
		ДочерняяСтрока = СтрокаВерсияПатча.Строки.Добавить();
		ДочерняяСтрока.ЭтоСтрокаПереключателя = Истина;
		ДочерняяСтрока.ПолеПереключателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПереключателя, КоличествоБазовых);
	КонецЦикла;
	
	ТаблицаВерсийПатча.Строки.Сортировать("Отозван");
	ЗначениеВРеквизитФормы(ТаблицаВерсийПатча, "ВерсииПатчаДерево");
	
	СтрокиДерева = ВерсииПатчаДерево.ПолучитьЭлементы();
	ИдентификаторСтроки = Неопределено;
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.УникальныйИдентификатор = Идентификатор Тогда
			ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		Элементы.ВерсииПатчаДерево.ТекущаяСтрока = ИдентификаторСтроки;
	КонецЕсли;
	
	Элементы.СравнитьВерсииПатча.Видимость = (КоличествоПатчейДляСравнения >= 2);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуВДереве(Строка)
	
	ПровереноРазработчиком = Ложь;
	ПровереноПроверяющим = Не НуженПроверяющий;
	ПровереноАудитором = Не НуженАудитор;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИдентификаторПатча", Строка.УникальныйИдентификатор);
	НайденныеСтроки = Объект.СостоянияПроверкиПатча.НайтиСтроки(ПараметрыОтбора);
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Если НайденнаяСтрока.Роль = "Разработчик" Тогда
			ПровереноРазработчиком = Истина;
		КонецЕсли;
		Если НайденнаяСтрока.Роль = "Проверяющий" Тогда
			ПровереноПроверяющим = Истина;
		КонецЕсли;
		Если НайденнаяСтрока.Роль = "Аудитор" Тогда
			ПровереноАудитором = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ПровереноРазработчиком
		И ПровереноПроверяющим
		И ПровереноАудитором Тогда
		Строка.Картинка = БиблиотекаКартинок.СостоянияРасширенийПодключено;
	ИначеЕсли Не Строка.ПатчДляБазовой Тогда
		Строка.Картинка = БиблиотекаКартинок.СостоянияРасширенийБудетПодключено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОшибкаПриИзмененииНаСервере()
	
	ПатчПоОшибке = (ТипЗнч(Объект.Ошибка) = Тип("СправочникСсылка.Ошибки"));
	
	Если ПатчПоОшибке И ЗначениеЗаполнено(Объект.Ошибка) Тогда
		СвойстваОшибки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ошибка, "Владелец,Наименование,ПубликуемоеОписание");
		Объект.Владелец = СвойстваОшибки.Владелец;
		Объект.Наименование = СвойстваОшибки.Наименование;
		Объект.Описание = СвойстваОшибки.ПубликуемоеОписание;
		ПатчПоОшибке = Истина;
	КонецЕсли;
	
	Если ПатчПоОшибке Тогда
		Элементы.Описание.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ПатчПоОшибке");
	Иначе
		Элементы.Описание.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ПатчПоНомеру");
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.Наименование.ТолькоПросмотр = ПатчПоОшибке;
	Элементы.Проект.ТолькоПросмотр   = ПатчПоОшибке;
	Элементы.Версии.Видимость = Не ПатчПоОшибке;
	Элементы.РазделПроекта.Видимость = Не ПатчПоОшибке;
	
КонецПроцедуры

&НаСервере
Функция ИнформацияОПатче()
	
	ВерсияПатча = ВерсииПатчаДерево.НайтиПоИдентификатору(Элементы.ВерсииПатчаДерево.ТекущаяСтрока);
	ДанныеПатча = ПатчиСлужебный.ДвоичныеДанныеПатча(ВерсияПатча.УникальныйИдентификатор);
	НомерПатча  = ПатчиСлужебный.НомерПатча(ВерсияПатча.УникальныйИдентификатор);
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеПатча", ПоместитьВоВременноеХранилище(ДанныеПатча, УникальныйИдентификатор));
	Результат.Вставить("ИмяПатча", ПатчиСлужебный.ИмяПатча(Объект.Ссылка, НомерПатча));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДоступныеВерсииПроектаДляПатчей()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПроекта.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВерсииПроекта КАК ВерсииПроекта
		|ГДЕ
		|	ВерсииПроекта.СоздаватьПатчи = ИСТИНА
		|	И ВерсииПроекта.Владелец = &Владелец";
	ДоступныеВерсии = Запрос.Выполнить().Выгрузить();
	ДоступныеВерсииПроекта.Очистить();
	Для Каждого ДоступнаяВерсия Из ДоступныеВерсии Цикл
		ДоступныеВерсииПроекта.Добавить(ДоступнаяВерсия.Ссылка, Строка(ДоступнаяВерсия.Ссылка));
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПроверкуПатча(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	Если Не Результат.ПатчПроверен Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСостояниеПроверкиПатча(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПатчПослеПроверки(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	Если Не Результат.ПатчПроверен Тогда
		Возврат;
	КонецЕсли;
	
	ПодтвердитьПроверкуПатчаЗавершение();
	Оповестить("Патчи_ИзменениеСтатуса", , "ФормаЭлемента");
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеПроверкиПатча(РезультатПроверки)
	
	// Установка признака проверки версии патча.
	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.Патчи");
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", Объект.Ссылка);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		ОбъектПатч = РеквизитФормыВЗначение("Объект");
		Если РезультатПроверки.Свойство("Проверяющий") Тогда
			ОбъектПатч.Проверяющий = РезультатПроверки.Проверяющий;
		КонецЕсли;
		
		Если РезультатПроверки.Свойство("Аудитор") Тогда
			ОбъектПатч.Аудитор = РезультатПроверки.Аудитор;
		КонецЕсли;
		
		Роли = Новый Массив;
		Если ЭтоПроверяющий И Не ПроверкаЗаРазработчика Тогда
			Роли.Добавить("Проверяющий");
		КонецЕсли;
		Если ЭтоАудитор И Не ПроверкаЗаРазработчика Тогда
			Роли.Добавить("Аудитор");
		КонецЕсли;
		Если Не ЭтоПроверяющий И Не ЭтоАудитор Или ПроверкаЗаРазработчика Тогда
			Роли.Добавить("Разработчик");
		КонецЕсли;
		
		ТекущаяСтрока = Элементы.ВерсииПатчаДерево.ТекущаяСтрока;
		НайденнаяСтрока = ВерсииПатчаДерево.НайтиПоИдентификатору(ТекущаяСтрока);
		
		Для Каждого Роль Из Роли Цикл
			Строка = ОбъектПатч.СостоянияПроверкиПатча.Добавить();
			Строка.Роль = Роль;
			Строка.ВерсияПатча = НайденнаяСтрока.Версия;
			Строка.ДатаПроверки = ТекущаяДатаСеанса();
			Строка.ИдентификаторПатча = НайденнаяСтрока.УникальныйИдентификатор;
			Строка.Выполнил = Пользователи.ТекущийПользователь();
		КонецЦикла;
		ОбъектПатч.Записать();
		ЗначениеВРеквизитФормы(ОбъектПатч, "Объект");
		
		// Если все проверки выполнены - нужно поменять состояние патча на Создан, проверен.
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВерсияПатча", НайденнаяСтрока.Версия);
		ПараметрыОтбора.Вставить("ИдентификаторПатча", НайденнаяСтрока.УникальныйИдентификатор);
		НайденныеСтроки = Объект.СостоянияПроверкиПатча.НайтиСтроки(ПараметрыОтбора);
		ОтмеченоАудитором = Не НуженАудитор;
		ОтмеченоПроверяющим = Не НуженПроверяющий;
		ОтмеченоРазработчиком = Ложь;
		Для Каждого ОтметкаОПроверке Из НайденныеСтроки Цикл
			Если ОтметкаОПроверке.Роль = "Аудитор" Тогда
				ОтмеченоАудитором = Истина;
			КонецЕсли;
			Если ОтметкаОПроверке.Роль = "Проверяющий" Тогда
				ОтмеченоПроверяющим = Истина;
			КонецЕсли;
			Если ОтметкаОПроверке.Роль = "Разработчик" Тогда
				ОтмеченоРазработчиком = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ОтмеченоПроверяющим И ОтмеченоАудитором И ОтмеченоРазработчиком Тогда
			ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.СозданПроверен);
			Если ПубликацияДоступна Тогда
				ТекстСообщения = НСтр("ru = 'Необходимо выполнить публикацию патча для версии %1.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, НайденнаяСтрока.Версия);
				ТекущийПользователь = Пользователи.ТекущийПользователь();
				РаботаССистемойВзаимодействия.ДобавитьСообщениеПоОбъекту(Объект.Ссылка,
					ТекущийПользователь,
					ТекущийПользователь,
					Объект.Наименование,
					ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	// Установлен проверяющий - нужно написать уведомление в обсуждениях.
	УстановленПроверяющий = РезультатПроверки.Свойство("Проверяющий");
	УстановленАудитор = РезультатПроверки.Свойство("Аудитор");
	НаписатьСообщениеВОбсуждениях(УстановленПроверяющий, УстановленАудитор);
	
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура НаписатьСообщениеВОбсуждениях(УстановленПроверяющий = Ложь, УстановленАудитор = Ложь)
	
	Если (УстановленПроверяющий Или ИзмененПроверяющий)
		И НуженПроверяющий
		И НуженАудитор
		И Объект.Проверяющий = Объект.Аудитор Тогда
		
		ТекстСообщения = НСтр("ru = 'Просьба проверить патч и выполнить аудит исправления.'");
		
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		РаботаССистемойВзаимодействия.ДобавитьСообщениеПоОбъекту(Объект.Ссылка,
			Объект.Проверяющий,
			ТекущийПользователь,
			Объект.Наименование,
			ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Если УстановленПроверяющий Или ИзмененПроверяющий Тогда
		ТекстСообщения = НСтр("ru = 'Просьба проверить патч.'");
		
		РаботаССистемойВзаимодействия.ДобавитьСообщениеПоОбъекту(Объект.Ссылка,
			Объект.Проверяющий,
			ТекущийПользователь,
			Объект.Наименование,
			ТекстСообщения);
	КонецЕсли;
	
	Если УстановленАудитор Или ИзмененАудитор Тогда
		ТекстСообщения = НСтр("ru = 'Просьба выполнить аудит патча и исправления.'");
		
		РаботаССистемойВзаимодействия.ДобавитьСообщениеПоОбъекту(Объект.Ссылка,
			Объект.Аудитор,
			ТекущийПользователь,
			Объект.Наименование,
			ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодтвердитьПроверкуПатчаЗавершение()
	Если ВключенаПубликация Тогда
		ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.ОжидаетПубликации);
	Иначе
		ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.СозданПроверен);
	КонецЕсли;
	
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаСервере
Функция ПередаваемыеПараметры()
	ВерсияПатча = ВерсииПатчаДерево.НайтиПоИдентификатору(Элементы.ВерсииПатчаДерево.ТекущаяСтрока);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Патч", Объект.Ссылка);
	ПередаваемыеПараметры.Вставить("Версия", ВерсияПатча.Версия);
	ПередаваемыеПараметры.Вставить("УникальныйИдентификатор", ВерсияПатча.УникальныйИдентификатор);
	ПередаваемыеПараметры.Вставить("ИмяПатча", ВерсияПатча.Имя);
	
	Возврат ПередаваемыеПараметры;
КонецФункции

&НаКлиенте
Процедура ОтозватьВерсиюПатчаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> "Успешно" Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьПатчиПослеОтзыва();
КонецПроцедуры

&НаСервере
Процедура ДобавитьПатчиПослеОтзыва()
	
	Если ТипЗнч(Объект.Ошибка) = Тип("СправочникСсылка.Ошибки") Тогда
		НеобходимыеСвойства = "Ссылка,Статус,Обнаружена,
			|СборкаОбнаружения,ДатаОбнаружения,ДатаИсправления,ВеткаОбнаружения";
		СвойстваОшибки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ошибка, НеобходимыеСвойства);
		ПатчиСлужебный.ДобавитьВерсииПатчаПоОшибке(Объект.Ссылка, СвойстваОшибки);
	Иначе
		Для Каждого Версия Из Версии Цикл
			ПатчиСлужебный.ДобавитьПатчНаКонкретнуюВерсию(Объект.Ссылка, Версия.Значение, Ложь);
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаКлиенте
Процедура ПрименимостьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаСервере
Процедура ПатчНеТребуетсяНаСервере()
	ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.ПатчНеТребуется);
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаКлиенте
Процедура ВерсииЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	Версии.Очистить();
	Для Каждого Элемент Из Результат Цикл
		Если Элемент.Пометка Тогда
			ЗаполнитьЗначенияСвойств(Версии.Добавить(), Элемент);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПубликациюПатча(Результат, ИдентификаторПубликации) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	ОтметитьНеобходимостьПубликацииПатча();
КонецПроцедуры

&НаСервере
Процедура ОтметитьНеобходимостьПубликацииПатча()
	ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.ОжидаетПубликации);
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроверкуЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ВерсииПатчаДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ВерсияПатча", ТекущиеДанные.Версия);
	ПараметрыОтбора.Вставить("ИдентификаторПатча", ТекущиеДанные.УникальныйИдентификатор);
	ОтменитьПроверкуНаСервере(ПараметрыОтбора, ТекущиеДанные.Состояние);
	
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроверкуНаСервере(ПараметрыОтбора, Состояние)
	
	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.Патчи");
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", Объект.Ссылка);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		ПатчОбъект = Объект.Ссылка.ПолучитьОбъект();
		
		НайденныеСтроки = ПатчОбъект.СостоянияПроверкиПатча.НайтиСтроки(ПараметрыОтбора);
		УдаляемыеСтроки = Новый Массив;
		Для Каждого Строка Из НайденныеСтроки Цикл
			Если ЭтоАвтор Тогда
				УдаляемыеСтроки.Добавить(Строка);
				Продолжить;
			КонецЕсли;
			
			Если ЭтоПроверяющий И Строка.Роль = "Проверяющий" Тогда
				УдаляемыеСтроки.Добавить(Строка);
				Продолжить;
			КонецЕсли;
			
			Если ЭтоАудитор И Строка.Роль = "Аудитор" Тогда
				УдаляемыеСтроки.Добавить(Строка);
				Продолжить;
			КонецЕсли;
			
			Если ЭтоПроверяющий
				И Строка.Роль = "Аудитор"
				И ПатчОбъект.Проверяющий = ПатчОбъект.Аудитор Тогда
				УдаляемыеСтроки.Добавить(Строка);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			ПатчОбъект.СостоянияПроверкиПатча.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		ПатчОбъект.Записать();
		
		Если Состояние = Перечисления.СтатусыПатчей.СозданПроверен Тогда
			ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.СозданНеПроверен);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПроверенныйПатч(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОпубликоватьПроверенныйПатчНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОпубликоватьПроверенныйПатчНаСервере()
	
	ПараметрыПроверки = ПередаваемыеПараметры();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УникальныйИдентификатор", ПараметрыПроверки.УникальныйИдентификатор);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПатчей.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	ВерсииПатчей.Состояние КАК Состояние
		|ИЗ
		|	РегистрСведений.ВерсииПатчей КАК ВерсииПатчей
		|ГДЕ
		|	ВерсииПатчей.УникальныйИдентификатор = &УникальныйИдентификатор";
	Результат = Запрос.Выполнить().Выгрузить();
	СостояниеПатча = Результат[0].Состояние;
	Если Результат.Количество() = 0 Тогда
		Прочитать();
		ТекстОшибки = НСтр("ru = 'Патч не найден. Возможно он был удален.'");
		ВызватьИсключение ТекстОшибки;
	ИначеЕсли СостояниеПатча = Перечисления.СтатусыПатчей.ОжидаетПубликации
		Или СостояниеПатча = Перечисления.СтатусыПатчей.Публикуется Тогда
		Прочитать();
		ТекстОшибки = НСтр("ru = 'Версия патча уже отправлена на публикацию.'");
		ВызватьИсключение ТекстОшибки;
	ИначеЕсли СостояниеПатча = Перечисления.СтатусыПатчей.Опубликован Тогда
		Прочитать();
		ТекстОшибки = НСтр("ru = 'Версия патча уже опубликована.'");
		ВызватьИсключение ТекстОшибки;
	ИначеЕсли СостояниеПатча <> Перечисления.СтатусыПатчей.СозданПроверен Тогда
		Прочитать();
		ТекстОшибки = НСтр("ru = 'Версия патча еще не проверена.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.ОжидаетПубликации);
	
	ЗаполнитьВерсииПатча();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьПатчПослеВопроса(Результат, ИдентификаторПатча) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВключитьРучноеСозданиеПатчаНаСервере();
	ОткрытьФормуРучногоСозданияПатча(ИдентификаторПатча);
КонецПроцедуры

&НаСервере
Процедура ВключитьРучноеСозданиеПатчаНаСервере()
	ПатчиСлужебный.УстановитьСтатусПатча(ПередаваемыеПараметры(), Перечисления.СтатусыПатчей.СозданиеВручную);
	ЗаполнитьВерсииПатча();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРучногоСозданияПатча(ИдентификаторПатча, РедактированиеПатча = Ложь)
	
	АктивнаяДлительнаяОперация = Неопределено;
	АктивныеДлительныеОперации.Свойство(КлючАктивнойДлительнойОперации(ИдентификаторПатча), АктивнаяДлительнаяОперация);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("ИдентификаторПатча", ИдентификаторПатча);
	ПередаваемыеПараметры.Вставить("РедактированиеПатча", РедактированиеПатча);
	ПередаваемыеПараметры.Вставить("АктивнаяДлительнаяОперация", АктивнаяДлительнаяОперация);
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.РучноеСозданиеПатча", ПередаваемыеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоПроект.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоВерсия.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоСостояние.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоСборки.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоИмя.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииПатчаДерево.Состояние");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыПатчей.Отозван;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	// Скрытие поля переключателя для основного патча.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВерсииПатчаДеревоПереключатель.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииПатчаДерево.ЭтоСтрокаПереключателя");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Скрытие лишних полей в строке переключателя.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Для Каждого ЭлементДерева Из Элементы.ВерсииПатчаДерево.ПодчиненныеЭлементы Цикл
		Если ЭлементДерева.Имя = Элементы.ВерсииПатчаДеревоПереключатель.Имя Тогда
			Продолжить;
		КонецЕсли;
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементДерева.Имя);
		
		Если ЭлементДерева.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
			Для Каждого Колонка Из ЭлементДерева.ПодчиненныеЭлементы Цикл
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииПатчаДерево.ЭтоСтрокаПереключателя");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Скрытие базовых патчей.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Для Каждого ЭлементДерева Из Элементы.ВерсииПатчаДерево.ПодчиненныеЭлементы Цикл
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементДерева.Имя);
		
		Если ЭлементДерева.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
			Для Каждого Колонка Из ЭлементДерева.ПодчиненныеЭлементы Цикл
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииПатчаДерево.Отображать");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииПатчаДерево.ПатчДляБазовой");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатРучногоСозданияПатча(Результат, ИдентификаторПатча) Экспорт
	
	Для Каждого ВерсияПатча Из ВерсииПатчаДерево.ПолучитьЭлементы() Цикл
		Если ВерсияПатча.УникальныйИдентификатор <> ИдентификаторПатча Тогда
			Продолжить;
		КонецЕсли;
		
		ВерсияПатча.Индикатор = Новый Картинка;
		АктивныеДлительныеОперации.Удалить(КлючАктивнойДлительнойОперации(ИдентификаторПатча));
		Оповестить("Патчи_ПрогрессЗавершение", Неопределено, ИдентификаторПатча);
		
		Прервать;
	КонецЦикла;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	Прочитать();
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Функция КлючАктивнойДлительнойОперации(Идентификатор)
	
	Возврат "Префикс_" + СтрЗаменить(Строка(Идентификатор), "-", "");
	
КонецФункции

&НаСервере
Функция ИзменениеОписанияНаСервере()
	
	СтрокаПараметры = "ДанныеПатча, Патч, Версия, ИмяПатча, ОписаниеПатча,
		|РежимСовместимости, ИзменениеОписания, ИдентификаторПатча";
	ПараметрыСохранения = Новый Структура(СтрокаПараметры);
	
	МассивПараметров = Новый Массив;
	Для Каждого Строка Из ВерсииПатчаДерево.ПолучитьЭлементы() Цикл
		Если Строка.Состояние <> Перечисления.СтатусыПатчей.СозданНеПроверен
			И Строка.Состояние <> Перечисления.СтатусыПатчей.СозданПроверен Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыСохранения = Новый Структура(СтрокаПараметры);
		СвойстваПатча = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(Строка.УникальныйИдентификатор, "ДанныеПатча, РежимСовместимости");
		
		ПараметрыСохранения.Патч = Объект.Ссылка;
		ПараметрыСохранения.Версия = Строка.Версия;
		ПараметрыСохранения.ИмяПатча = Строка.Имя;
		ПараметрыСохранения.РежимСовместимости = СвойстваПатча.РежимСовместимости;
		ПараметрыСохранения.ДанныеПатча = СвойстваПатча.ДанныеПатча.Получить();
		ПараметрыСохранения.ИдентификаторПатча = Строка.УникальныйИдентификатор;
		ПараметрыСохранения.ОписаниеПатча = Объект.Описание;
		МассивПараметров.Добавить(ПараметрыСохранения);
	КонецЦикла;
	
	Если МассивПараметров.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне();
	ПараметрыВыполнения.ОжидатьЗавершение = Ложь;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
		"РегистрыСведений.ВерсииПатчей.ИзменитьОписаниеПатчей",
		МассивПараметров);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОписаниеПриИзмененииПослеВопроса(Результат, ТекстСообщения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		ВосстановитьОписание();
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ИзменениеОписанияНаСервере();
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОписаниеПриИзмененииЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ПараметрыОжидания.ТекстСообщения = ТекстСообщения;
	КонецЕсли;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьОписание()
	
	Объект.Описание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "Описание");
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытиеПодтверждено = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти