
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инструкция = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Проект, "ИнструкцияПоПроверкеПатча");
	Если ЗначениеЗаполнено(Инструкция) Тогда
		Инструкция = ОбщегоНазначения.ЗначениеИзСтрокиXML(Инструкция);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Инструкция) Тогда
		Инструкция = Новый ФорматированнаяСтрока(ПатчиСлужебный.ИнструкцияПроверкиПатча());
	КонецЕсли;
	
	АвторИсправления = Параметры.АвторИсправления;
	ЗамещаетРазработчика = Параметры.ЗамещаетРазработчика;
	
	Элементы.ИнструкцияПроверкиПатча.Высота = СтрЧислоСтрок(Инструкция) + 1;
	
	ИнструкцияПроверкиПатча.УстановитьФорматированнуюСтроку(Инструкция);
	
	НужноУказатьПроверяющего = Параметры.НужноУказатьПроверяющего;
	НужноУказатьАудитора = Параметры.НужноУказатьАудитора;
	
	Элементы.АудитВыполняетПроверяющий.Видимость = НужноУказатьПроверяющего И НужноУказатьАудитора;
	
	Элементы.Проверяющий.Видимость = НужноУказатьПроверяющего;
	Элементы.Аудитор.Видимость = НужноУказатьАудитора;
	
	Ключ = "ПроверкаПатча";
	Если НужноУказатьПроверяющего Тогда
		Ключ = "Проверяющий";
	ИначеЕсли НужноУказатьАудитора Тогда
		Ключ = "Аудитор";
	КонецЕсли;
	
	Если НужноУказатьПроверяющего И НужноУказатьАудитора Тогда
		Ключ = Ключ + "Аудитор";
	КонецЕсли;
	
	Ключ = Ключ + Строка(Элементы.ИнструкцияПроверкиПатча.Высота);
	
	СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, Ключ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Не НужноУказатьПроверяющего Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Проверяющий"));
	КонецЕсли;
	
	Если Не НужноУказатьАудитора Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Аудитор"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроверяющийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = АвторИсправления Или ВыбранноеЗначение = ЗамещаетРазработчика Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение = НСтр("ru = 'Проверяющим не может быть автор исправления или разработчик, выполнивший первоначальную проверку патча.'");
		ПоказатьПредупреждение(, Предупреждение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АудиторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = АвторИсправления Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение = НСтр("ru = 'Аудитором не может быть автор исправления или разработчик, выполнивший первоначальную проверку патча.'");
		ПоказатьПредупреждение(, Предупреждение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийПриИзменении(Элемент)
	Если АудитВыполняетПроверяющий Тогда
		Аудитор = Проверяющий;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АудитВыполняетПроверяющийПриИзменении(Элемент)
	Если АудитВыполняетПроверяющий Тогда
		Элементы.Аудитор.Вид = ВидПоляФормы.ПолеНадписи;
		Аудитор = Проверяющий;
	Иначе
		Элементы.Аудитор.Вид = ВидПоляФормы.ПолеВвода;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПатчПроверен(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ПатчПроверен", Истина);
	Если НужноУказатьПроверяющего Тогда
		Результат.Вставить("Проверяющий", Проверяющий);
	КонецЕсли;
	Если НужноУказатьАудитора Тогда
		Результат.Вставить("Аудитор", Аудитор);
	КонецЕсли;
	
	Закрыть(Результат);
КонецПроцедуры

#КонецОбласти