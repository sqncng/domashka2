
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	НуженОтборПоУчастнику = 
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПриСозданииНаСервере("ОтветственныйУчастник", ОтветственныйУчастник, СтруктураБыстрогоОтбора);
		
	НуженОтборПоСтепениУчастия = 
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПриСозданииНаСервере("СтепеньУчастия", СтепеньУчастия, СтруктураБыстрогоОтбора);
		
	Если НуженОтборПоУчастнику ИЛИ НуженОтборПоСтепениУчастия Тогда
		УстановитьОтборПоУчастнику();
	КонецЕсли;
	
	Если ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПриСозданииНаСервере("Статус", СписокСтатусов, СтруктураБыстрогоОтбора) Тогда
		УстановитьОтборПоСтатусу();
	КонецЕсли;
	
	Если ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПриСозданииНаСервере("СрокОтработки", СписокСроков, СтруктураБыстрогоОтбора) Тогда
		УстановитьОтборПоСрокуОтработки();
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("УчастникТехническогоПроекта", ОтветственныйУчастник);
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата());

	УстановитьПараметрРаздел(Список, РазделПроекта);
	
	Если Параметры.Свойство("ВерсияДляОтбора") Тогда
		ВерсияДляОтбора = Параметры.ВерсияДляОтбора;
		Версия = Параметры.ВерсияДляОтбора;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтепеньУчастия) Тогда
		СтепеньУчастия = НСтр("ru='Ответственный/участник'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Версия) Тогда
		Версия = НСтр("ru='Все'");
	КонецЕсли;
	
	ВерсияУказана = (Версия <> "" И Версия <> "Все" И Версия <> "Актуальные");
	
	Если ЗначениеЗаполнено(ВерсияДляОтбора) И НЕ ВерсияУказана Тогда
		ВерсияДляОтбора = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВерсияДляОтбора) Тогда
		УстановитьОтборПоВерсии();
	КонецЕсли;
	
	УстановитьУсловноеОформлениеСписка();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("Статус",
			"СписокСтатусов",
			СписокСтатусов,
			СтруктураБыстрогоОтбора,
			Настройки) Тогда
			
		УстановитьОтборПоСтатусу();
	КонецЕсли;
	
	Если ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("СрокОтработки",
			"СписокСроков",
			СписокСроков,
			СтруктураБыстрогоОтбора,
			Настройки) Тогда
			
		УстановитьОтборПоСрокуОтработки();
	КонецЕсли;
	
	НуженОтборПоУчастнику =
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("ОтветственныйУчастник",
							"ОтветственныйУчастник",
							ОтветственныйУчастник,
							СтруктураБыстрогоОтбора,
							Настройки);
							
	НуженОтборПоСтепениУчастия =
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("СтепеньУчастия",
							"СтепеньУчастия",
							СтепеньУчастия,
							СтруктураБыстрогоОтбора,
							Настройки);
	
	Если НуженОтборПоУчастнику ИЛИ НуженОтборПоСтепениУчастия Тогда
		УстановитьОтборПоУчастнику();
	КонецЕсли;
	
	НуженОтборПоВерсии =
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("Версия",
							"Версия",
							Версия,
							СтруктураБыстрогоОтбора,
							Настройки);
							
	НуженОтборПоУказаннойВерсии =
		ОбщегоНазначенияСППРКлиентСервер.НеобходимОтборПоКолонкеПередЗагрузкойИзНастроек("ВерсияДляОтбора",
							"ВерсияДляОтбора",
							ВерсияДляОтбора,
							СтруктураБыстрогоОтбора,
							Настройки);
		
	Если Версия = "" Тогда
		Версия = "Все";
	КонецЕсли;
		
	ВерсияУказана = (Версия <> "Все" И Версия <> "Актуальные");
	
	Если НуженОтборПоВерсии Тогда
		
		Если ЗначениеЗаполнено(ВерсияДляОтбора) И НЕ ВерсияУказана Тогда
			ВерсияДляОтбора = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НуженОтборПоВерсии Тогда
		УстановитьОтборПоВерсии();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.РазделПроекта) Тогда
		РазделПроекта = Параметры.РазделПроекта;
	Иначе
		Если ТипЗнч(СтруктураБыстрогоОтбора) <> Тип("Структура") Тогда
			РазделПроектаИзНастроек = Настройки.Получить("РазделПроекта");
			Если РазделПроектаИзНастроек <> Неопределено Тогда
				УстановитьПараметрРаздел(Список, РазделПроектаИзНастроек);
			КонецЕсли;
		Иначе
			Если Настройки.Получить("РазделПроекта")<>Неопределено Тогда
				Настройки.Удалить("РазделПроекта");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборРазделПроектаПриИзменении(Элемент)
	
	УстановитьПараметрРаздел(Список, РазделПроекта)
	
КонецПроцедуры

&НаКлиенте
Процедура СтепеньУчастияПриИзменении(Элемент)
	
	УстановитьОтборПоУчастнику();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйУчастникПриИзменении(Элемент)
	
	УстановитьОтборПоУчастнику();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатусовПриИзменении(Элемент)
	
	УстановитьОтборПоСтатусу();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатусовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("СписокВыбора", СписокСтатусов);
	
	ОткрытьФорму("Перечисление.СтатусыТехническихПроектов.Форма.ВыборСпискаСтатусов", СтруктураПараметров, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатусовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СписокСтатусов = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВерсияПриИзменении(Элемент)
	
	ВерсияУказана = (Версия <> "" И Версия <> "Все" И Версия <> "Актуальные");
	
	Если ЗначениеЗаполнено(ВерсияДляОтбора) И НЕ ВерсияУказана Тогда
		ВерсияДляОтбора = Неопределено;
	КонецЕсли;
	
	УстановитьОтборПоВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВерсияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = "Указанная" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтборВерсияЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.ВерсииПроекта.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВерсияЗавершение(РезультатДействия, ДополнительныеПараметры) Экспорт
    
    ЗначениеВыбора = РезультатДействия;
    
	Если ЗначениеЗаполнено(ЗначениеВыбора) Тогда
		ВерсияДляОтбора = ЗначениеВыбора;
		Версия = ЗначениеВыбора;
		ОтборВерсияПриИзменении(Элементы.Версия);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СтепеньУчастияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВерсияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Версия <> "Все" Тогда
		Версия = НСтр("ru='Все'");
		УстановитьОтборПоВерсии();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСроковПриИзменении(Элемент)
	
	УстановитьОтборПоСрокуОтработки();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСроковНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("СписокВыбора", СписокСроков);
	
	ОткрытьФорму("ОбщаяФорма.ВыборСроковОтработки", СтруктураПараметров, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСроковОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СписокСроков = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоСтатусу()
	
	ИспользоватьОтбор = СписокСтатусов.Количество()>0;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
																			"Статус",
																			СписокСтатусов,
																			ВидСравненияКомпоновкиДанных.ВСписке,
																			,
																			ИспользоватьОтбор);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоУчастнику()
	
	Список.Параметры.УстановитьЗначениеПараметра("УчастникТехническогоПроекта", ОтветственныйУчастник);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВходитВКритерийОтбораПоУчастникуИлиОтветственному",Истина,ВидСравненияКомпоновкиДанных.Равно,,СтепеньУчастия = "Ответственный/участник" И ЗначениеЗаполнено(ОтветственныйУчастник));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ответственный",ОтветственныйУчастник,ВидСравненияКомпоновкиДанных.Равно,,СтепеньУчастия = "Ответственный" И ЗначениеЗаполнено(ОтветственныйУчастник));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВходитВКритерийОтбораПоУчастнику",Истина,ВидСравненияКомпоновкиДанных.Равно,,СтепеньУчастия = "Участник" И ЗначениеЗаполнено(ОтветственныйУчастник));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВерсии()
	
	ВерсияУказана = (Версия <> "" И Версия <> "Все" И Версия <> "Актуальные");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВерсияАктуальна",Истина,ВидСравненияКомпоновкиДанных.Равно,,Версия = "Актуальные");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Версия",ВерсияДляОтбора,ВидСравненияКомпоновкиДанных.Равно,,ВерсияУказана И ЗначениеЗаполнено(ВерсияДляОтбора));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрРаздел(Список, РазделПроекта)

	Список.Параметры.УстановитьЗначениеПараметра("Раздел", РазделПроекта);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСрокуОтработки()
	
	Календарь = Константы.ОсновнойКалендарь.Получить();
	
	ТекущаяДата = НачалоДня(ТекущаяДата());
	
	ДатаЗавтра = Неопределено;
		
	Если ЗначениеЗаполнено(Календарь) Тогда
		ДатаЗавтра = КалендарныеГрафики.ДатаПоКалендарю(Календарь, ТекущаяДата, 1, Ложь);
	КонецЕсли;
		
	Если ДатаЗавтра = Неопределено Тогда
		ДатаЗавтра = ТекущаяДата + 86400;
	КонецЕсли;
	
	ГруппаИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы,
																			"Отбор по сроку отработки",
																			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);
																			
	ЕстьОтборПоВчера	= (СписокСроков.НайтиПоЗначению("Вчера") <> Неопределено);
	ЕстьОтборПоСегодня	= (СписокСроков.НайтиПоЗначению("Сегодня") <> Неопределено);
	ЕстьОтборПоЗавтра	= (СписокСроков.НайтиПоЗначению("Завтра") <> Неопределено);
	ЕстьОтборПоПотом	= (СписокСроков.НайтиПоЗначению("Потом") <> Неопределено);
	
	ГруппаИЛИ.Использование = ЕстьОтборПоВчера ИЛИ ЕстьОтборПоСегодня ИЛИ ЕстьОтборПоЗавтра ИЛИ ЕстьОтборПоПотом;
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "СрокОтработки", ВидСравненияКомпоновкиДанных.Меньше, ТекущаяДата,,ЕстьОтборПоВчера);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "СрокОтработки", ВидСравненияКомпоновкиДанных.Равно, ТекущаяДата,,ЕстьОтборПоСегодня);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "СрокОтработки", ВидСравненияКомпоновкиДанных.Равно, ДатаЗавтра,,ЕстьОтборПоЗавтра);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "СрокОтработки", ВидСравненияКомпоновкиДанных.Больше, ДатаЗавтра,,ЕстьОтборПоПотом);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	УсловноеОформлениеСписка = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеСписка.Элементы.Очистить();
	
	ОбщегоНазначенияСППР.УстановитьУсловноеОформлениеСпискаОтветственный(УсловноеОформлениеСписка);
	
КонецПроцедуры

#КонецОбласти
