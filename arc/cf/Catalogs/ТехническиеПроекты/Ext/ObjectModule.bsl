#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСписокПрофилей() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ШагиПроцесса.Исполнитель КАК Гиперссылка
	|ИЗ
	|	Справочник.ШагиПроцесса КАК ШагиПроцесса
	|ГДЕ
	|	ШагиПроцесса.Исполнитель <> ЗНАЧЕНИЕ(Справочник.ПрофилиПользователей.ПустаяСсылка)
	|	И ШагиПроцесса.Владелец В (&МассивПроцессов)"
	;
	
	МассивПроцессов = ЭтотОбъект.Процессы.ВыгрузитьКолонку("Гиперссылка");
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивПроцессов", МассивПроцессов);
	
	ТаблицаПрофилей = Запрос.Выполнить().Выгрузить();
	ДобавитьСтрокиТабличнойЧасти("ПрофилиПользователей", ТаблицаПрофилей);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		Владелец = Проекты.ПроектПоУмолчанию();
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			Если ДанныеЗаполнения.Свойство("ДобавляемыеИдеи") Тогда
				ДобавитьИдеи(ДанныеЗаполнения.ДобавляемыеИдеи);
			КонецЕсли;
			
			Если ДанныеЗаполнения.Свойство("Проект") Тогда
				Владелец = ДанныеЗаполнения.Проект;
				Ветка = ДанныеЗаполнения.Проект.Ветка;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЭтоГруппа Тогда
			Публикуется = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)	
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ПроверитьКорректностьУказанияПлановыхСроков(Отказ);
	ПроверитьНаличиеДублейИдейИОшибок(Отказ);
	ПроверитьУказаниеВетки(Отказ);
	
	РеквизитыВетки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ветка, "Тип, Статус, РежимРазработки");
	
	Если Статус = Перечисления.СтатусыТехническихПроектов.Выполнен
		И ЗначениеЗаполнено(Ветка)
		И РеквизитыВетки.Тип = Перечисления.ТипыВеток.ВеткаТехническогоПроекта
		И РеквизитыВетки.Статус <> Перечисления.СтатусыВеток.Помещена Тогда
		
		ТекстСообщения = НСтр("ru='Для выполненного технического проекта
		                      |необходимо перевести ветку в статус ""Помещена"".'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
		                                                  ЭтотОбъект,
		                                                  "Ветка",
		                                                  ,
		                                                  Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Статус <> Перечисления.СтатусыТехническихПроектов.Выполнен Тогда
		НепроверяемыеРеквизиты.Добавить("Версия");
	КонецЕсли;
	
	Если РеквизитыВетки.РежимРазработки = Перечисления.РежимРазработки.ВХранилище
		И ((РеквизитыВетки.Тип = Перечисления.ТипыВеток.ВеткаТехническогоПроекта
		И РеквизитыВетки.Статус <> Перечисления.СтатусыВеток.Помещена)
		Или (РеквизитыВетки.Тип <> Перечисления.ТипыВеток.ВеткаТехническогоПроекта
		И Статус <> Перечисления.СтатусыТехническихПроектов.Выполнен)) Тогда
		НепроверяемыеРеквизиты.Добавить("ОбработчикиОбновления.Гиперссылка");
	КонецЕсли;
	
	Если НепроверяемыеРеквизиты.Количество()>0 Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		
		Статус = Перечисления.СтатусыТехническихПроектов.НеЗапланирован;
		Ветка = Справочники.Ветки.ПустаяСсылка();
		ИмяПользователяХранилищаДляЗагрузкиМетаданных = "";
		ПарольПользователяХранилищаДляЗагрузкиМетаданных = "";
		ДатаЗавершения = '00010101';
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		СтарыйСтатус = Неопределено;
		СтарыйПроект = Неопределено;
		
		Если НЕ ЭтоНовый() Тогда
			
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Статус, Владелец");
			СтарыйСтатус = СтарыеРеквизиты.Статус;
			СтарыйПроект = СтарыеРеквизиты.Владелец;
			
			ПроверитьВозможностьЗаписиСИзмененнымиРеквизитами(Отказ);
		КонецЕсли;
		
		ПроверитьВозможностьЗаписиСоВключеннымиОшибками(Отказ);
		
		Если Владелец <> СтарыйПроект Тогда
			ДополнительныеСвойства.Вставить("СтарыйПроект", СтарыйПроект);
		КонецЕсли;
		
		Если НЕ ЭтоНовый() Тогда
			
			Если СтарыйСтатус<>Статус Тогда
				ДатаИзмененияСтатуса = ТекущаяДата();
			КонецЕсли;
			
		Иначе
			
			Если Статус <> Перечисления.СтатусыТехническихПроектов.НеЗапланирован
				И Статус <> Перечисления.СтатусыТехническихПроектов.Отменен Тогда
				ДатаИзмененияСтатуса = ТекущаяДата();
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Ответственный) Тогда
			Для Каждого СтрТабл из ОбработчикиОбновления Цикл
				Если Не ЗначениеЗаполнено(СтрТабл.Ответственный) Тогда
					СтрТабл.Ответственный = Ответственный;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;

	СкорректироватьДанныеНеСоответствующиеПроекту();
	
	ДополнительныеСвойства.Вставить("НовыйОбъект", ЭтоНовый());
	ДополнительныеСвойства.Вставить("КоллекцияИзмененныхОбъектов", Новый Массив);
	Версионирование.ЗарегистрироватьИзмененияОбъекта(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьОтветственногоВОбработчикахОбновления();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверка на допустимость указания исправляемых ошибок в техническом проекте
// Нерассмотренные ошибки указывать недопустимо "Немедленные" ошибки могут включаться
// только в активный технический проект.
Процедура ПроверитьВозможностьЗаписиСоВключеннымиОшибками(Отказ)
	
	МассивОшибок = Новый Массив;
	
	Для Каждого СтрокаТЧ из ИдеиИОшибки Цикл
		Если ТипЗнч(СтрокаТЧ.Идея) = Тип("СправочникСсылка.Ошибки")
			И ЗначениеЗаполнено(СтрокаТЧ.Идея) Тогда
			МассивОшибок.Добавить(СтрокаТЧ.Идея);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивОшибок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	СтрокаРеквизитов = "Признана,Отозвана,НеПризнана,ПометкаУдаления,СрочностьИсправления";
	РеквизитыОшибок = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивОшибок,СтрокаРеквизитов);
	
	Для Каждого ЭлементСоответствия из РеквизитыОшибок Цикл
		
		СтруктураОтбора = Новый Структура("Идея", ЭлементСоответствия.Ключ);
		МассивСтрок = ИдеиИОшибки.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество()>0 Тогда
			СтрокаТЧ = МассивСтрок[0];
		Иначе
			Продолжить;
		КонецЕсли;
		
		СтруктураРеквизитов = ЭлементСоответствия.Значение;
		Если НЕ СтруктураРеквизитов.ПометкаУдаления И НЕ СтруктураРеквизитов.Признана И НЕ СтруктураРеквизитов.НеПризнана Тогда
			
			ТекстСообщения = НСтр("ru='Нерассмотренные ошибки нельзя включать в технический проект'");
			
			ПутьКРеквизиту = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ИдеиИОшибки", СтрокаТЧ.НомерСтроки, "Идея");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект, ПутьКРеквизиту);
			
			Отказ = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКорректностьУказанияПлановыхСроков(Отказ)
	
	Если ПлановаяДатаОкончания < ПлановаяДатаНачала И ЗначениеЗаполнено(ПлановаяДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru='Плановые сроки указаны неверно'");
		Сообщить(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНаличиеДублейИдейИОшибок(Отказ)
	
	ТаблицаИдейИОшибок = ИдеиИОшибки.Выгрузить();
	
	ТаблицаИдейИОшибок.Свернуть("Идея");
	
	Если ТаблицаИдейИОшибок.Количество() <> ИдеиИОшибки.Количество() Тогда
		ТекстСообщения = НСтр("ru='В проекте указаны повторяющиеся идеи или ошибки'");
		Сообщить(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьСтрокиТабличнойЧасти(ИмяТабличнойЧасти, ТаблицаДобавляемыхОбъектов)

	Для Каждого СтрокаТЧ из ТаблицаДобавляемыхОбъектов Цикл
		Если ЭтотОбъект[ИмяТабличнойЧасти].Найти(СтрокаТЧ.Гиперссылка, "Гиперссылка") = Неопределено Тогда
			НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
			НоваяСтрока.Гиперссылка = СтрокаТЧ.Гиперссылка;
		КонецЕсли;
	КонецЦИкла;
	
КонецПроцедуры
	 
Процедура ДобавитьИдеи(ДобавляемыеИдеи)
	
	Для Каждого Идея из ДобавляемыеИдеи Цикл
		НоваяСтрока = ИдеиИОшибки.Добавить();
		НоваяСтрока.Идея = Идея;
	КонецЦикла;
	
КонецПроцедуры

Процедура СкорректироватьДанныеНеСоответствующиеПроекту()
	
	Если ЗначениеЗаполнено(РазделПроекта) Тогда
		
		ПроектРаздела = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РазделПроекта, "Владелец");
		
		Если ПроектРаздела <> Владелец Тогда
			РазделПроекта = Справочники.РазделыПроекта.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВозможностьЗаписиСИзмененнымиРеквизитами(Отказ);
	
	ДоступноУправлениеТехническимПроектом = 
		УправлениеДоступомСППР.РольДоступнаПоПроекту("ПланированиеИУправлениеТехническимиПроектами", Владелец);
		
	СтрокаРеквизитов = "Очередность,Публикуется";
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, СтрокаРеквизитов);
		
	Если НЕ ДоступноУправлениеТехническимПроектом И Статус<>Перечисления.СтатусыТехническихПроектов.НеЗапланирован Тогда
			
		Если Реквизиты.Очередность <> Очередность Тогда
			Отказ = Истина;
			ТекстСообщения = 
			НСтр("ru='Текущему пользователю запрещено изменять значение реквизита ""Очередность"" в техническом проекте %ТехническийПроект%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТехническийПроект%", Ссылка);
			ВызватьИсключение(ТекстСообщения);
		КонецЕсли;
		
		Если Реквизиты.Публикуется <> Публикуется Тогда
			Отказ = Истина;
			ТекстСообщения = 
			НСтр("ru='Текущему пользователю запрещено изменять значение реквизита ""Публикуется"" в техническом проекте %ТехническийПроект%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТехническийПроект%", Ссылка);
			ВызватьИсключение(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьОтветственногоВОбработчикахОбновления()
	
	Если ОбработчикиОбновления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧОбработчикиОбновления.Гиперссылка КАК Обработчик
	|ПОМЕСТИТЬ ВТТекущиеОбработчики
	|ИЗ
	|	Справочник.ТехническиеПроекты.ОбработчикиОбновления КАК ТЧОбработчикиОбновления
	|ГДЕ
	|	ТЧОбработчикиОбновления.Ссылка = &Ссылка
	|	И ТЧОбработчикиОбновления.Гиперссылка <> ЗНАЧЕНИЕ(Справочник.ОбработчикиОбновленияИнформационнойБазы.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Выполнить();
	
	Справочники.ОбработчикиОбновленияИнформационнойБазы.ИзменитьОтветственногоВОбработчикахОбновления(МенеджерВТ);
		
КонецПроцедуры

Процедура ПроверитьУказаниеВетки(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Ветка) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		ВеткаСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Ветка");
		Если Ветка = ВеткаСсылки Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗапрещеноПомещениеВВетку = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ветка, "ИзмененияПомещаютсяТолькоЧерезДругиеВетки");
	
	Если ЗапрещеноПомещениеВВетку Тогда
		ТекстСообщения = НСтр("ru='Для ветки запрещено помещение изменений напрямую. Укажите другую ветку.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Ветка");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли