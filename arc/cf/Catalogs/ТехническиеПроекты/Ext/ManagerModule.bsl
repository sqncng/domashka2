#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов
//
// Возвращаемое значение:
//  РедактируемыеРеквизиты - тип - массив. Массив реквизитов, которые не редактируются
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("Версия");
	РедактируемыеРеквизиты.Добавить("ВнесеныИзмененияВСправку");
	РедактируемыеРеквизиты.Добавить("ВнесеныИзмененияВДокументацию");
	РедактируемыеРеквизиты.Добавить("Заметки");
	РедактируемыеРеквизиты.Добавить("ИмяПользователяДляЗагрузкиМетаданных");
	РедактируемыеРеквизиты.Добавить("ИмяПользователяХранилищаДляЗагрузкиМетаданных");
	РедактируемыеРеквизиты.Добавить("Ветка");
	РедактируемыеРеквизиты.Добавить("КаталогДемонстрационнойБазы");
	РедактируемыеРеквизиты.Добавить("КонцепцияПроекта");
	РедактируемыеРеквизиты.Добавить("Ответственный");
	РедактируемыеРеквизиты.Добавить("Очередность");
	РедактируемыеРеквизиты.Добавить("ПарольПользователяДляЗагрузкиМетаданных");
	РедактируемыеРеквизиты.Добавить("ПлановаяДатаНачала");
	РедактируемыеРеквизиты.Добавить("ПлановаяДатаОкончания");
	РедактируемыеРеквизиты.Добавить("Публикуется");
	РедактируемыеРеквизиты.Добавить("РазделПроекта");
	РедактируемыеРеквизиты.Добавить("ЦелеваяЗадача");
	РедактируемыеРеквизиты.Добавить("ЦелиПроекта");
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

// Определяет, принадлежат ли указанные ссылки одному проекту
//
// Параметры:
//  Ссылки - тип - массив. Массив проверяемых ссылок.
//  Проект - тип - СправочникСсылка.Проекты. Проект, к которому относятся ссылки 
//
// Возвращаемое значение:
//  Признак принадлежности - тип - Булево. Истина - ссылки принадлежат одному проекту, Ложь - не принадлежат.
//
Функция ДанныеПринадлежатОдномуПроекту(Ссылки, Проект) Экспорт
	
	Результат = Истина;
	ТекущийПроект = Неопределено;
	
	Соответствие = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Ссылки, "Владелец");
	
	Для Каждого ЭлементСоответствия из Соответствие Цикл
		Если ТекущийПроект <> Неопределено И ЭлементСоответствия.Значение <> ТекущийПроект Тогда
			Результат = Ложь;
			Прервать;
		КонецЕсли;
		ТекущийПроект = ЭлементСоответствия.Значение;
	КонецЦикла;
	
	Проект = ТекущийПроект;
	
	Возврат Результат;
	
КонецФункции

// Выполняет формирование печатных форм для описания объекта (используются в версионировании)
//
// Параметры:
//  МассивОбъектов - тип - массив. Массив объектов, для которых требуется сформировать печатные формы
//
Функция СформироватьПечатныеФормы(МассивОбъектов, СУчетомПриемника=Ложь, ДанныеСоответствия=Неопределено) Экспорт
	
	ПечатныеФормы = Новый Соответствие;
	
	ТекстЗапроса = ТекстЗапросаДляФормированияОписания();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатовЗапроса[0].Выбрать();
	
	ТаблицаФайлов = МассивРезультатовЗапроса[1].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Новый ТабличныйДокумент;
		
		ОписаниеОбъектов.НастроитьОписаниеОбъекта(Документ);
		Документ.НачатьАвтогруппировкуСтрок();
		
		СтруктураОтбора = Новый Структура("ТехническийПроект", Выборка.Ссылка);
		
		ТаблицаФайловОбъекта = ОписаниеОбъектов.ТаблицаОбъектаПоОбщейТаблице(ТаблицаФайлов, СтруктураОтбора);
		
		СформироватьОписаниеОбъекта(Выборка,
									ТаблицаФайловОбъекта,
									Документ);
		
	    Документ.ЗакончитьАвтогруппировкуСтрок();
		
		СтруктураПечатныхФорм = Новый Структура;
		СтруктураПечатныхФорм.Вставить("Описание", Документ);
		
		ПечатныеФормы.Вставить(Выборка.Ссылка, СтруктураПечатныхФорм);
		
	КонецЦикла;
	
	Возврат ПечатныеФормы;
	
КонецФункции

// Выполняет печать описаний и схем переданных объектов
//
// Параметры:
//  МассивОбъектов - тип - массив. Массив объектов, подлежащих печати
//  МассивСтруктурПечатныхФорм - тип - массив. Массив, содержащий структуры, включающий печатные формы, схемы объектов.
//
Процедура Печать(МассивОбъектов, ПечатныеФормы) Экспорт
	
	ПечатныеФормы = СформироватьПечатныеФормы(МассивОбъектов);
	
КонецПроцедуры

// Заполняет список текущих дел пользователя.
//
// Параметры:
//  ТекущиеДела - ТаблицаЗначений - таблица значений с колонками:
//    * Идентификатор - Строка - внутренний идентификатор дела, используемый механизмом "Текущие дела".
//    * ЕстьДела      - Булево - если Истина, дело выводится в списке текущих дел пользователя.
//    * Важное        - Булево - если Истина, дело будет выделено красным цветом.
//    * Представление - Строка - представление дела, выводимое пользователю.
//    * Количество    - Число  - количественный показатель дела, выводится в строке заголовка дела.
//    * Форма         - Строка - полный путь к форме, которую необходимо открыть при нажатии на гиперссылку
//                               дела на панели "Текущие дела".
//    * ПараметрыФормы- Структура - параметры, с которыми нужно открывать форму показателя.
//    * Владелец      - Строка, объект метаданных - строковый идентификатор дела, которое будет владельцем для текущего
//                      или объект метаданных подсистема.
//    * Подсказка     - Строка - текст подсказки.
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.ТехническиеПроекты) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторГруппыТехническиеПроекты = НСтр("ru='Технические проекты'");
	
	ПоказателиТекущихДел = ПоказателиТекущихДелПоТехническимПроектам();
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	СписокСроков = Новый СписокЗначений;
	СписокСроков.Добавить("Вчера");
	СписокСроков.Добавить("Сегодня");
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Статус", Новый СписокЗначений);
	ПараметрыОтбора.Вставить("СрокОтработки", СписокСроков);
	ПараметрыОтбора.Вставить("СтепеньУчастия", "Ответственный");
	ПараметрыОтбора.Вставить("ОтветственныйУчастник", ТекущийПользователь);
	ПараметрыОтбора.Вставить("Версия", "Все");
	ПараметрыОтбора.Вставить("ВерсияДляОтбора", Неопределено);
	
	ПараметрыОтбораПриступить = Новый Структура;
	ПараметрыОтбораЗавершить  = Новый Структура;
	
	Для Каждого ЭлементСтруктуры из ПараметрыОтбора Цикл
		ПараметрыОтбораПриступить.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
		ПараметрыОтбораЗавершить.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	СписокСтатусовПриступить = Новый СписокЗначений;
	СписокСтатусовПриступить.Добавить(Перечисления.СтатусыТехническихПроектов.Запланирован);
	
	СписокСтатусовЗавершить = Новый СписокЗначений;
	СписокСтатусовЗавершить.Добавить(Перечисления.СтатусыТехническихПроектов.Активен);
	
	ПараметрыОтбораПриступить.Вставить("Статус", СписокСтатусовПриступить);
	ПараметрыОтбораЗавершить.Вставить("Статус", СписокСтатусовЗавершить);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлюЧНазначенияИспользования", "ТекущиеДела");
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбораПриступить);
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ТехническиеПроектыПриступить";
	Дело.ЕстьДела       = ПоказателиТекущихДел.КоличествоТехническихПроектовПриступить > 0;
	Дело.Представление  = НСтр("ru = 'Приступить'");
	Дело.Количество     = ПоказателиТекущихДел.КоличествоТехническихПроектовПриступить;
	Дело.Важное 		= Ложь;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Форма          = "Справочник.ТехническиеПроекты.Форма.СписокТехническихПроектов";
	Дело.Владелец       = ИдентификаторГруппыТехническиеПроекты;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлюЧНазначенияИспользования", "ТекущиеДела");
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбораЗавершить);
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ТехническиеПроектыЗавершить";
	Дело.ЕстьДела       = ПоказателиТекущихДел.КоличествоТехническихПроектовЗавершить > 0;
	Дело.Представление  = НСтр("ru = 'Завершить'");
	Дело.Количество     = ПоказателиТекущихДел.КоличествоТехническихПроектовЗавершить;
	Дело.Важное 		= Ложь;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Форма          = "Справочник.ТехническиеПроекты.Форма.СписокТехническихПроектов";
	Дело.Владелец       = ИдентификаторГруппыТехническиеПроекты;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДляФормированияОписания()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТехническиеПроекты.Ссылка КАК Ссылка,
	|	ТехническиеПроекты.ЭтоГруппа КАК ЭтоГруппа,
	|	ТехническиеПроекты.Код КАК Код,
	|	ТехническиеПроекты.Наименование КАК Наименование,
	|	ТехническиеПроекты.Родитель КАК Родитель,
	|	ТехническиеПроекты.ПометкаУдаления КАК ПометкаУдаления,
	|	ТехническиеПроекты.Версия КАК Версия,
	|	ТехническиеПроекты.Заметки КАК Заметки,
	|	ТехническиеПроекты.КонцепцияПроекта КАК КонцепцияПроекта,
	|	ТехническиеПроекты.Ответственный КАК Ответственный,
	|	ТехническиеПроекты.Очередность КАК Очередность,
	|	ТехническиеПроекты.ПлановаяДатаНачала КАК ПлановаяДатаНачала,
	|	ТехническиеПроекты.ПлановаяДатаОкончания КАК ПлановаяДатаОкончания,
	|	ТехническиеПроекты.Статус КАК Статус,
	|	ТехническиеПроекты.ЦелиПроекта КАК ЦелиПроекта,
	|	ТехническиеПроекты.Ветка.Имя КАК КаталогХранилищаДляЗагрузкиМетаданных,
	|	ТехническиеПроекты.КаталогДемонстрационнойБазы КАК КаталогДемонстрационнойБазы,
	|	ТехническиеПроекты.ВнесеныИзмененияВСправку КАК ВнесеныИзмененияВСправку,
	|	ТехническиеПроекты.ВнесеныИзмененияВДокументацию КАК ВнесеныИзмененияВДокументацию,
	|	ТехническиеПроекты.Публикуется КАК Публикуется,
	|	ТехническиеПроекты.ХранилищеОписания КАК ХранилищеОписания,
	|	ТехническиеПроекты.РазделПроекта КАК РазделПроекта,
	|	ТехническиеПроекты.Ветка.РежимРазработки КАК РежимРазработки,
	|	ТехническиеПроекты.Ветка.Тип КАК ТипВетки,
	|	ТехническиеПроекты.ИзмененияПомещеныВХранилищеВерсии КАК ИзмененияПомещеныВХранилищеВерсии,
	|	ТехническиеПроекты.Ветка.ДатаПомещения КАК ДатаПомещенияИзмененийВХранилищеВерсии,
	|	ТехническиеПроекты.ЦелеваяЗадача КАК ЦелеваяЗадача,
	|	ТехническиеПроекты.ДополнительныйПубликуемыйФайл КАК ДополнительныйПубликуемыйФайл,
	|	ТехническиеПроекты.Процессы.(
	|		"""" КАК ВидПодраздела,
	|		"""" КАК НомерПодраздела,
	|		Гиперссылка.Наименование КАК ЗаголовокПодраздела,
	|		Гиперссылка КАК Ссылка,
	|		"""" КАК Текст1,
	|		"""" КАК Текст2,
	|		NULL КАК Гиперссылка,
	|		Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ОписаниеИзменений КАК СлужебнаяИнформация
	|	) КАК Процессы,
	|	ТехническиеПроекты.ОбработчикиОбновления.(
	|		"""" КАК ВидПодраздела,
	|		"""" КАК НомерПодраздела,
	|		Гиперссылка.Наименование КАК ЗаголовокПодраздела,
	|		Гиперссылка КАК Ссылка,
	|		"""" КАК Текст1,
	|		"""" КАК Текст2,
	|		NULL КАК Гиперссылка,
	|		Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ОписаниеИзменений КАК СлужебнаяИнформация
	|	) КАК ОбработчикиОбновления,
	|	ТехническиеПроекты.ПрофилиПользователей.(
	|		"""" КАК ВидПодраздела,
	|		"""" КАК НомерПодраздела,
	|		Гиперссылка.Наименование КАК ЗаголовокПодраздела,
	|		Гиперссылка КАК Ссылка,
	|		"""" КАК Текст1,
	|		"""" КАК Текст2,
	|		NULL КАК Гиперссылка,
	|		Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ОписаниеИзменений КАК СлужебнаяИнформация
	|	) КАК ПрофилиПользователей,
	|	ТехническиеПроекты.ИдеиИОшибки.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Идея КАК Идея,
	|		РеализацияИдеи КАК РеализацияИдеи
	|	) КАК ИдеиИОшибки,
	|	ТехническиеПроекты.Участники.(
	|		"""" КАК ВидПодраздела,
	|		"""" КАК НомерПодраздела,
	|		Участник КАК ЗаголовокПодраздела,
	|		Участник КАК Ссылка,
	|		"""" КАК Текст1,
	|		Комментарий КАК Текст2,
	|		NULL КАК Гиперссылка,
	|		Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		"""" КАК СлужебнаяИнформация
	|	) КАК Участники,
	|	ТехническиеПроекты.Функции.(
	|		"""" КАК ВидПодраздела,
	|		"""" КАК НомерПодраздела,
	|		Гиперссылка.Наименование КАК ЗаголовокПодраздела,
	|		Гиперссылка КАК Ссылка,
	|		"""" КАК Текст1,
	|		"""" КАК Текст2,
	|		NULL КАК Гиперссылка,
	|		Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ОписаниеИзменений КАК СлужебнаяИнформация
	|	) КАК Функции,
	|	ТехническиеПроекты.РазделыПроекта.(
	|		Раздел КАК Раздел
	|	) КАК РазделыПроекта,
	|	ТехническиеПроекты.СценарииПользователей.(
	|		Сценарий КАК Сценарий,
	|		Описание КАК Описание,
	|		Комментарий КАК Комментарий,
	|		ШагПроцесса КАК ШагПроцесса
	|	) КАК СценарииПользователей
	|ИЗ
	|	Справочник.ТехническиеПроекты КАК ТехническиеПроекты
	|ГДЕ
	|	ТехническиеПроекты.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Файл"" КАК ВидПодраздела,
	|	"""" КАК НомерПодраздела,
	|	Файлы.Наименование КАК ЗаголовокПодраздела,
	|	Файлы.Ссылка КАК Ссылка,
	|	"""" КАК Текст1,
	|	"""" КАК Текст2,
	|	NULL КАК Гиперссылка,
	|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
	|	"""" КАК СлужебнаяИнформация,
	|	Файлы.ВладелецФайла КАК ТехническийПроект
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Файлы.ВладелецФайла"
	;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОписаниеОбъекта(Выборка, ТаблицаФайлов, Документ)
	
	Если Выборка.ЭтоГруппа Тогда
		ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Группа технических проектов'"), Выборка.Ссылка, , Документ);
	Иначе
		// Заголовок документа
		ОписаниеОбъектов.ВывестиЗаголовокОбъекта(НСтр("ru='Технический проект'"), Выборка.Ссылка, Выборка.Код, Документ);
		ОписаниеОбъектов.ВывестиЗаголовокТекста("", , Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Раздел проекта'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.РазделПроекта, 1, Документ, Выборка.РазделПроекта);
	
	РазделыПроекта = Выборка.РазделыПроекта.Выгрузить();
	
	Если РазделыПроекта.Количество()>0 Тогда
		
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Дополнительные разделы'"), Документ);
		
		Для Каждого СтрокаТЧ из РазделыПроекта Цикл
			ОписаниеОбъектов.ВывестиТекстПоАбзацам(СтрокаТЧ.Раздел, 1, Документ, СтрокаТЧ.Раздел);
		КонецЦикла;
		
	КонецЕсли;
	
	// Для групп больше ничего не выводится
	Если Выборка.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Целевая задача'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.ЦелеваяЗадача, 1, Документ, Выборка.ЦелеваяЗадача);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Свойства технического проекта'"), Документ);
	
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Версия: '") + Выборка.Версия, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Ответственный: '") + Выборка.Ответственный, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Очередность: '") + Выборка.Очередность, 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Начало (план): '") + Формат(Выборка.ПлановаяДатаНачала, "ДЛФ=D"), 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Окончание (план): '") + Формат(Выборка.ПлановаяДатаОкончания, "ДЛФ=D"), 1, Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Статус: '") + Выборка.Статус, 1, Документ);
	
	// Отражение изменений
	
	Если Выборка.ТипВетки = Перечисления.ТипыВеток.ВеткаТехническогоПроекта Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Разрабатывается в отдельной ветке'"), 1, Документ);
	КонецЕсли;
	
	Если Выборка.ИзмененияПомещеныВХранилищеВерсии Тогда
		
		ИнформацияОПомещенииВХранилище = НСтр("ru='Изменения помещены в хранидище версии'");
		
		Если ЗначениеЗаполнено(Выборка.ДатаПомещенияИзмененийВХранилищеВерсии) Тогда
			ИнформацияОПомещенииВХранилище = ИнформацияОПомещенииВХранилище + " "
				+ Формат(Выборка.ДатаПомещенияИзмененийВХранилищеВерсии, "ДЛФ=DT");
		КонецЕсли;
		
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(ИнформацияОПомещенииВХранилище, 1, Документ);
		
	КонецЕсли;
	
	Если Выборка.ВнесеныИзмененияВСправку Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Внесены изменения в справку'"), 1, Документ);
	КонецЕсли;
	
	Если Выборка.ВнесеныИзмененияВДокументацию Тогда
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Внесены изменения в документацию'"), 1, Документ);
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Цели проекта'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.ЦелиПроекта, , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Концепция проекта'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.КонцепцияПроекта, , Документ);
	
	Если НЕ Выборка.ЭтоГруппа Тогда
		
		ОписаниеТехническогоПроекта = Выборка.ХранилищеОписания.Получить();
		
		Если ТипЗнч(ОписаниеТехническогоПроекта) = Тип("ФорматированныйДокумент") Тогда
			ТекстОписания = ОписаниеТехническогоПроекта.ПолучитьТекст();
			
			Если ЗначениеЗаполнено(ТекстОписания) Тогда
				ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Описание'"), Документ);
				ОписаниеОбъектов.ВывестиТекстПоАбзацам(ТекстОписания, , Документ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Каталог хранилища для загрузки метаданных'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.КаталогХранилищаДляЗагрузкиМетаданных, , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Каталог демонстрационной базы'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.КаталогДемонстрационнойБазы, , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Дополнительный публикуемый файл с описанием (презентацией)'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.ДополнительныйПубликуемыйФайл, , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Идеи и ошибки'"), Документ);
	ТаблицаИдейИОшибок = Выборка.ИдеиИОшибки.Выгрузить();
	
	Для Каждого СтрокаТаблицыИдейИОшибок из ТаблицаИдейИОшибок Цикл
		
		Идея = СтрокаТаблицыИдейИОшибок.Идея;
		ОписаниеОбъектов.ВывестиЗаголовокПодраздела(Идея, Идея, 0, Документ);
		
		Если ТипЗнч(Идея) = Тип("СправочникСсылка.Ошибки") Тогда
			ТекстЗаголовка = НСтр("ru='Исправление ошибки: '");
		Иначе
			ТекстЗаголовка = НСтр("ru='Выполнение идеи: '");
		КонецЕсли;
		
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(ТекстЗаголовка + СтрокаТаблицыИдейИОшибок.РеализацияИдеи, 1, Документ);
	КонецЦикла;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Затрагиваемые процессы'"), Документ);
	ТаблицаПроцессов = Выборка.Процессы.Выгрузить();
	ОписаниеОбъектов.ВывестиПодразделы(ТаблицаПроцессов, , , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Затрагиваемые функции'"), Документ);
	ТаблицаФункций = Выборка.Функции.Выгрузить();
	ОписаниеОбъектов.ВывестиПодразделы(ТаблицаФункций, , , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Затрагиваемые сценарии работы пользователя'"), Документ);
	СценарииПользователей = Выборка.СценарииПользователей.Выгрузить();
	Для Каждого СтрокаСценарииПользователей Из СценарииПользователей Цикл
		ОписаниеОбъектов.ВывестиЗаголовокПодраздела(НСтр("ru='Сценарий: '")
		     + СтрокаСценарииПользователей.Сценарий, , 0, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Описание: '")
	  	    + СтрокаСценарииПользователей.Описание, 1, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Комментарий: '")
	  	    + СтрокаСценарииПользователей.Комментарий, 1, Документ);
		ОписаниеОбъектов.ВывестиТекстПоАбзацам(НСтр("ru='Шаг процесса: '")
	  	    + СтрокаСценарииПользователей.ШагПроцесса, 1, Документ);
	КонецЦикла;
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Затрагиваемые обработчики обновления'"), Документ);
	ТаблицаОбработчиковОбновления = Выборка.ОбработчикиОбновления.Выгрузить();
	ОписаниеОбъектов.ВывестиПодразделы(ТаблицаОбработчиковОбновления, , , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Затрагиваемые профили пользователей'"), Документ);
	ТаблицаПрофилей = Выборка.ПрофилиПользователей.Выгрузить();
	ОписаниеОбъектов.ВывестиПодразделы(ТаблицаПрофилей, , , Документ);
	
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Участники'"), Документ);
	ТаблицаУчастников = Выборка.Участники.Выгрузить();
	ОписаниеОбъектов.ВывестиПодразделы(ТаблицаУчастников, , , Документ);
	
	// Хранимые файлы
	Если ТаблицаФайлов.Количество()>0 Тогда
		ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Файлы'"), Документ);
		ОписаниеОбъектов.ВывестиПодразделы(ТаблицаФайлов, , , Документ);
	КонецЕсли;
	
	// Заметки
	ОписаниеОбъектов.ВывестиЗаголовокРаздела(НСтр("ru='Заметки'"), Документ);
	ОписаниеОбъектов.ВывестиТекстПоАбзацам(Выборка.Заметки, 1, Документ);
	
КонецПроцедуры

Функция ПоказателиТекущихДелПоТехническимПроектам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(ВЫБОР
	|			КОГДА (ТехническиеПроекты.ПлановаяДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|						И (ТехническиеПроекты.Версия.ДатаНачалаРазработки < &ДатаЗавтра ИЛИ ТехническиеПроекты.Версия = ЗНАЧЕНИЕ(Справочник.ВерсииПроекта.ПустаяСсылка))
	|					ИЛИ ТехническиеПроекты.ПлановаяДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|						И ТехническиеПроекты.ПлановаяДатаНачала < &ДатаЗавтра)
	|					И ТехническиеПроекты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТехническихПроектов.Запланирован)
	|					И ТехническиеПроекты.Ответственный = &ТекущийПользователь
	|				ТОГДА ТехническиеПроекты.Ссылка
	|		КОНЕЦ) КАК КоличествоТехническихПроектовПриступить,
	|	КОЛИЧЕСТВО(ВЫБОР
	|			КОГДА ТехническиеПроекты.ПлановаяДатаОкончания < &ДатаЗавтра
	|					И ТехническиеПроекты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТехническихПроектов.Активен)
	|					И ТехническиеПроекты.Ответственный = &ТекущийПользователь
	|				ТОГДА ТехническиеПроекты.Ссылка
	|		КОНЕЦ) КАК КоличествоТехническихПроектовЗавершить
	|ИЗ
	|	Справочник.ТехническиеПроекты КАК ТехническиеПроекты
	|ГДЕ
	|	НЕ ТехническиеПроекты.ПометкаУдаления
	|	И ТехническиеПроекты.Ответственный = &ТекущийПользователь"
	;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ТекущаяДата = НачалоДня(Текущаядата());
	
	ДатаЗавтра = ОбщегоНазначенияСППР.СледующаяДатаПоОсновномуКалендарю();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТекущийПользователь", ТекущийПользователь);
	Запрос.УстановитьПараметр("ДатаЗавтра", ДатаЗавтра);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоТехническихПроектовПриступить", 0);
	СтруктураРезультата.Вставить("КоличествоТехническихПроектовЗавершить", 0);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРезультата, Выборка);
	КонецЕслИ;
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#КонецЕсли