#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не Опубликована Тогда
		НепроверяемыеРеквизиты.Добавить("ДатаПубликации");
		НепроверяемыеРеквизиты.Добавить("ПубликуемыйНомерСборки");
	Иначе
		Если ЗначениеЗаполнено(ДатаСборки) И ЗначениеЗаполнено(ДатаПубликации) И ДатаСборки>ДатаПубликации Тогда
			ТекстСообщения = НСтр("ru='Дата публикации не может быть ранее даты сборки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаПубликации");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НепроверяемыеРеквизиты.Количество()>0 Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Версия1 = СтрРазделить(ОбъектКопирования.Код, ".");
	
	Если Версия1.Количество() > 3 Тогда
		
		Попытка
			НомерСборки = Число(Версия1[3]);
			Версия1[3] = Строка(1 + НомерСборки);
			Версия2 = СтрСоединить(Версия1, ".");
			Код = Версия2;
			ПубликуемыйНомерСборки = Версия2;
			РасположениеДистрибутива = СтрЗаменить(ОбъектКопирования.РасположениеДистрибутива, ОбъектКопирования.Код, Версия2);
			РасположениеПубликации = СтрЗаменить(ОбъектКопирования.РасположениеПубликации, ОбъектКопирования.Код, Версия2);
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
	ДатаПубликации = Неопределено;
	Опубликована = Неопределено;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		ДатаСборки = ТекущаяДатаСеанса();
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			
			РекомендуемаяВерсияПлатформы = Справочники.ВерсииПроекта.ВерсияПлатформы(ДанныеЗаполнения.Владелец);
			
			Если ДанныеЗаполнения.Свойство("Владелец") Тогда
				Владелец = ДанныеЗаполнения.Владелец;
			КОнецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Владелец) И НЕ ЗначениеЗаполнено(Ветка) Тогда
			ВеткаВерсии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Ветка");
			Ветка = ВеткаВерсии;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьПравильностьУказанияСтатуса(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьНаличиеСборокСАналогичнымПубликуемымНомером(Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Опубликована И ПолучитьФункциональнуюОпцию("ИспользоватьПубликациюПатчейВСервисе") Тогда
		ПатчиСлужебный.ЗарегистрироватьСборкуДляПроверкиПатчей(Ссылка, Опубликована, Владелец);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьПравильностьУказанияСтатуса(Отказ)
	
	ВозможныеЗначения = Новый Массив;
	
	ЭтоБиблиотека = ПроектЯвляетсяБиблиотекой();
	
	Если ЭтоБиблиотека Тогда
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.НеДляВстраивания);
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.ДляПредварительногоВстраивания);
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.Финальная);
	Иначе
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.Ознакомительная);
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.Тестовая);
		ВозможныеЗначения.Добавить(Перечисления.СтатусыСборокВерсииПроекта.Финальная);
	КонецЕсли;
	
	Если ВозможныеЗначения.Найти(Статус) = Неопределено Тогда
		
		Если ЭтоБиблиотека Тогда
			ТекстСообщения = НСтр("ru='Для сборки библиотеки не допускается указание статуса %Статус%'");
		Иначе
			ТекстСообщения = НСтр("ru='Для сборки конфигурации не допускается указание статуса %Статус%'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Статус%", Статус);
		
		Отказ = Истина;
		ВызватьИсключение(ТекстСообщения);
		
	КонецЕсли;
		
КонецПроцедуры
	
Функция ПроектЯвляетсяБиблиотекой()
	
	Если НЕ ЗначениеЗаполнено(Владелец) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВерсииПроекта.Владелец.Библиотека КАК Библиотека
	|ИЗ
	|	Справочник.ВерсииПроекта КАК ВерсииПроекта
	|ГДЕ
	|	ВерсииПроекта.Ссылка = &Версия"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Версия", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЯвляетсяБиблиотекой = Выборка.Библиотека;
	Иначе
		ЯвляетсяБиблиотекой = Ложь;
	КонецЕсли;
	
	Возврат ЯвляетсяБиблиотекой;
	
КонецФункции

Процедура ПроверитьНаличиеСборокСАналогичнымПубликуемымНомером(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Владелец) ИЛИ ПометкаУдаления
		ИЛИ НЕ ЗначениеЗаполнено(ПубликуемыйНомерСборки) Тогда
		Возврат;
	КонецЕсли;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Владелец");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СборкиВерсии.Ссылка КАК Ссылка,
	|	СборкиВерсии.Код КАК КОд
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.ПубликуемыйНомерСборки = &ПубликуемыйНомерСборки
	|	И НЕ СборкиВерсии.ПубликуемыйНомерСборки ПОДОБНО """"
	|	И СборкиВерсии.Владелец.Владелец = &Проект
	|	И НЕ СборкиВерсии.ПометкаУдаления
	|	И СборкиВерсии.Ссылка <> &Ссылка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПубликуемыйНомерСборки", ПубликуемыйНомерСборки);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для данного проекта <%1> уже имеется сборка с указанным публикуемым номером <%2>.'"), Проект, ПубликуемыйНомерСборки);
		Отказ = Истина;
		
		ВызватьИсключение(ТекстСОобщения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли