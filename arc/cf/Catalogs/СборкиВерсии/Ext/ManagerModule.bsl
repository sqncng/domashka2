#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция ДанныеУведомления(Сборка) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.СборкиВерсии.ПФ_MXL_УведомлениеОСборке");
	
	ОбластьЗаголовок = Неопределено;
	ОбластьТекстУведомления = Неопределено;
	ОбластьВключаемыеСборкиШапка = Неопределено;
	ОбластьОбновлениеСборокШапка = Неопределено;
	
	Попытка
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокУведомления");
		ОбластьТекстУведомления = Макет.ПолучитьОбласть("ТекстУведомления");
		ОбластьВключаемыеСборкиШапка = Макет.ПолучитьОбласть("ВключаемыеСборкиШапка");
		ОбластьОбновлениеСборокШапка = Макет.ПолучитьОбласть("ОбновлениеСборокШапка");
	Исключение
	КонецПопытки;
	
	РеквизитыПроекта = РеквизитыПроекта(Сборка);
	
	ДанныеОСборке = ИнформацияОСборке(Сборка);	
	
	ТаблицаВключаемыхСборок = ДанныеОСборке.ВключаемыеСборки;
	ТаблицаОбновленияСборок = ДанныеОСборке.ОбновлениеДляСборок;
	
	Если ОбластьЗаголовок<>Неопределено Тогда
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("НаименованиеКонфигурации", РеквизитыПроекта.НаименованиеКонфигурации);
		СтруктураДанных.Вставить("НомерСборки", ДанныеОСборке.НомерСборки);
		
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураДанных);
		
	КонецЕсли;
	
	Область = ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТекстЗаголовка = Область.Текст;
	
	Если ОбластьТекстУведомления<>Неопределено Тогда
		
		НаименованиеВерсияКонфигурации = РеквизитыПроекта.НаименованиеКонфигурации + " " + (ДанныеОСборке.НомерСборки);
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("Ответственный", РеквизитыПроекта.Ответственный);
		СтруктураДанных.Вставить("ДатаСборки", Формат(ДанныеоСборке.ДатаСборки, "ДЛФ=D"));
		СтруктураДанных.Вставить("НаименованиеВерсияКонфигурации", НаименованиеВерсияКонфигурации);
		СтруктураДанных.Вставить("ВерсияПлатформы", ДанныеоСборке.РекомендуемаяВерсияПлатформы);
		СтруктураДанных.Вставить("ПричиныВыпуска", ДанныеоСборке.ПричиныВыпуска);
		СтруктураДанных.Вставить("РасположениеДистрибутива", 
			?(ЗначениеЗаполнено(ДанныеОСборке.РасположениеДистрибутива), ДанныеОСборке.РасположениеДистрибутива,
			РеквизитыПроекта.РасположениеДистрибутивов + "\????") + 
			?(ЗначениеЗаполнено(ДанныеОСборке.РасположениеПубликации), Символы.ПС + 
			"Опубликовано:"+ " " + ДанныеОСборке.РасположениеПубликации, ""));
		
		ОбластьТекстУведомления.Параметры.Заполнить(СтруктураДанных);
		
	КонецЕсли;
	
	Область = ТабличныйДокумент.Вывести(ОбластьТекстУведомления);
	ТекстУведомления = Область.Текст;
	
	Если ТаблицаВключаемыхСборок.Количество()>0 Тогда
		
		ТекстУведомления = ТекстУведомления + Символы.ПС + Символы.ПС;
		
		Если ОбластьВключаемыеСборкиШапка<>Неопределено Тогда
			Область = ТабличныйДокумент.Вывести(ОбластьВключаемыеСборкиШапка);
			ТекстУведомления = ТекстУведомления + Область.Текст;
			ТекстУведомления = ТекстУведомления + Символы.ПС;
		КонецЕсли;
			
		Для Каждого СтрокаТаблицы из ТаблицаВключаемыхСборок Цикл
			
			ТекстУведомления = ТекстУведомления + Символы.ПС;
			
			ПредставлениеСборки = СтрокаТаблицы.НаименованиеКонфигурации + " " + СтрокаТаблицы.НомерСборки;
			ПредставлениеСборки = ПредставлениеСборки + НСтр("ru=' от '") + Формат(СтрокаТаблицы.ДатаСборки, "ДЛФ=D");
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.СтатусСборки) Тогда
				ПредставлениеСборки = ПредставлениеСборки + " (" + СтрокаТаблицы.СтатусСборки + ")";
			КонецЕсли;
			
			ТекстУведомления = ТекстУведомления + ПредставлениеСборки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТаблицаОбновленияСборок.Количество()>0 Тогда
		
		ТекстУведомления = ТекстУведомления + Символы.ПС + Символы.ПС;
		
		Если ОбластьОбновлениеСборокШапка<>Неопределено Тогда
			Область = ТабличныйДокумент.Вывести(ОбластьОбновлениеСборокШапка);
			ТекстУведомления = ТекстУведомления + Область.Текст;
			ТекстУведомления = ТекстУведомления + Символы.ПС;
		КонецЕсли;
			
		Для Каждого СтрокаТаблицы из ТаблицаОбновленияСборок Цикл
			
			ТекстУведомления = ТекстУведомления + Символы.ПС;
			
			ПредставлениеСборки = СтрокаТаблицы.НомерСборки;
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.СтатусСборки) Тогда
				ПредставлениеСборки = ПредставлениеСборки + " (" + СтрокаТаблицы.СтатусСборки + ")";
			КонецЕсли;
			
			ТекстУведомления = ТекстУведомления + ПредставлениеСборки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеОСборке.ДополнительныеРеквизиты.Количество() > 0 Тогда
		
		Для каждого Свойство Из ДанныеОСборке.ДополнительныеРеквизиты Цикл
			
			ТекстУведомления = ТекстУведомления + Символы.ПС;
			
			Если ТипЗнч(Свойство.Значение) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов")
				и ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Свойство.Значение, "ПолноеНаименование")) Тогда
				ТекстУведомления = ТекстУведомления + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Свойство.Значение, "ПолноеНаименование");
			Иначе
				ТекстУведомления = ТекстУведомления + Свойство.Значение;
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	СтруктураРезультата.Вставить("ТекстУведомления", ТекстУведомления);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция ПараметрыСборки(Сборка) Экспорт
	
	Структура = Новый Структура("Версия, Проект");
	Структура.Вставить("Сборка", Сборка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СборкиВерсии.Владелец КАК Версия,
	|	СборкиВерсии.Владелец.Владелец КАК Проект
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.Ссылка = &Сборка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Сборка", Сборка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Структура.Вставить("Версия", Выборка.Версия);
		Структура.Вставить("Проект", Выборка.Проект);
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец.Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтборПоВерсиямВоспроизведенияПроекта") Тогда
		
		Если Параметры.ОтборПоВерсиямВоспроизведенияПроекта Тогда
			
			ДанныеВыбора = СборкиВоспроизведенияДляПроекта(Параметры);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("Проект") Тогда
		
		ДанныеВыбора = СборкиПоПроекту(Параметры);
		СтандартнаяОбработка = Ложь;
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СборкиВоспроизведенияДляПроекта(Параметры)
	
	Если Параметры.Свойство("Проект") Тогда
		Проект = Параметры.Проект;
	Иначе
		Проект = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;
	
	Если Параметры.Свойство("Владелец") Тогда
		Версия = Параметры.Владелец;
	Иначе
		Версия = Справочники.ВерсииПроекта.ПустаяСсылка();
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоПубликуемые") Тогда
		ОтбиратьОпубликованные = Параметры.ТолькоПубликуемые;
	Иначе
		ОтбиратьОпубликованные = Ложь;
	КонецЕсли;
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	
	Если СтрокаПоиска = Неопределено Тогда
		ТекстВыбора = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ";
	Иначе
		ТекстВыбора = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 10";
	КонецЕсли;
	
	ТекстЗапроса = ТекстВыбора + "
	|	СборкиВерсии.Ссылка КАК Ссылка,
	|	СборкиВерсии.ДатаСборки КАК ДатаСборки,
	|	СборкиВерсии.Код КАК Код,
	|	СборкиВерсии.Опубликована КАК Опубликована
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты.ПорядокВоспроизведенияИИсправленияОшибок КАК ПроектыПорядокВоспроизведенияИИсправленияОшибок
	|		ПО СборкиВерсии.Владелец = ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияВоспроизведения
	|ГДЕ
	|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.Ссылка В(&Проект)
	|	И (НЕ &ОтбиратьПоКоду
	|			ИЛИ СборкиВерсии.Код ПОДОБНО &СтрокаПоиска)
	|	И (СборкиВерсии.Владелец В (&Версия)
	|			ИЛИ НЕ &ОтбиратьПоВладельцу)
	|	И (СборкиВерсии.Опубликована
	|			ИЛИ НЕ &ОтбиратьОпубликованные)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СборкиВерсии.Владелец.ПорядковыйНомер УБЫВ,
	|	СборкиВерсии.ДатаСборки УБЫВ"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
		
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
		Запрос.УстановитьПараметр("ОтбиратьПоКоду", Истина);
	Иначе
		Запрос.УстановитьПараметр("СтрокаПоиска", "");
		Запрос.УстановитьПараметр("ОтбиратьПоКоду", Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Версия) Тогда
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Истина);
	Иначе
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Версия", Версия);
	Запрос.УстановитьПараметр("ОтбиратьОпубликованные", ОтбиратьОпубликованные);
	
	СписокВыбора = Новый СписокЗначений;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПредставлениеСборки = СОКРЛП(Выборка.Код);
		
		Если ЗначениеЗаполнено(Выборка.ДатаСборки) Тогда
			ПредставлениеСборки = ПредставлениеСборки + " " + НСтр("ru='от'") + " " + Формат(Выборка.ДатаСборки, "ДЛФ=D");
		КонецЕсли;
		
		Если Выборка.Опубликована Тогда
			СписокВыбора.Добавить(Выборка.Ссылка, ПредставлениеСборки,, БиблиотекаКартинок.Публикуется);
		Иначе
			СписокВыбора.Добавить(Выборка.Ссылка, ПредставлениеСборки,, БиблиотекаКартинок.Реквизит);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция СборкиПоПроекту(Параметры)
	
	Если Параметры.Свойство("Проект") Тогда
		Проект = Параметры.Проект;
	Иначе
		Проект = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;
	
	Если Параметры.Свойство("Владелец") Тогда
		Версия = Параметры.Владелец;
	Иначе
		Версия = Справочники.ВерсииПроекта.ПустаяСсылка();
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СборкиВерсии.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.Владелец.Владелец В (&Проект)
	|	И (НЕ &ОтбиратьПоКоду
	|			ИЛИ СборкиВерсии.Код ПОДОБНО &СтрокаПоиска)
	|   И (СборкиВерсии.Владелец В (&Версия) ИЛИ НЕ &ОтбиратьПоВладельцу)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СборкиВерсии.Владелец.ПорядковыйНомер,
	|	СборкиВерсии.ДатаСборки"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
		
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
		Запрос.УстановитьПараметр("ОтбиратьПоКоду", Истина);
	Иначе
		Запрос.УстановитьПараметр("СтрокаПоиска", "");
		Запрос.УстановитьПараметр("ОтбиратьПоКоду", Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Версия) Тогда
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Истина);
	Иначе
		Запрос.УстановитьПараметр("ОтбиратьПоВладельцу", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Версия", Версия);
	
	СписокВыбора = Новый СписокЗначений;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция РеквизитыПроекта(Сборка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("НаименованиеКонфигурации");
	СтруктураРеквизитов.Вставить("Ответственный");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СборкиВерсии.Владелец.Владелец.НаименованиеКонфигурации КАК НаименованиеКонфигурации,
	|	СборкиВерсии.Владелец.Владелец.Ответственный КАК Ответственный,
	|	СборкиВерсии.Владелец.Владелец.РасположениеДистрибутивов КАК РасположениеДистрибутивов
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.Ссылка = &Сборка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Сборка", Сборка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтруктураРеквизитов.Вставить("НаименованиеКонфигурации", Выборка.НаименованиеКонфигурации);
		СтруктураРеквизитов.Вставить("Ответственный", Выборка.Ответственный);
		СтруктураРеквизитов.Вставить("РасположениеДистрибутивов", Выборка.РасположениеДистрибутивов);
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

Функция ИнформацияОСборке(Сборка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СборкиВерсии.Код КАК НомерСборки,
	|	СборкиВерсии.ДатаСборки КАК ДатаСборки,
	|	СборкиВерсии.РекомендуемаяВерсияПлатформы КАК РекомендуемаяВерсияПлатформы,
	|	СборкиВерсии.ПричиныВыпуска КАК ПричиныВыпуска,
	|	СборкиВерсии.СборкиВключаемыхПроектов.(
	|		Сборка.Владелец.Владелец.НаименованиеКонфигурации КАК НаименованиеКонфигурации,
	|		Сборка.Код КАК НомерСборки,
	|		Сборка.ДатаСборки КАК ДатаСборки,
	|		Сборка.Опубликована КАК Опубликована,
	|		Сборка.ДатаПубликации КАК ДатаПубликации,
	|		Сборка.Статус КАК СтатусСборки
	|	) КАК ВключаемыеСборки,
	|	СборкиВерсии.ОбновлениеДляСборок.(
	|		Сборка.Код КАК НомерСборки,
	|		Сборка.Статус КАК СтатусСборки
	|	) КАК ОбновлениеДляСборок,
	|	СборкиВерсии.РасположениеДистрибутива,
	|	СборкиВерсии.РасположениеПубликации
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.Ссылка = &Сборка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СборкиВерсииДополнительныеРеквизиты.Значение,
	|	СборкиВерсииДополнительныеРеквизиты.Свойство
	|ИЗ
	|	Справочник.СборкиВерсии.ДополнительныеРеквизиты КАК СборкиВерсииДополнительныеРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений КАК НаборыДополнительныхРеквизитовИСведений
	|			ПО ДополнительныеРеквизитыИСведения.НаборСвойств = НаборыДополнительныхРеквизитовИСведений.Ссылка
	|		ПО СборкиВерсииДополнительныеРеквизиты.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
	|ГДЕ
	|	СборкиВерсииДополнительныеРеквизиты.Ссылка = &Сборка
	|	И НаборыДополнительныхРеквизитовИСведений.Ссылка = &ОбщийРеквизит"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Сборка", Сборка);
	Запрос.УстановитьПараметр("ОбщийРеквизит", Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_СборкиВерсии_Общие);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[0].Выбрать();
	Выборка.Следующий();
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("НомерСборки", Выборка.НомерСборки);
	СтруктураДанных.Вставить("ДатаСборки", Выборка.ДатаСборки);
	СтруктураДанных.Вставить("РекомендуемаяВерсияПлатформы", Выборка.РекомендуемаяВерсияПлатформы);
	СтруктураДанных.Вставить("ПричиныВыпуска", Выборка.ПричиныВыпуска);
	СтруктураДанных.Вставить("РасположениеДистрибутива", Выборка.РасположениеДистрибутива);
	СтруктураДанных.Вставить("РасположениеПубликации", Выборка.РасположениеПубликации);
	
	СтруктураДанных.Вставить("ВключаемыеСборки", Выборка.ВключаемыеСборки.Выгрузить());
	СтруктураДанных.Вставить("ОбновлениеДляСборок", Выборка.ОбновлениеДляСборок.Выгрузить());
	
	СтруктураДанных.Вставить("ДополнительныеРеквизиты", Результат[1].Выгрузить());
	
	Возврат СтруктураДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли