#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция СсылкаНовогоУзла(Пользователь, ТипСинхронизации) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СинхронизацияКалендарей.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.СинхронизацияКалендарей КАК СинхронизацияКалендарей
	|ГДЕ
	|	СинхронизацияКалендарей.Пользователь = &Пользователь
	|	И СинхронизацияКалендарей.ТипСинхронизации = &ТипСинхронизации");
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ТипСинхронизации", ТипСинхронизации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		НовыйУзел = СоздатьУзел();
		НовыйУзел.УстановитьНовыйКод();
		НовыйУзел.Пользователь = Пользователь;
		НовыйУзел.ТипСинхронизации = ТипСинхронизации;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		НовыйУзел = Выборка.Ссылка.ПолучитьОбъект();
		НовыйУзел.УстановитьПометкуУдаления(Ложь);
		НовыйУзел.Календари.Очистить();
		НовыйУзел.Включен = Ложь;
	КонецЕсли;
	
	НовыйУзел.Наименование = Строка(ТипСинхронизации) + " " + Строка(Пользователь);
	НовыйУзел.Записать();
	
	Возврат НовыйУзел.Ссылка;

КонецФункции

Процедура ОчиститьУзел(Узел) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	УзелОбъект = Узел.ПолучитьОбъект();
	УзелОбъект.Включен = Ложь;
	УзелОбъект.ДатаПоследнейСинхронизации = Дата(1,1,1);
	УзелОбъект.СинхронизацияЗавершенаСОшибками = Ложь;
	УзелОбъект.ИнформацияОбОшибке = "";
	УзелОбъект.Календари.Очистить();
	УзелОбъект.Записать();
	УзелОбъект.УстановитьПометкуУдаления(Истина);

КонецПроцедуры

Процедура ЗаписатьРезультатыСинхронизации(РезультатыСинхронизации) Экспорт

	Если Не ЗначениеЗаполнено(РезультатыСинхронизации) Тогда
		Возврат;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	Для Каждого СоответствиеУзел Из РезультатыСинхронизации Цикл
		УзелОбъект = СоответствиеУзел.Ключ.ПолучитьОбъект();
		УзелОбъект.ДатаПоследнейСинхронизации = ТекущаяДатаСеанса();
		УзелОбъект.ИнформацияОбОшибке = СоответствиеУзел.Значение.ОписаниеОшибки;
		УзелОбъект.СинхронизацияЗавершенаСОшибками = ЗначениеЗаполнено(УзелОбъект.ИнформацияОбОшибке);
		ТокеныСинхронизации = СоответствиеУзел.Значение.ТокеныСинхронизации;
		Если Не УзелОбъект.СинхронизацияЗавершенаСОшибками
			Или ЗначениеЗаполнено(ТокеныСинхронизации) Тогда		
			Для Каждого СоответствиеКалендарь Из ТокеныСинхронизации Цикл
				НайденныеСтроки = УзелОбъект.Календари.НайтиСтроки(Новый Структура("Идентификатор", СоответствиеКалендарь.Ключ));
				Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
					НайденныеСтроки[0].ТокенСинхронизации = СоответствиеКалендарь.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		УзелОбъект.Записать();
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли