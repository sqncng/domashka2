#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет запись данных в регистр
//
// Параметры:
//  ДанныеЗаписи  - Структура - см. ОбъектыНаКонтролеКлиентСервер.НовыйДанныеЗаписиКонтроля
//
Процедура ЗаписатьДанные(ДанныеЗаписи) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СписокКонтроля.Установить(ДанныеЗаписи.СписокКонтроля);
	НаборЗаписей.Отбор.ОбъектКонтроля.Установить(ДанныеЗаписи.ОбъектКонтроля);
	НаборЗаписей.Отбор.ДатаКонтроля.Установить(ДанныеЗаписи.ДатаКонтроля);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		
		ЗаписьНабора = НаборЗаписей.Добавить();
		
	Иначе
		
		ЗаписьНабора = НаборЗаписей[0];
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьНабора, ДанныеЗаписи);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Изменяет результат контроля в записи регистра
//
// Параметры:
//  КлючЗаписи - РегистрыСведенийКлючЗаписи.ОбъектыКонтроля - ключ записи, для которой изменяется результат.
//  Результат  - Строка - 
//
Процедура ОтразитьИзменениеРезультата(КлючЗаписи, Результат) Экспорт
	
	ДанныеЗаписи = ДанныеЗаписиТолькоКлючПоКлючуЗаписи(КлючЗаписи);
	ДанныеЗаписи.Вставить("Результат",              Результат);
	ДанныеЗаписи.Вставить("ДатаУказанияРезультата", НачалоДня(ТекущаяДатаСеанса()));
	
	ЗаписатьДанные(ДанныеЗаписи);
	
КонецПроцедуры

// Снимает объект с контроля
//
// Параметры:
//  КлючЗаписи - РегистрыСведенийКлючЗаписи.ОбъектыКонтроля - ключ записи, объект которой снимается с контроля.
//
Процедура СнятьСКонтроля(КлючЗаписи) Экспорт
	
	ДанныеЗаписи = ДанныеЗаписиТолькоКлючПоКлючуЗаписи(КлючЗаписи);
	ДанныеЗаписи.Вставить("ИсторическаяЗапись", Истина);
	
	ЗаписатьДанные(ДанныеЗаписи);
	
КонецПроцедуры

// Отражает решение по объекту контроля
//
// Параметры:
//  КлючЗаписи - РегистрыСведенийКлючЗаписи.ОбъектыКонтроля - ключ последней записи по объекту контроля.
//  ДанныеРешения  - Структура - содержит:
//   * Результат               - Строка - результат на момент контроля.
//   * Решение                 - Строка - решение, принятое при контроле.
//   * Ответственный           - СправочникСсылка.Пользователи - ответственный за объект контроля.
//   * ОжидаемаяДатаВыполнения - Дата - решение, принятое при контроле.
//   * ИзменитьОтветственного  - Булево - признак того, что в новой записи нужно изменить ответственного.
//   * ИзменитьДатуОкончания   - Строка - признак того, что в новой записи нужно изменить ожидаемую дату завершения.
//
Процедура ОтразитьРешение(КлючЗаписи, ДанныеРешения) Экспорт
	
	ДанныеЗаписи = ДанныеЗаписиТолькоКлючПоКлючуЗаписи(КлючЗаписи);
	ДанныеЗаписи.Вставить("ИсторическаяЗапись", Истина);
	
	ЗаписатьДанные(ДанныеЗаписи);
	
	ДанныеЗаписи = ДанныеЗаписиПоКлючуЗаписи(КлючЗаписи);
	ДанныеЗаписи.ДатаКонтроля             = ТекущаяДатаСеанса();
	ДанныеЗаписи.Решение                  = ДанныеРешения.Решение;
	ДанныеЗаписи.ДатаУказанияРезультата   = Дата(1, 1, 1);
	ДанныеЗаписи.Результат                = "";
	ДанныеЗаписи.ИсторическаяЗапись       = ДанныеРешения.ЭтоСнятиеСКонтроля;
	ДанныеЗаписи.СледующаяДатаКонтроля    = ДанныеРешения.СледующаяДатаКонтроля;
	
	Если ДанныеРешения.ИзменитьДатуОкончания Тогда
		ДанныеЗаписи.ОжидаемаяДатаВыполнения = ДанныеРешения.ОжидаемаяДатаВыполнения;
	КонецЕсли;
	
	Если ДанныеРешения.ИзменитьОтветственного Тогда
		ДанныеЗаписи.Ответственный = ДанныеРешения.Ответственный;
	КонецЕсли;
	
	ЗаписатьДанные(ДанныеЗаписи);
	
КонецПроцедуры

// Отражает результат и решение по объекту контроля, когда неизвестна последняя запись контроля
//
// Параметры:
//  КлючЗаписи - РегистрыСведенийКлючЗаписи.ОбъектыКонтроля - ключ последней записи по объекту контроля.
//  ДанныеРешения  - Структура - содержит:
//   * Результат               - Строка - результат на момент контроля.
//   * Решение                 - Строка - решение, принятое при контроле.
//   * Ответственный           - СправочникСсылка.Пользователи - ответственный за объект контроля.
//   * ОжидаемаяДатаВыполнения - Дата - решение, принятое при контроле.
//   * ИзменитьОтветственного  - Булево - признак того, что в новой записи нужно изменить ответственного.
//   * ИзменитьДатуОкончания   - Строка - признак того, что в новой записи нужно изменить ожидаемую дату завершения.
//
Процедура ОтразитьРешениеИРезультат(КлючЗаписи, ДанныеРешения) Экспорт
	
	ОтразитьИзменениеРезультата(КлючЗаписи, ДанныеРешения.Результат);
	ОтразитьРешение(КлючЗаписи, ДанныеРешения);
	
КонецПроцедуры

// Отражает результат и решение по объекту контроля
//
// Параметры:
//  СписокКонтроля          - Справочники.СпискиКонтроля - список контроля
//  ОбъектКонтроля          - СправочникСсылка.Ошибки,
//                            СправочникСсылка.ТехническиеПроекты,
//                            СправочникСсылка.Ветки,
//                            СправочникСсылка.ЗадачиПроцесса,
//                            Неопределено - ссылка на объект контроля - список контроля
//  ДанныеРешения  - Структура - содержит:
//   * Результат               - Строка - результат на момент контроля.
//   * Решение                 - Строка - решение, принятое при контроле.
//   * Ответственный           - СправочникСсылка.Пользователи - ответственный за объект контроля.
//   * ОжидаемаяДатаВыполнения - Дата - решение, принятое при контроле.
//   * ИзменитьОтветственного  - Булево - признак того, что в новой записи нужно изменить ответственного.
//   * ИзменитьДатуОкончания   - Строка - признак того, что в новой записи нужно изменить ожидаемую дату завершения.
//
Процедура ОтразитьРешениеИРезультатПоПоследнейЗаписи(ОбъектКонтроля, СписокКонтроля, ДанныеРешения) Экспорт
	
	ДанныеПоследнейЗаписи = ДанныеПоследнейЗаписиКонтроля(ОбъектКонтроля, СписокКонтроля);
	
	ЗначенияКлюча = Новый Структура;
	ЗначенияКлюча.Вставить("ОбъектКонтроля", ОбъектКонтроля);
	ЗначенияКлюча.Вставить("СписокКонтроля", СписокКонтроля);
	ЗначенияКлюча.Вставить("ДатаКонтроля",  ДанныеПоследнейЗаписи.ДатаКонтроля);
	
	КлючЗаписи = РегистрыСведений.ОбъектыНаКонтроле.СоздатьКлючЗаписи(ЗначенияКлюча);
	
	ОтразитьИзменениеРезультата(КлючЗаписи, ДанныеРешения.Результат);
	ОтразитьРешение(КлючЗаписи, ДанныеРешения);
	
КонецПроцедуры

// Удаляет запись из регистра
//
// Параметры:
//  ДанныеЗаписи  - Структура - см. ОбъектыНаКонтролеКлиентСервер.НовыйДанныеЗаписиКонтроля
//
Процедура УдалитьЗапись(ДанныеЗаписи) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СписокКонтроля.Установить(ДанныеЗаписи.СписокКонтроля);
	НаборЗаписей.Отбор.ОбъектКонтроля.Установить(ДанныеЗаписи.ОбъектКонтроля);
	НаборЗаписей.Отбор.ДатаКонтроля.Установить(ДанныеЗаписи.ДатаКонтроля);

	НаборЗаписей.Записать();
	
КонецПроцедуры

// Получает данные записи по ключу записи
//
// Параметры:
//  КлючЗаписи - РегистрыСведенийКлючЗаписи.ОбъектыКонтроля - ключ последней записи по объекту контроля.
//
// Возвращаемое значение:
//   Структура - содержит:
//    * СписокКонтроля          - Справочники.СпискиКонтроля - список контроля
//    * ОбъектКонтроля          - СправочникСсылка.Ошибки,
//                                СправочникСсылка.ТехническиеПроекты,
//                                СправочникСсылка.Ветки,
//                                СправочникСсылка.ЗадачиПроцесса,
//                                Неопределено - ссылка на объект контроля - список контроля
//    * Решение                 - Строка - решение на дату контроля
//    * ДатаКонтроля            - Дата - дата контроля
//    * ДатаУказанияРезультата  - Дата - дата контроля
//    * Результат               - Строка - результат к дате контроля
//    * ОжидаемаяДатаВыполнения - Дата - ожидаемая дата, к которой объект контроля будет выполнен.
//    * Ответственный           - Справочники.Пользователи - ответственный за объект.
//    * ТехническийПроект       - Справочники.ТехническиеПроекты - технический проект объекта контроля.
//    * ИсторическаяЗапись      - Булево - признак того что это историческая запись.
//
Функция ДанныеЗаписиПоКлючуЗаписи(КлючЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОбъектыНаКонтроле.СписокКонтроля          КАК СписокКонтроля,
	|	ОбъектыНаКонтроле.ОбъектКонтроля          КАК ОбъектКонтроля,
	|	ОбъектыНаКонтроле.ДатаКонтроля            КАК ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение                 КАК Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата  КАК ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат               КАК Результат,
	|	ОбъектыНаКонтроле.Ответственный           КАК Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект       КАК ТехническийПроект,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения КАК ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись      КАК ИсторическаяЗапись
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.СписокКонтроля = &СписокКонтроля
	|	И ОбъектыНаКонтроле.ОбъектКонтроля = &ОбъектКонтроля
	|	И ОбъектыНаКонтроле.ДатаКонтроля = &ДатаКонтроля";
	
	Запрос.УстановитьПараметр("СписокКонтроля", КлючЗаписи.СписокКонтроля);
	Запрос.УстановитьПараметр("ОбъектКонтроля", КлючЗаписи.ОбъектКонтроля);
	Запрос.УстановитьПараметр("ДатаКонтроля",   КлючЗаписи.ДатаКонтроля);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДанныеЗаписи = ОбъектыНаКонтролеКлиентСервер.НовыйДанныеЗаписиКонтроля();
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		Возврат ДанныеЗаписи;
	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Получает данные последней записи контроля по объекту и списку контроля
//
// Параметры:
//   СписокКонтроля          - Справочники.СпискиКонтроля - список контроля
//   ОбъектКонтроля          - СправочникСсылка.Ошибки,
//                             СправочникСсылка.ТехническиеПроекты,
//                             СправочникСсылка.Ветки,
//                             СправочникСсылка.ЗадачиПроцесса,
//                             Неопределено - ссылка на объект контроля
//
// Возвращаемое значение:
//   ВыборкаИзРезультатаЗапроса - содержит:
//    * Решение                 - Строка - решение на дату контроля
//    * ДатаКонтроля            - Дата - дата контроля
//    * ДатаУказанияРезультата  - Дата - дата контроля
//    * Результат               - Строка - результат к дате контроля
//    * ОжидаемаяДатаВыполнения - Дата - ожидаемая дата, к которой объект контроля будет выполнен.
//    * Ответственный           - Справочники.Пользователи - ответственный за объект.
//    * ТехническийПроект       - Справочники.ТехническиеПроекты - технический проект объекта контроля.
//    * ИсторическаяЗапись      - Булево - признак того что это историческая запись.
//
Функция ДанныеПоследнейЗаписиКонтроля(ОбъектКонтроля, СписокКонтроля) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбъектыНаКонтроле.ДатаКонтроля            КАК ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение                 КАК Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата  КАК ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат               КАК Результат,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения КАК ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись      КАК ИсторическаяЗапись,
	|	ОбъектыНаКонтроле.Ответственный           КАК Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект       КАК ТехническийПроект
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.СписокКонтроля = &СписокКонтроля
	|	И ОбъектыНаКонтроле.ОбъектКонтроля = &ОбъектКонтроля
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКонтроля УБЫВ";
	
	Запрос.УстановитьПараметр("СписокКонтроля", СписокКонтроля);
	Запрос.УстановитьПараметр("ОбъектКонтроля", ОбъектКонтроля);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Переносит записи по контролю объектов из одного списка контроля пользователя в другой
//
// Параметры:
//   КудаПереносим           - Справочники.СпискиКонтроля - список контроля, в который переносятся записи
//   ОткудаПереносим         - Справочники.СпискиКонтроля - список контроля, из которого переносятся записи
//   ДанныеОбъектовКонтроля  - Массив из Структура, которые содержат:
//    * ОбъектКонтроля          -  СправочникСсылка.Ошибки,
//                                 СправочникСсылка.ТехническиеПроекты,
//                                 СправочникСсылка.Ветки,
//                                 СправочникСсылка.ЗадачиПроцесса - ссылка на объект контроля
//    * СписокКонтроля          - Справочники.СпискиКонтроля - список контроля
//    * Решение                 - Строка - решение на дату контроля
//    * ДатаКонтроля            - Дата - дата контроля
//    * ДатаУказанияРезультата  - Дата - дата контроля
//    * Результат               - Строка - результат к дате контроля
//    * ОжидаемаяДатаВыполнения - Дата - ожидаемая дата, к которой объект контроля будет выполнен.
//    * Ответственный           - Справочники.Пользователи - ответственный за объект.
//    * ТехническийПроект       - Справочники.ТехническиеПроекты - технический проект объекта контроля.
//    * ИсторическаяЗапись      - Булево - признак того что это историческая запись.
//
// Возвращаемое значение:
//   Структура - содержит:
//    * ВсегоОбъектов           - Число - всего объектов к переносу
//    * Перенесено              - Число - успешно перенесено объектов
//    * СообщенияПользователю   - Массив Из Строка  - сообщения пользователю об ошибках
//
Функция РезультатПереносаОбъектовВДругойСписок(КудаПереносим, ОткудаПереносим, ДанныеОбъектовКонтроля) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ВсегоОбъектов"        , ДанныеОбъектовКонтроля.Количество());
	Результат.Вставить("Перенесено"           , 0);
	Результат.Вставить("СообщенияПользователю", Новый Массив);
	
	Для Каждого ДанныеОбъектаКонтроля Из ДанныеОбъектовКонтроля Цикл
		
		РезультатПереносаОбъекта = РезультатПереносаОбъектаВДругойСписок(КудаПереносим,
		                                                                 ОткудаПереносим, 
		                                                                 ДанныеОбъектаКонтроля.ОбъектКонтроля);
		
		Результат.Перенесено = Результат.Перенесено + 1;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьДатуКонтроляПоОбъектамДляСписка(СписокКонтроля, ДатаСледующегоКонтроля) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбъектыНаКонтроле.СписокКонтроля КАК СписокКонтроля,
	|	ОбъектыНаКонтроле.ОбъектКонтроля КАК ОбъектКонтроля,
	|	ОбъектыНаКонтроле.ДатаКонтроля КАК ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение КАК Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата КАК ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат КАК Результат,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения КАК ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись КАК ИсторическаяЗапись,
	|	ОбъектыНаКонтроле.Ответственный КАК Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект КАК ТехническийПроект
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.СписокКонтроля = &СписокКонтроля
	|	И НЕ ОбъектыНаКонтроле.ИсторическаяЗапись";
	
	Запрос.УстановитьПараметр("СписокКонтроля", СписокКонтроля);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДанныеЗаписи = ОбъектыНаКонтролеКлиентСервер.НовыйДанныеЗаписиКонтроля();
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		ДанныеЗаписи.СледующаяДатаКонтроля = ДатаСледующегоКонтроля;
		
		ЗаписатьДанные(ДанныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеЗаписиТолькоКлючПоКлючуЗаписи(КлючЗаписи)
	
	ДанныеЗаписи = Новый Структура;
	ДанныеЗаписи.Вставить("СписокКонтроля", КлючЗаписи.СписокКонтроля);
	ДанныеЗаписи.Вставить("ОбъектКонтроля", КлючЗаписи.ОбъектКонтроля);
	ДанныеЗаписи.Вставить("ДатаКонтроля",   КлючЗаписи.ДатаКонтроля);
	
	Возврат ДанныеЗаписи;
	
КонецФункции

Функция РезультатПереносаОбъектаВДругойСписок(КудаПереносим, ОткудаПереносим, ОбъектКонтроля)
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно",     Истина);
	Результат.Вставить("ТекстОшибки", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОбъектыНаКонтроле.СписокКонтроля          КАК СписокКонтроля,
	|	ОбъектыНаКонтроле.ОбъектКонтроля          КАК ОбъектКонтроля,
	|	ОбъектыНаКонтроле.ДатаКонтроля            КАК ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение                 КАК Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата  КАК ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат               КАК Результат,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения КАК ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись      КАК ИсторическаяЗапись,
	|	ОбъектыНаКонтроле.Ответственный           КАК Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект       КАК ТехническийПроект
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.ОбъектКонтроля = &ОбъектКонтроля
	|	И ОбъектыНаКонтроле.СписокКонтроля = &ОткудаПереносим
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыНаКонтроле.СписокКонтроля КАК СписокКонтроля,
	|	ОбъектыНаКонтроле.ОбъектКонтроля КАК ОбъектКонтроля,
	|	ОбъектыНаКонтроле.ДатаКонтроля КАК ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение КАК Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата КАК ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат КАК Результат,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения КАК ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись КАК ИсторическаяЗапись,
	|	ОбъектыНаКонтроле.Ответственный КАК Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект КАК ТехническийПроект
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.СписокКонтроля = &ОткудаПереносим
	|	И ОбъектыНаКонтроле.ОбъектКонтроля = &ОбъектКонтроля
	|	И НЕ ОбъектыНаКонтроле.ИсторическаяЗапись
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектыНаКонтроле.СписокКонтроля,
	|	ОбъектыНаКонтроле.ОбъектКонтроля,
	|	ОбъектыНаКонтроле.ДатаКонтроля,
	|	ОбъектыНаКонтроле.Решение,
	|	ОбъектыНаКонтроле.ДатаУказанияРезультата,
	|	ОбъектыНаКонтроле.Результат,
	|	ОбъектыНаКонтроле.ОжидаемаяДатаВыполнения,
	|	ОбъектыНаКонтроле.ИсторическаяЗапись,
	|	ОбъектыНаКонтроле.Ответственный,
	|	ОбъектыНаКонтроле.ТехническийПроект
	|ИЗ
	|	РегистрСведений.ОбъектыНаКонтроле КАК ОбъектыНаКонтроле
	|ГДЕ
	|	ОбъектыНаКонтроле.СписокКонтроля = &КудаПереносим
	|	И ОбъектыНаКонтроле.ОбъектКонтроля = &ОбъектКонтроля
	|	И НЕ ОбъектыНаКонтроле.ИсторическаяЗапись
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКонтроля";
	
	Запрос.УстановитьПараметр("ОбъектКонтроля",  ОбъектКонтроля);
	Запрос.УстановитьПараметр("ОткудаПереносим", ОткудаПереносим);
	Запрос.УстановитьПараметр("КудаПереносим",   КудаПереносим);
	
	Результат = Запрос.ВыполнитьПакет();
	НеИсторическиеЗаписи = Результат[1].Выгрузить();
	ПереносимаяНеИсторическаяЗаписьИзменена = Ложь;
	
	Если НеИсторическиеЗаписи.Количество() = 2 Тогда
		
		ДанныеИзменяемойЗаписи = НеИсторическиеЗаписи[0];
		ДанныеИзменяемойЗаписи.ИсторическаяЗапись = Истина;
		
		Если ДанныеИзменяемойЗаписи.СписокКонтроля = КудаПереносим Тогда
			ЗаписатьДанные(ДанныеИзменяемойЗаписи);
		Иначе 
			ПеренестиЗаписьПоОбъектуКонтроляВДругойСписок(ДанныеИзменяемойЗаписи, КудаПереносим);
			ПереносимаяНеИсторическаяЗаписьИзменена = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПереносимыеЗаписи = Результат[0].Выгрузить();
	Для Каждого ДанныеПереносимойЗаписи Из ПереносимыеЗаписи Цикл
		
		Если Не ДанныеПереносимойЗаписи.ИсторическаяЗапись
			И ПереносимаяНеИсторическаяЗаписьИзменена Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ПеренестиЗаписьПоОбъектуКонтроляВДругойСписок(ДанныеПереносимойЗаписи, КудаПереносим);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПеренестиЗаписьПоОбъектуКонтроляВДругойСписок(ДанныеЗаписи, КудаПереносим)
	
	УдалитьЗапись(ДанныеЗаписи);
	ДанныеЗаписи.СписокКонтроля = КудаПереносим;
	ЗаписатьДанные(ДанныеЗаписи);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли