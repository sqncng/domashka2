#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет и возвращает признак использования объектов проекта-источника в указанном проекте
//
// Параметры:
//  ПроектИсточник - СправочникСсылка.Проекты - Проект, использование объектов которого требуется определить
//  ПроектПриемник - СправочникСсылка.Проекты - Проект, использование в котором требуется определить
//
// Возвращаемое значение:
//  ПризнакИспользования - Тип - Булево. ПРизнак, определяющтй, использованы объекты проекта-источника, или нет.
//
Функция ОбъектыПроектаИспользованы(ПроектИсточник, ПроектПриемник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИспользованиеОбъектов.ПравилоИспользования КАК ПравилоИспользования
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Источник.Владелец = &ПроектИсточник
	|	И (ИспользованиеОбъектов.Приемник.Владелец = &ПроектПриемник
	|			ИЛИ ИспользованиеОбъектов.Проект = &ПроектПриемник)"
	;

	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ПроектПриемник", ПроектПриемник);
	Запрос.УстановитьПараметр("ПроектИсточник", ПроектИсточник);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Получает и возвращает информацию об использовании указанным объектом источника из другого проекта.
//
// Параметры:
//  ОбъектПриемник - СправочникСсылка.ФункцииСистемы, СправочникСсылка.ПрофилиПользователей, СпоавочникСсылка.ВидыДоступа - Объект, для которого требуется получить информацию об использовании источника.
//
// Возвращаемое значение:
//  Структура - информация об использовании источника:
//    * Источник - СправочникСсылка.ФункцииСистемы, СправочникСсылка.ПрофилиПользователей, СпоавочникСсылка.ВидыДоступа - 
//                 используемый объект-источник;
//    * ПравилоИспользования - ПеречислениеСсылка.ПравилаИспользованияОбъектов - правило использования объекта.
//
Функция ДанныеОбИспользованииОбъектаИсточника(ОбъектПриемник) Экспорт
	
	Информация = Новый Структура;
	Информация.Вставить("Источник", Неопределено);
	Информация.Вставить("НаименованиеИсточника", "");
	Информация.Вставить("ПравилоИспользования", Перечисления.ПравилаИспользованияОбъектов.ПустаяСсылка());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользованиеОбъектов.Источник КАК Источник,
	|	ИспользованиеОбъектов.Источник.Наименование КАК НаименованиеИсточника,
	|	ИспользованиеОбъектов.ПравилоИспользования КАК ПравилоИспользования
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Приемник = &ОбъектПриемник"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбъектПриемник", ОбъектПриемник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Информация, Выборка);
	КонецЕсли;
	
	Возврат Информация;
	
КонецФункции

// Выполняет запись информации об использовании объекта-источника приемником
//
// Параметры:
//  Приемник - СправочникСсылка.ФункцииСистемы, СправочникСсылка.ПрофилиПользователей, СпоавочникСсылка.ВидыДоступа - Объект, для которого требуется записать информацию об использовании источника.
//  Источник - СправочникСсылка.ФункцииСистемы, СправочникСсылка.ПрофилиПользователей, СпоавочникСсылка.ВидыДоступа - Объект, информацию об использовании которого требуется записать.
//  ПравилоИспользования - ПеречислениеСсылка.ПравилаИспользованияОбъектов - Правило использования источника приемником.
//
Процедура ЗаписатьИнформациюОбИспользованииОбъектаПриемником(Приемник, Источник, ПравилоИспользования) Экспорт

	ДанныеОбИспользовании = ДанныеОбИспользованииОбъектаИсточника(Приемник);
	
	СтарыйИсточник = ДанныеОбИспользовании.Источник;
	СтароеПравилоИспользования = ДанныеОбИспользовании.ПравилоИспользования;
	
	ПроектПриемник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Приемник, "Владелец");
	
	Если ЗначениеЗаполнено(СтарыйИсточник) Тогда
		
		Если Не ЗначениеЗаполнено(Источник) Тогда
			// Если источник перестал использоваться, формируется запись об этом для старого источника,
			// а для приемника запись удаляется
			
			НаборЗаписей = РегистрыСведений.ИспользованиеОбъектов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Приемник.Установить(Приемник, Истина);
			НаборЗаписей.Записать();
			
			МенеджерЗаписи = РегистрыСведений.ИспользованиеОбъектов.СоздатьМенеджерЗаписи();
			
			МенеджерЗаписи.Источник = СтарыйИсточник;
			МенеджерЗаписи.Приемник = Неопределено;
			МенеджерЗаписи.Проект = ПроектПриемник;
			МенеджерЗаписи.ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.НеИспользуется;
			
			МенеджерЗаписи.Записать();
			
		Иначе
			Если СтарыйИсточник = Источник Тогда
				
				Если СтароеПравилоИспользования = ПравилоИспользования Тогда
					// Если ничего не менялось- никаких действий не требуется
					Возврат;
				Иначе
					// При изменении правила перезаписывается запись с новым правилом
					МенеджерЗаписи = РегистрыСведений.ИспользованиеОбъектов.СоздатьМенеджерЗаписи();
					
					МенеджерЗаписи.Источник = Источник;
					МенеджерЗаписи.Приемник = Приемник;
					МенеджерЗаписи.Проект = Справочники.Проекты.ПустаяСсылка();
					МенеджерЗаписи.ПравилоИспользования = ПравилоИспользования;
					МенеджерЗаписи.ДатаОбновленияПриемникаИзИсточника = ТекущаяДата();
					
					СтруктураОписаний = ОписаниеОбъектов(Приемник, Источник, ПроектПриемник);
					МенеджерЗаписи.ХранилищеОписанияИсточника = Новый ХранилищеЗначения(СтруктураОписаний.Описание);
					МенеджерЗаписи.ХранилищеОписанияПриемника = Новый ХранилищеЗначения(СтруктураОписаний.ОписаниеПриемника);
					
					МенеджерЗаписи.Записать();
				КонецЕсли;
				
			Иначе
				// Если сменился источник, для старого источника формируется запись о том, что
				// он не используется в проекте-приемнике.
				
				// Для нового источника формируется запись для приемника.
				// При этом выполняется контроль, не является ли источник источником для более чем одного приемника
				
				ДругойПриемник = АльтернативныйПриемникДляИсточника(Источник, Приемник, ПроектПриемник);
				
				Если ЗначениеЗаполнено(ДругойПриемник) Тогда
					
					ТекстСообщения = НСтр("ru='Объект %Источник% уже является источником для объекта %ДругойПриемник%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Источник%", Источник);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДругойПриемник%", ДругойПриемник);
					
					ВызватьИсключение(ТекстСОобщения);
					
				КонецЕсли;
				
				МенеджерЗаписи = РегистрыСведений.ИспользованиеОбъектов.СоздатьМенеджерЗаписи();
				
				МенеджерЗаписи.Источник = СтарыйИсточник;
				МенеджерЗаписи.Приемник = Неопределено;
				МенеджерЗаписи.Проект = ПроектПриемник;
				МенеджерЗаписи.ПравилоИспользования = Перечисления.ПравилаИспользованияОбъектов.НеИспользуется;
				
				МенеджерЗаписи.Записать();
				
				НаборЗаписей = РегистрыСведений.ИспользованиеОбъектов.СоздатьНаборЗаписей();
				
				НаборЗаписей.Отбор.Приемник.Установить(Приемник, Истина);
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Источник = Источник;
				НоваяЗапись.Приемник = Приемник;
				НоваяЗапись.ПравилоИспользования = ПравилоИспользования;
				НоваяЗапись.ДатаОбновленияПриемникаИзИсточника = ТекущаяДата();
				
				СтруктураОписаний = ОписаниеОбъектов(Приемник, Источник, ПроектПриемник);
				НоваяЗапись.ХранилищеОписанияИсточника = Новый ХранилищеЗначения(СтруктураОписаний.Описание);
				НоваяЗапись.ХранилищеОписанияПриемника = Новый ХранилищеЗначения(СтруктураОписаний.ОписаниеПриемника);
				
				НаборЗаписей.Записать();
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		// Если старого источника нет, т.е.использование источника выполняется впервые
		
		НаборЗаписей = РегистрыСведений.ИспользованиеОбъектов.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Приемник = Приемник;
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Источник = Источник;
		НоваяЗапись.Приемник = Приемник;
		НоваяЗапись.ПравилоИспользования = ПравилоИспользования;
		НоваяЗапись.ДатаОбновленияПриемникаИзИсточника = ТекущаяДата();
		
		СтруктураОписаний = ОписаниеОбъектов(Приемник, Источник, ПроектПриемник);
		НоваяЗапись.ХранилищеОписанияИсточника = Новый ХранилищеЗначения(СтруктураОписаний.Описание);
		НоваяЗапись.ХранилищеОписанияПриемника = Новый ХранилищеЗначения(СтруктураОписаний.ОписаниеПриемника);
		
		НаборЗаписей.Записать();
				
	КонецЕсли;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	 ВЫБОР КОГДА Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка) ТОГДА ЗначениеРазрешено(Приемник.Владелец)
	|	ИНАЧЕ ЗначениеРазрешено(Проект)
	|	КОНЕЦ ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АльтернативныйПриемникДляИсточника(Источник, Приемник, ПроектПриемник)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользованиеОбъектов.Приемник КАК Приемник
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Приемник.Владелец = &ПроектПриемник
	|	И ИспользованиеОбъектов.Источник = &Источник
	|	И ИспользованиеОбъектов.Приемник <> &Приемник"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Приемник", Приемник);
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("ПроектПриемник", ПроектПриемник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Приемник;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ОписаниеОбъектов(Приемник, Источник, ПроектПриемник)
	
	ДанныеСоответствия = ТекущееСоответствиеОбъектов(Источник, Приемник, ПроектПриемник);
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Источник);
	
	ИмяОбъекта = Приемник.Метаданные().ПолноеИмя();
	
	ПечатныеФормы = ОписаниеОбъектов.СформироватьОписаниеОбъекта(Источник, Истина, ДанныеСоответствия);
	
	Возврат ПечатныеФормы.Получить(Источник);
	
КонецФункции

Функция ТекущееСоответствиеОбъектов(Источник, Приемник, ПроектПриемник)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользованиеОбъектов.Источник КАК Источник,
	|	ИспользованиеОбъектов.Приемник КАК Приемник
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Источник <> &Источник
	|	И ИспользованиеОбъектов.Приемник.Владелец = &ПроектПриемник
	|	И ИспользованиеОбъектов.Источник ССЫЛКА Справочник.ВидыДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользованиеОбъектов.Источник КАК Источник,
	|	ИспользованиеОбъектов.Приемник КАК Приемник
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Источник <> &Источник
	|	И ИспользованиеОбъектов.Приемник.Владелец = &ПроектПриемник
	|	И ИспользованиеОбъектов.Источник ССЫЛКА Справочник.ПрофилиПользователей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользованиеОбъектов.Источник КАК Источник,
	|	ИспользованиеОбъектов.Приемник КАК Приемник
	|ИЗ
	|	РегистрСведений.ИспользованиеОбъектов КАК ИспользованиеОбъектов
	|ГДЕ
	|	ИспользованиеОбъектов.Источник <> &Источник
	|	И ИспользованиеОбъектов.Приемник.Владелец = &ПроектПриемник
	|	И ИспользованиеОбъектов.Источник ССЫЛКА Справочник.ФункцииСистемы"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("ПроектПриемник", ПроектПриемник);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СоответствиеВидовДоступа = МассивРезультатов[0].Выгрузить();
	СоответствиеПрофилей = МассивРезультатов[1].Выгрузить();
	СоответствиеФункций = МассивРезультатов[2].Выгрузить();
	
	Если ТипЗнч(Источник) = Тип("СправочникСсылка.ВидыДоступа") Тогда
		НоваяСтрока  = СоответствиеВидовДоступа.Добавить();
	ИначеЕсли ТипЗнч(Источник) = Тип("СправочникСсылка.ПрофилиПользователей") Тогда
		НоваяСтрока  = СоответствиеПрофилей.Добавить();
	ИначеЕсли ТипЗнч(Источник) = Тип("СправочникСсылка.ФункцииСистемы") Тогда
		НоваяСтрока  = СоответствиеФункций.Добавить();
	КонецЕсли;
	
	НоваяСтрока.Источник = Источник;
	НоваяСтрока.Приемник = Приемник;
	
	ДанныеСоответствия = Новый Структура;
	ДанныеСоответствия.Вставить("ВидыДоступа", СоответствиеВидовДоступа);
	ДанныеСоответствия.Вставить("Профили", СоответствиеПрофилей);
	ДанныеСоответствия.Вставить("Функции", СоответствиеФункций);
	
	Возврат ДанныеСоответствия;
	
КонецФункции

#КонецОбласти

#КонецЕсли