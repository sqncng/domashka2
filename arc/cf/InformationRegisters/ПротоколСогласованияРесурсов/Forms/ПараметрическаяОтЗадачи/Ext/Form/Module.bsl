
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЦветГиперссылки = ЦветаСтиля.ЦветГиперссылки;
	
	ОбработатьПереданныеПараметры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы
		И Модифицированность
		И Не ВыполняетсяЗакрытие Тогда
		
		Отказ = Истина;
		
		ОповещениеПослеОтветаНаВопрос = Новый ОписаниеОповещения("ОтветНаВопросЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		
		ПоказатьВопрос(ОповещениеПослеОтветаНаВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПланПриИзменении(Элемент)
	
	ИтогиПротокола = ПланСогласованоПоПротоколу(ЭтотОбъект);
	Изменение = План - ИтогиПротокола.План;
	Если Изменение <> 0 Тогда
		ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию"), Исполнитель);
	КонецЕсли;
	
	ОтразитьИзменениеЗапланированоПоПользователямПриИзмененииПлана(Изменение);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласованоПриИзменении(Элемент)
	
	ИтогиПротокола = ПланСогласованоПоПротоколу(ЭтотОбъект);
	Изменение = Согласовано - ИтогиПротокола.Согласовано;
	Если Изменение <> 0 Тогда
		ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.Согласовано"), Исполнитель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиЗапланированоПоПользователям

&НаКлиенте
Процедура ЗапланированоПоПользователямКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные =  Элементы.ЗапланированоПоПользователям.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПланПоПользователю                    = ПланПоПользователюПоПротоколу(ЭтотОбъект, ТекущиеДанные.Пользователь);
	КоличествоЗапланированоПоПользователю = КоличествоЗапланированоПоПользователю(ЭтотОбъект, ТекущиеДанные.Пользователь);
	Изменение = КоличествоЗапланированоПоПользователю - ПланПоПользователю;
	
	Если Изменение <> 0 Тогда
		ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию"), ТекущиеДанные.Пользователь);
	КонецЕсли;
	
	ПересчитатьПланСогласовано(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланированоПоПользователямПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ЗапланированоПоПользователям.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Изменение = - ТекущиеДанные.Количество;
	Если Изменение = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию"), ТекущиеДанные.Пользователь);
	ЗапланированоПоПользователям.Удалить(ТекущиеДанные);
	
	Модифицированность = Истина;
	
	ПересчитатьПланСогласовано(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланированоПоПользователямПользовательПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЗапланированоПоПользователям.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриИзмененииПользователяТаблицаЗапланировано(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПользователяТаблицаЗапланировано(ТекущиеДанные)
	
	ПланПоПользователю                    = ПланПоПользователюПоПротоколу(ЭтотОбъект, ТекущиеДанные.Пользователь);
	КоличествоЗапланированоПоПользователю = КоличествоЗапланированоПоПользователю(ЭтотОбъект, ТекущиеДанные.Пользователь);
	Изменение = КоличествоЗапланированоПоПользователю - ПланПоПользователю;
	
	Если Изменение <> 0 Тогда
		ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию"), ТекущиеДанные.Пользователь);
	КонецЕсли;

	Если  ТекущиеДанные.ТекущийПользователь <> ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка") Тогда
		ПланПоПользователю                    = ПланПоПользователюПоПротоколу(ЭтотОбъект, ТекущиеДанные.ТекущийПользователь);
		КоличествоЗапланированоПоПользователю = КоличествоЗапланированоПоПользователю(ЭтотОбъект, ТекущиеДанные.ТекущийПользователь);
		Изменение = КоличествоЗапланированоПоПользователю - ПланПоПользователю;
		
		Если Изменение <> 0 Тогда
			ИзменитьТекущиеДанныеПротокола(Изменение, ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию"), ТекущиеДанные.ТекущийПользователь);
		КонецЕсли;
	КонецЕсли;
	
	ТекущиеДанные.ТекущийПользователь = ТекущиеДанные.Пользователь;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиИзмененныеДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
#Область ОтрицательноеКоличество
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПротоколСогласованияКоличество.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПротоколСогласования.Количество");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗонаЗадачиКрасный);
	
#КонецОбласти

#Область ТекущееРедактирование

	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПротоколСогласованияПериод.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПротоколСогласования.ЭтоТекущееРедактирование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПротоколСогласованияДатаТекст.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПротоколСогласования.ЭтоТекущееРедактирование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);

#КонецОбласти

КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	ВыполняетсяСогласование       = Параметры.ВыполняетсяСогласование;
	ВидРесурса                    = Параметры.ВидРесурса;
	Согласующие                   = Параметры.Согласующие;
	ВыполняетсяСогласование       = Параметры.ВыполняетсяСогласование;
	Задача                        = Параметры.Задача;
	ТекущийПользователь           = Пользователи.ТекущийПользователь();
	СогласованоИзРодительской     = Параметры.СогласованоИзРодительской;
	ДоступноВРодительской         = Параметры.ДоступноВРодительской;
	ИсполнительРодительскойЗадачи = Параметры.ИсполнительРодительскойЗадачи;
	СогласованоПредыдущее         = Параметры.СогласованоПредыдущее;
	Исполнитель                   = Параметры.Исполнитель;
	ВариантОтображения            = Параметры.ВариантОтображения;
	
	Если ТипЗнч(Параметры.ЗапланированоПоПользователям) = Тип("Массив") Тогда
		
		Для Каждого ДанныеПланированияПоПользователю Из Параметры.ЗапланированоПоПользователям Цикл
			
			НоваяСтрока = ЗапланированоПоПользователям.Добавить();
			НоваяСтрока.Пользователь        = ДанныеПланированияПоПользователю.Пользователь;
			НоваяСтрока.Количество          = ДанныеПланированияПоПользователю.Количество;
			НоваяСтрока.ТекущийПользователь = ДанныеПланированияПоПользователю.Пользователь;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресПротоколаВоВременномХранилище) Тогда
		
		Если ВыполняетсяСогласование Тогда
			
			ПротоколСогласования.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресПротоколаВоВременномХранилище)); 
			
		Иначе
			
			ТаблицаСогласования = ПолучитьИзВременногоХранилища(Параметры.АдресПротоколаВоВременномХранилище);
			
			Для Каждого СтрокаТаблицы Из ТаблицаСогласования Цикл
				
				Если СтрокаТаблицы.СтатусСогласования = Перечисления.СтатусыСогласованияРесурса.КСогласованию Тогда
					
					СтрокаПротокола = ПротоколСогласования.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПротокола, СтрокаТаблицы);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВариантОтображения = "ПротоколСогласования" Тогда
		
		Элементы.ДекорацияИтого.Видимость                    = Ложь;
		Элементы.СтраницыВариантыОтображения.ТекущаяСтраница = Элементы.СтраницаПротоколСогласования;
		
		Если ВыполняетсяСогласование Тогда
	
			Если Согласующие.НайтиПоЗначению(ТекущийПользователь) <> Неопределено Тогда
				ЕстьПравоСогласованияРесурса = Истина;
			КонецЕсли;
			
			Если ТекущийПользователь = ИсполнительРодительскойЗадачи 
				И (ДоступноВРодительской > 0 
				Или СогласованоИзРодительской > 0) Тогда
				
				ЕстьПравоСогласованияИзРодительской = Истина;
				
			КонецЕсли;
			
			Если ЕстьПравоСогласованияИзРодительской
				И Не ЕстьПравоСогласованияРесурса Тогда
				
				Элементы.Согласовано.МаксимальноеЗначение = СогласованоПредыдущее + СогласованоИзРодительской + ДоступноВРодительской;
				
			КонецЕсли;
			
			Заголовок = НСтр("ru = 'История планирования и согласования'");
			ОбновитьИнформациюДоступно(ЭтотОбъект);
		
		Иначе
			
			Элементы.ДекорацияДоступноИзРодительской.Видимость        = Ложь;
			Элементы.Согласовано.Видимость                            = Ложь;
			Элементы.ПротоколСогласованияСтатусСогласования.Видимость = Ложь;
			Заголовок = НСтр("ru = 'История планирования'");
			
		КонецЕсли;
		
		ДанныеПланированияПоПользователям = ДанныеПланированияПоПользователям(ЭтотОбъект);
		 
		Элементы.ПротоколСогласованияПользователь.Видимость = Не ДанныеПланированияПоПользователям.ТолькоПоИсполнителюВПротоколе;
		Элементы.План.ТолькоПросмотр                        = Не ДанныеПланированияПоПользователям.ТолькоПоИсполнителю;
		
	ИначеЕсли ВариантОтображения = "ПланированиеПоПользователям" Тогда
		
		Элементы.ПланСогласовано.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Планирование по исполнителям'");
		Элементы.СтраницыВариантыОтображения.ТекущаяСтраница = Элементы.СтраницаПланированиеПоПользователям;
		
	КонецЕсли;
	
	ЗаполнитьКолонкуПериодТекст();
	ПересчитатьПланСогласовано(ЭтотОбъект);
	СформироватьЗаголовокФормы();
	УправлениеДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовокФормы()
	
	ПредставлениеВидаРесурса =  ЗадачиПроцессовПовтИсп.ПредставлениеВидаРесурса(Параметры.ВидРесурса);

	ШаблонНазначения = НСтр("ru = 'Для задачи ""%1"", по ресурсу ""%2""'");
	СтрокаНазначение = СтрШаблон(ШаблонНазначения, 
	                             ?(ЗначениеЗаполнено(Параметры.Задача), Параметры.Задача, НСтр("ru = 'Новая'")),
	                             ПредставлениеВидаРесурса);
	
	Элементы.ПредставлениеНазначения.Заголовок = ЗадачиПроцессов.ФорматированнаяСтрокаСГиперссылкой(СтрокаНазначение,,Ложь, ЦветГиперссылки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностью(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Согласовано.ТолькоПросмотр = Не Форма.ЕстьПравоСогласованияРесурса
	                                      И Не Форма.ЕстьПравоСогласованияИзРодительской;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИнформациюДоступно(Форма)
	
	ИнформацияДоступно = "";
	Если Форма.ДоступноВРодительской > 0 Тогда
		ИнформацияДоступно = СтрШаблон(НСтр("ru = 'Доступно в родительской: %1'"), Форма.ДоступноВРодительской);
	КонецЕсли;
	
	Форма.Элементы.ДекорацияДоступноИзРодительской.Заголовок = ИнформацияДоступно;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПланСогласованоПоПротоколу(Форма)
	
	План        = 0;
	Согласовано = 0;
	
	Для Каждого СтрокаПротокола Из Форма.ПротоколСогласования Цикл
		
		Если СтрокаПротокола.СтатусСогласования = ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию") Тогда
			План = План + СтрокаПротокола.Количество;
		КонецЕсли;
		
		Если СтрокаПротокола.СтатусСогласования = ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.Согласовано") Тогда
			Согласовано = Согласовано + СтрокаПротокола.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("План",        План);
	СтруктураВозврата.Вставить("Согласовано", Согласовано);
	
	Возврат СтруктураВозврата;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция ПланПоПользователюПоПротоколу(Форма, Пользователь)
	
	План = 0;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Пользователь", Пользователь);
	ПараметрыПоиска.Вставить("СтатусСогласования", ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию")); 
	
	НайденныеСтроки = Форма.ПротоколСогласования.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		
		План = План + НайденнаяСтрока.Количество;
		
	КонецЦикла;
	
	Возврат План;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция КоличествоЗапланированоПоПользователю(Форма, Пользователь)
	
	Количество = 0;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Пользователь", Пользователь);
	
	НайденныеСтроки = Форма.ЗапланированоПоПользователям.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		
		Количество = Количество + НайденнаяСтрока.Количество;
		
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьТекущиеДанныеПротокола(Изменение, СтатусСогласования, Пользователь)
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("ЭтоТекущееРедактирование", Истина);
	ПараметрыПоиска.Вставить("СтатусСогласования", СтатусСогласования);
	ПараметрыПоиска.Вставить("Пользователь",       Пользователь);
	
	НайденныеСтроки = ПротоколСогласования.НайтиСтроки(ПараметрыПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		ИзменяемаяСтрока = ПротоколСогласования.Добавить();
		ИзменяемаяСтрока.ВидРесурса               = ВидРесурса;
		ИзменяемаяСтрока.Количество               = 0;
		ИзменяемаяСтрока.Пользователь             = Пользователь;
		ИзменяемаяСтрока.СтатусСогласования       = СтатусСогласования;
		ИзменяемаяСтрока.Автор                    = ТекущийПользователь;
		ИзменяемаяСтрока.ЭтоТекущееРедактирование = Истина;
		ИзменяемаяСтрока.ПериодТекст              = НСтр("ru = 'Сейчас'");
	Иначе
		ИзменяемаяСтрока = НайденныеСтроки[0];
	КонецЕсли;
	
	КСогласованию = План - Согласовано;
	
	Если ЕстьПравоСогласованияИзРодительской
		И СтатусСогласования = ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.Согласовано")
		И (ДоступноВРодительской > 0
		Или СогласованоИзРодительской > 0) Тогда
		
		ВсегоСогласованиеИзРодительской = ДоступноВРодительской + СогласованоИзРодительской;
		
		ДоступноВРодительской     = ДоступноВРодительской - Изменение;
		СогласованоИзРодительской = СогласованоИзРодительской + Изменение;

		Если ДоступноВРодительской < 0 Тогда
			ДоступноВРодительской = 0;
			СогласованоИзРодительской = ВсегоСогласованиеИзРодительской;
		ИначеЕсли ДоступноВРодительской > ВсегоСогласованиеИзРодительской Тогда
			ДоступноВРодительской     = ВсегоСогласованиеИзРодительской;
			СогласованоИзРодительской = 0;
		КонецЕсли;
		
		Если КСогласованию < 0 Тогда
			
			КУменьшениюСогласовано = Мин(- КСогласованию, СогласованоИзРодительской);
			
			Если КУменьшениюСогласовано > 0 Тогда
			
				Согласовано               = Согласовано - КУменьшениюСогласовано;
				СогласованоИзРодительской = СогласованоИзРодительской - КУменьшениюСогласовано;
				ДоступноВРодительской     = ДоступноВРодительской + КУменьшениюСогласовано;
				Изменение                 = Изменение - КУменьшениюСогласовано;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтатусСогласования = ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.КСогласованию") Тогда
		
		Если КСогласованию < 0 
			И СогласованоИзРодительской > 0 Тогда
			
			КУменьшениюСогласовано    = Мин(- КСогласованию, СогласованоИзРодительской);
			
			Если КУменьшениюСогласовано > 0 Тогда
				
				Согласовано               = Согласовано - КУменьшениюСогласовано;
				СогласованоИзРодительской = СогласованоИзРодительской - КУменьшениюСогласовано;
				ДоступноВРодительской     = ДоступноВРодительской + КУменьшениюСогласовано;
				
				ПараметрыПоиска = Новый Структура;
				ПараметрыПоиска.Вставить("ЭтоТекущееРедактирование", Истина);
				ПараметрыПоиска.Вставить("СтатусСогласования", ПредопределенноеЗначение("Перечисление.СтатусыСогласованияРесурса.Согласовано"));
				
				НайденныеСтроки = ПротоколСогласования.НайтиСтроки(ПараметрыПоиска);
				
				Если НайденныеСтроки.Количество() > 0 Тогда
					НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество - КУменьшениюСогласовано;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменяемаяСтрока.Количество = ИзменяемаяСтрока.Количество + Изменение;
	
	Если ИзменяемаяСтрока.Количество = 0 Тогда 
		ПротоколСогласования.Удалить(ИзменяемаяСтрока);
	КонецЕсли;
	
	ОбновитьИнформациюДоступно(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтразитьИзменениеЗапланированоПоПользователямПриИзмененииПлана(Изменение)

	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Пользователь", Исполнитель);
	
	НайденныеСтроки = ЗапланированоПоПользователям.НайтиСтроки(ПараметрыПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		ИзменяемаяСтрока = ЗапланированоПоПользователям.Добавить();
		ИзменяемаяСтрока.Пользователь = Исполнитель;
		
	Иначе
		
		ИзменяемаяСтрока = НайденныеСтроки[0];
		
	КонецЕсли;
	
	ИзменяемаяСтрока.Количество = ИзменяемаяСтрока.Количество + Изменение;
	
	Если ИзменяемаяСтрока.Количество = 0 Тогда 
		ЗапланированоПоПользователям.Удалить(ИзменяемаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкуПериодТекст()

	Для Каждого СтрокаПротокола Из ПротоколСогласования Цикл
		
		Если СтрокаПротокола.ЭтоТекущееРедактирование Тогда
			СтрокаПротокола.ПериодТекст = НСтр("ru = 'Сейчас'");
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ПодготовленнаяСтруктураВозврата()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Задача",                       Задача);
	СтруктураВозврата.Вставить("ВидРесурса",                   ВидРесурса);
	СтруктураВозврата.Вставить("План",                         План);
	СтруктураВозврата.Вставить("Согласовано",                  Согласовано);
	СтруктураВозврата.Вставить("ДоступноВРодительской",        ДоступноВРодительской);
	СтруктураВозврата.Вставить("СогласованоИзРодительской",    СогласованоИзРодительской);
	СтруктураВозврата.Вставить("ЗапланированоПоПользователям", ЗапланированоПоПользователямКВозврату(ЭтотОбъект));
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗапланированоПоПользователямКВозврату(Форма)
	
	ЗапланированоПоПользователямКВозврату = Новый Соответствие; 
	
	Для Каждого СтрокаТаблицы Из Форма.ЗапланированоПоПользователям Цикл
		
		КоличествоПоПользователю = ЗапланированоПоПользователямКВозврату.Получить(СтрокаТаблицы.Пользователь);
		Если КоличествоПоПользователю = Неопределено Тогда
			ЗапланированоПоПользователямКВозврату.Вставить(СтрокаТаблицы.Пользователь, СтрокаТаблицы.Количество);
		Иначе
			ЗапланированоПоПользователямКВозврату.Вставить(СтрокаТаблицы.Пользователь, КоличествоПоПользователю + СтрокаТаблицы.Количество);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗапланированоПоПользователямКВозврату;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеПланированияПоПользователям(Форма)
	
	ДанныеПланированияПоПользователям = Новый Структура;
	ДанныеПланированияПоПользователям.Вставить("ТолькоПоИсполнителю",           Истина);
	ДанныеПланированияПоПользователям.Вставить("КоличествоИсполнителей",        0);
	ДанныеПланированияПоПользователям.Вставить("ТолькоПоИсполнителюВПротоколе", Истина);
	
	ДанныеЗапланированоПоПользователям = ЗапланированоПоПользователямКВозврату(Форма);
	
	ДанныеПланированияПоПользователям.КоличествоИсполнителей = ДанныеЗапланированоПоПользователям.Количество();
	
	Для Каждого КлючИЗначение Из ДанныеЗапланированоПоПользователям Цикл
		
		Если КлючИЗначение.Ключ <> Форма.Исполнитель Тогда
			ДанныеПланированияПоПользователям.ТолькоПоИсполнителю = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицыПротокола Из Форма.ПротоколСогласования Цикл
		
		Если СтрокаТаблицыПротокола.Пользователь <> Форма.Исполнитель Тогда
			ДанныеПланированияПоПользователям.ТолькоПоИсполнителюВПротоколе = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеПланированияПоПользователям;
	
КонецФункции

&НаКлиенте
Процедура ОтветНаВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт

	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		ПеренестиИзмененныеДанные();
		
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		
		ВыполняетсяЗакрытие = Истина;
		Закрыть(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененныеДанные()

	ВыполняетсяЗакрытие = Истина;
	
	Если Модифицированность Тогда
		Закрыть(ПодготовленнаяСтруктураВозврата());
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьПланСогласовано(Форма)
	
	ДанныеПересчета = ПланСогласованоПоПротоколу(Форма);
	Форма.План        = ДанныеПересчета.План;
	Форма.Согласовано = ДанныеПересчета.Согласовано;
	
	СформироватьИтого(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьИтого(Форма)
	
	ТекстИтого = СтрШаблон(Нстр("ru = 'Итого: %1'"), Строка(Форма.План));
	Форма.Элементы.ДекорацияИтого.Заголовок = Новый ФорматированнаяСтрока(ТекстИтого,Новый Шрифт(,,Истина) ,Форма.ЦветГиперссылки); 
	
КонецПроцедуры

 #КонецОбласти
