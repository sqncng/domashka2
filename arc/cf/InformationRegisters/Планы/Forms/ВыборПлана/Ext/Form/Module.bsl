

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработатьПереданныеПараметры();
	
	УстановитьУсловноеОформление();
	ОбработатьПереданныеПараметры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборПлана();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработатьВыборПлана();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПланы(Команда)
	
	ДобавитьПланыНаСервере(ВидПлана);
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Условное оформление динамического списка "Список"
	СписокУсловноеОформление = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();
	
#Область Статус
	
	// Выделение цветом состояния "Не действует"
	Элемент = СписокУсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Выделение цветом текущего плана.'");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ИдентификаторПлана");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ИдентификаторТекущегоПлана;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыйДокумент);
	
#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, 
	                                                                        "Зафиксирован", 
	                                                                        Параметры.Зафиксирован,,,
	                                                                        Истина, 
	                                                                        РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	Список.Порядок.Элементы.Очистить();
	НовыйПорядок = Список.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	
	НовыйПорядок.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
	НовыйПорядок.Поле = Новый ПолеКомпоновкиДанных("НачалоПериода");
	НовыйПорядок.Использование = Истина;
	
	Если Параметры.Зафиксирован Тогда
		НовыйПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
	Иначе
		НовыйПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВидПлана) Тогда
		
		ВидПлана = Параметры.ВидПлана;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, 
		                                                                        "ВидПлана", 
		                                                                        Параметры.ВидПлана,,,
		                                                                        Истина, 
		                                                                        РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	Иначе
		Элементы.СписокВидПлана.Видимость = Истина;
	КонецЕсли;
	
	ИдентификаторТекущегоПлана = Параметры.ИдентификаторТекущегоПлана;
	
	Элементы.СписокДобавитьПланы.Видимость = Не Параметры.Зафиксирован
	                                         И ЗначениеЗаполнено(ВидПлана);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборПлана()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПлана = Новый Структура;
	ДанныеПлана.Вставить("ИдентификаторПлана",ТекущиеДанные.ИдентификаторПлана);
	ДанныеПлана.Вставить("НачалоПериода",     ТекущиеДанные.НачалоПериода);
	ДанныеПлана.Вставить("КонецПериода",      ТекущиеДанные.КонецПериода);
	
	Закрыть(ДанныеПлана);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьПланыНаСервере(ВидПлана)
	
	Справочники.ВидыПланов.ДобавитьПланы(ВидПлана, 2);
	
КонецПроцедуры

#КонецОбласти