#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет запись в регистр
//
// Параметры:
//  ДанныеЗаписи  - Структура - - содержит:
//   * Задача       - СправочникСсылка.ЗадачиПроцессов;
//   * Пользователь - СправочникСсылка.Пользователи
//   * ВидРесурса   - СправочникСсылка.ВидыСогласуемыхРесурсов
//   * Количество   - Число
//
Процедура ЗаписатьДанные(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задача.Установить(ДанныеЗаписи.Задача);
	НаборЗаписей.Отбор.Пользователь.Установить(ДанныеЗаписи.Пользователь);
	НаборЗаписей.Отбор.ВидРесурса.Установить(ДанныеЗаписи.ВидРесурса);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		
		ЗаписьНабора = НаборЗаписей.Добавить();
		
	Иначе
		
		ЗаписьНабора = НаборЗаписей[0];
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьНабора, ДанныеЗаписи);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Удаляет запись плана
//
// Параметры:
//  ДанныеЗаписи  - Структура - - содержит:
//   * ИдентификаторПлана - Число
//   * Сотрудник          - СправочникСсылка.Пользователи
//   * Работа             - СправочникСсылка.ЗадачиПроцессов, СправочникСсылка.ТехническиеПроекты, СправочникСсылка.Ошибки, СправочникСсылка.ВидыДеятельности
//   * Цель               - Строка
//   * Комментарий        - Строка
//
Процедура УдалитьЗаписьПлана(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задача.Установить(ДанныеЗаписи.Задача);
	НаборЗаписей.Отбор.Пользователь.Установить(ДанныеЗаписи.Пользователь);
	НаборЗаписей.Отбор.ВидРесурса.Установить(ДанныеЗаписи.ВидРесурса);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Выполняет запись в регистр по задаче и таблице данных задачи
//
// Параметры:
//  ДанныеЗаписи  - Структура - - содержит:
//   * Задача       - СправочникСсылка.ЗадачиПроцессов;
//   * ТаблицаДанных - ТаблицаЗначений, содержит:
//      * ВидРесурса   - СправочникСсылка.ВидыСогласуемыхРесурсов
//      * Пользователь - СправочникСсылка.Пользователи
//      * Количество   - Число
//
Процедура ВыполнитьЗаписьВРегистрПоТаблице(Задача, ТаблицаДанных, ВидРесурса = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задача.Установить(Задача);
	Если ВидРесурса <> Неопределено Тогда
		НаборЗаписей.Отбор.ВидРесурса.Установить(ВидРесурса);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		Если СтрокаТаблицы.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаписьНабора.Задача = Задача;
		ЗаписьНабора.Пользователь = СтрокаТаблицы.Пользователь;
		ЗаписьНабора.ВидРесурса   = СтрокаТаблицы.ВидРесурса;
		ЗаписьНабора.Количество   = СтрокаТаблицы.Количество;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура РассчитатьДанныеПоМассивуЗадач(МассивЗадачДляРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПротоколСогласованияРесурсов.Задача КАК Задача,
	|	ПротоколСогласованияРесурсов.Пользователь КАК Пользователь,
	|	ПротоколСогласованияРесурсов.ВидРесурса КАК ВидРесурса,
	|	СУММА(ПротоколСогласованияРесурсов.Количество) КАК Количество
	|ИЗ
	|	РегистрСведений.ПротоколСогласованияРесурсов КАК ПротоколСогласованияРесурсов
	|ГДЕ
	|	ПротоколСогласованияРесурсов.СтатусСогласования = ЗНАЧЕНИЕ(Перечисление.СтатусыСогласованияРесурса.КСогласованию)
	|	И ПротоколСогласованияРесурсов.Задача В (&МассивЗадачДляРасчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПротоколСогласованияРесурсов.Задача,
	|	ПротоколСогласованияРесурсов.Пользователь,
	|	ПротоколСогласованияРесурсов.ВидРесурса
	|ИТОГИ ПО
	|	Задача";
	
	Запрос.УстановитьПараметр("МассивЗадачДляРасчета", МассивЗадачДляРасчета);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаЗадачи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЗадачи.Следующий() Цикл
		
		ТаблицаНабораЗаписей = НовыйТаблицаНабораЗаписейПоЗадаче();
		
		ВыборкаДетали = ВыборкаЗадачи.Выбрать();
		
		Пока ВыборкаДетали.Следующий() Цикл
			
			НоваяСтрока = ТаблицаНабораЗаписей.Добавить();
			НоваяСтрока.Пользователь = ВыборкаДетали.Пользователь ;
			НоваяСтрока.ВидРесурса   = ВыборкаДетали.ВидРесурса ;
			НоваяСтрока.Количество   = ВыборкаДетали.Количество ;
			
		КонецЦикла; 
		
		ВыполнитьЗаписьВРегистрПоТаблице(ВыборкаЗадачи.Задача, ТаблицаНабораЗаписей);
	
	КонецЦикла;
	
	
КонецПроцедуры 

Функция НовыйТаблицаНабораЗаписейПоЗадаче()
	
	ТаблицаНабораЗаписей = Новый ТаблицаЗначений;
	ТаблицаНабораЗаписей.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаНабораЗаписей.Колонки.Добавить("ВидРесурса",   Новый ОписаниеТипов("СправочникСсылка.ВидыСогласуемыхРесурсов"));
	ТаблицаНабораЗаписей.Колонки.Добавить("Количество",   Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаНабораЗаписей;
	
КонецФункции

#КонецОбласти

#КонецЕсли