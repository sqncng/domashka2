#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	РегистрыСведений.ПриоритетыВыполненияОбработчиковОбновления.РасчитатьПорядокОтличаетсяОтДефолтного(ТекущийОбъект);
	ТекущийОбъект.ЗаписываетсяВФорме = Истина;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Обработчик1", Запись.Обработчик1);
	ПараметрыОповещения.Вставить("Обработчик2", Запись.Обработчик2);
	ПараметрыОповещения.Вставить("ПорядокПомещенияВОчередь", Запись.ПорядокПомещенияВОчередь);
	
	Оповестить("Запись_ПриоритетыВыполненияОбработчиковОбновления", ПараметрыОповещения); 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПорядокВыполненияОбработчиковОбновленияПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонфликты

&НаКлиенте
Процедура КонфликтыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КонфликтыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Обработчик1, "Владелец");
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Запись.Обработчик1);
	СписокЗначений.Добавить(Запись.Обработчик2);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Конфликты,
																		"ОбработчикПисатель",
																		СписокЗначений,
																		ВидСравненияКомпоновкиДанных.ВСписке,
																		,
																		Истина);
																		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Конфликты,
																		"ОбработчикЧитательИлиПисатель",
																		СписокЗначений,
																		ВидСравненияКомпоновкиДанных.ВСписке,
																		,
																		Истина);
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Обработчик1, "МонопольныйРежимОправдан") Тогда
		Элементы.ПорядокВыполненияОбработчиковОбновления.СписокВыбора.Очистить();
		
		Элементы.ПорядокВыполненияОбработчиковОбновления.СписокВыбора.Добавить(Перечисления.ПорядокПомещенияОбработчиковВОчередь.НеобходимАнализ);
		Элементы.ПорядокВыполненияОбработчиковОбновления.СписокВыбора.Добавить(Перечисления.ПорядокПомещенияОбработчиковВОчередь.НужноПеределатьОбработчики);
		Элементы.ПорядокВыполненияОбработчиковОбновления.СписокВыбора.Добавить(Перечисления.ПорядокПомещенияОбработчиковВОчередь.НетПроблемы);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Запись.Обработчик1) Тогда
		КомментарийУстановлено = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Обработчик1, "КомментарийУстановлено");
		Элементы.Обработчик1.РасширеннаяПодсказка.Заголовок = КомментарийУстановлено;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Запись.Обработчик2) Тогда
		КомментарийУстановлено = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Обработчик2, "КомментарийУстановлено");
		Элементы.Обработчик2.РасширеннаяПодсказка.Заголовок = КомментарийУстановлено;
	КонецЕсли; 
	
	НастроитьФорму();	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.ПричинаПовторнойЗаписиЗаголовок.Видимость = Запись.ПовторнаяЗаписьОбъекта;
	Элементы.ПричинаПовторнойЗаписи.Видимость          = Запись.ПовторнаяЗаписьОбъекта;
	
	
	НужнаПричина = Запись.ПорядокПомещенияВОчередь = Перечисления.ПорядокПомещенияОбработчиковВОчередь.ВсеРавноВКакойПоследовательности
					Или Запись.ПорядокПомещенияВОчередь = Перечисления.ПорядокПомещенияОбработчиковВОчередь.СначалаОбработчик1 
					Или Запись.ПорядокПомещенияВОчередь = Перечисления.ПорядокПомещенияОбработчиковВОчередь.СначалаОбработчик2 
					Или Запись.ПорядокПомещенияВОчередь = Перечисления.ПорядокПомещенияОбработчиковВОчередь.НетПроблемы; 
	
	Элементы.ПричинаПовторнойЗаписи.Доступность               = НужнаПричина;
	
КонецПроцедуры

#КонецОбласти

