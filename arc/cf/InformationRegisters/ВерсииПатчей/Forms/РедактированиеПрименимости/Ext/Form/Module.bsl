&НаСервере
Перем ИзмененияПрименимости;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Заголовок = НСтр("ru = 'Применимость патча к конфигурациям'");
	
	Патч               = Параметры.Патч;
	Версия             = Параметры.Версия;
	ИдентификаторПатча = Параметры.УникальныйИдентификатор;
	ПатчОпубликован    = Параметры.ПатчОпубликован;
	
	Свойства = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ИдентификаторПатча, "Параметры");
	АдресХранилища = ПоместитьВоВременноеХранилище(Свойства.Параметры, УникальныйИдентификатор);
	
	ДополнительныеПараметры = ПатчиСлужебный.ПараметрыПатча(Свойства.Параметры.Получить());
	ИзмененияПрименимости = Новый Структура;
	ИзмененияПрименимости.Вставить("Включена", Новый Соответствие);
	ИзмененияПрименимости.Вставить("Отключена", Новый Соответствие);
	Если ДополнительныеПараметры.ИзмененияПрименимости <> Неопределено Тогда
		ИзмененияПрименимости = ДополнительныеПараметры.ИзмененияПрименимости;
	КонецЕсли;
	
	КэшИзмененийПрименимости = ПоместитьВоВременноеХранилище(ИзмененияПрименимости, УникальныйИдентификатор);
	ЗаполнитьТаблицуПрименимости();
	
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = УправлениеДоступом.ИзменениеРазрешено(Патч);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьПроверкуРезультатаДлительнойОперации", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если Не ЗавершениеРаботы Тогда
		Если ДлительнаяОперация <> Неопределено Тогда
			ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовШапкиФормы

&НаКлиенте
Процедура ПрименимостьПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ИдентификаторПроблемыПрименимости = "РежимСовместимости" Тогда
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru = 'Режим совместимости конфигурации ниже режима совместимости патча.
			|Патч не сможет быть установлен в данную конфигурацию.
			|
			|Для включения применимости к данной конфигурации необходимо отредактировать патч,
			|понизив ему режим совместимости.
			|
			|Текущий режим совместимости конфигурации и патча см. в поле ""Информация о применимости"".'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ОчиститьСообщения();
	Результат = ЗаписатьИЗакрытьНаСервере();
	Если Результат = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = Истина Тогда
		ДлительнаяОперация = Неопределено;
		
		Закрыть(АдресХранилища);
	КонецЕсли;
	
	Элементы.СтраницыДлительнаяОперация.ТекущаяСтраница = Элементы.СтраницаДлительнаяОперация;
	Элементы.НадписьДлительнаяОперация.Заголовок = НСтр("ru = 'Сохранение применимости, добавление патчей базовых версий...'");
	Элементы.ФормаЗаписатьИЗакрыть.Доступность = Ложь;
	Элементы.ФормаЗакрыть.Заголовок = НСтр("ru = 'Отменить и закрыть'");
	
	ОбработкаВопроса = Новый ОписаниеОповещения("ЗаписатьИЗакрытьПослеВопроса", ЭтотОбъект);
	Если ПатчОпубликован Тогда
		ТекстВопроса = НСтр("ru = 'Отправить измененную информацию о применимости в сервис публикации патчей?'");
		ПоказатьВопрос(ОбработкаВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОбработкаВопроса, КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьПослеВопроса(Результат, ДополнительныеПараметры) Экспорт
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтотОбъект, Результат);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(Знач ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

#Область ДлительнаяОперацияФормированияПрименимости

&НаСервере
Процедура ЗаполнитьТаблицуПрименимости()
	
	СвойстваВерсииПатча = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ИдентификаторПатча,
		"Патч,Версия,ИзменяемыеМетаданные,НачальнаяСборка,КонечнаяСборка,РазделПроекта,
		|РежимСовместимости,КонечнаяСборкаПоХранилищу,ДатаИсправления,УникальныйИдентификатор");
	
	РежимСовместимости = СвойстваВерсииПатча.РежимСовместимости;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Версия);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Проекты.Библиотека КАК ЭтоБиблиотека,
		|	Проекты.ИмяКонфигурации КАК ИмяКонфигурации
		|ИЗ
		|	Справочник.ВерсииПроекта КАК ВерсииПроекта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ВерсииПроекта.Владелец = Проекты.Ссылка
		|ГДЕ
		|	ВерсииПроекта.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить().Выгрузить();
	ЭтоБиблиотека = Результат[0].ЭтоБиблиотека;
	ИмяКонфигурации = Результат[0].ИмяКонфигурации;
	
	СвойстваВерсииПатча.Вставить("ЭтоБиблиотека", ЭтоБиблиотека);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = Ложь;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РегистрыСведений.ВерсииПатчей.ПрименимостьПатчаВФоне",
		СвойстваВерсииПатча,
		Ложь);
	
	Элементы.СтраницыДлительнаяОперация.ТекущаяСтраница = Элементы.СтраницаДлительнаяОперация;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьПроверкуРезультатаДлительнойОперации()
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПолученияПрименимости", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатПолученияПрименимости(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	ОбработатьРезультатПолученияПрименимостиНаСервере(Результат);
	Элементы.СтраницыДлительнаяОперация.ТекущаяСтраница = Элементы.СтраницаПрименимость;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатПолученияПрименимостиНаСервере(Результат) Экспорт
	
	ИнформацияОПрименимости = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ИзмененияПрименимости   = ПолучитьИзВременногоХранилища(КэшИзмененийПрименимости);
	
	ПрименимостьПатча     = ИнформацияОПрименимости.ПрименимостьПатча;
	СвязанныеКонфигурации = ИнформацияОПрименимости.СвязанныеКонфигурации;
	
	НеПрименим = ИнформацияОПрименимости.НеПрименим;
	
	ТаблицаПрименимости = РеквизитФормыВЗначение("Применимость");
	Для Каждого Элемент Из ПрименимостьПатча Цикл
		ИмяИдентификаторКонфигурации = СтрРазделить(Элемент.Ключ, ",");
		Включена = ИзмененияПрименимости.Отключена[ИмяИдентификаторКонфигурации[1]] = Неопределено;
		Строка = ТаблицаПрименимости.Добавить();
		Строка.Включена = Включена;
		Строка.Конфигурация = ИмяИдентификаторКонфигурации[0];
		Строка.ИдентификаторКонфигурации = ИмяИдентификаторКонфигурации[1];
		Строка.Версии = ВерсииСтрокой(Элемент.Значение);
		Строка.ПоУмолчанию = Истина;
		Строка.ВерсииСсылками.ЗагрузитьЗначения(Элемент.Значение);
		Если Не Строка.Включена Тогда
			Строка.ИнформацияОПрименимости = НСтр("ru = 'Отключена вручную.'");
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из СвязанныеКонфигурации Цикл
		ИмяИдентификаторКонфигурации = СтрРазделить(Элемент.Ключ, ",");
		Включена = ИзмененияПрименимости.Отключена[ИмяИдентификаторКонфигурации[1]] = Неопределено;
		Строка = ТаблицаПрименимости.Добавить();
		Строка.Включена = Включена;
		Строка.Конфигурация = ИмяИдентификаторКонфигурации[0];
		Строка.ИдентификаторКонфигурации = ИмяИдентификаторКонфигурации[1];
		Строка.Версии = ВерсииСтрокой(Элемент.Значение);
		Строка.ПоУмолчанию = Истина;
		Строка.ВерсииСсылками.ЗагрузитьЗначения(Элемент.Значение);
		Если Не Строка.Включена Тогда
			Строка.ИнформацияОПрименимости = НСтр("ru = 'Отключена вручную.'");
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из НеПрименим Цикл
		ИмяИдентификаторКонфигурации = СтрРазделить(Элемент.Ключ, ",");
		Включена = ИзмененияПрименимости.Включена[ИмяИдентификаторКонфигурации[1]] <> Неопределено;
		Строка = ТаблицаПрименимости.Добавить();
		Строка.Включена = Включена;
		Строка.Конфигурация = ИмяИдентификаторКонфигурации[0];
		Строка.ИдентификаторКонфигурации = ИмяИдентификаторКонфигурации[1];
		Строка.Версии = ВерсииСтрокой(Элемент.Значение);
		Строка.ПоУмолчанию = Ложь;
		Строка.ВерсииСсылками.ЗагрузитьЗначения(Элемент.Значение);
		Если Не Строка.Включена Тогда
			Расшифровка = ИнформацияОПрименимости.ПричиныНеприменимости[Строка.Конфигурация];
			Строка.ИнформацияОПрименимости = Расшифровка.Описание;
			Строка.ИдентификаторПроблемыПрименимости = Расшифровка.ИдентификаторПричины;
		Иначе
			Расшифровка = ИнформацияОПрименимости.ПричиныНеприменимости[Строка.Конфигурация];
			Текст = НСтр("ru = 'Применимость установлена вручную.
				|Исходная информация:
				|%1'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Расшифровка.Описание);
			
			Строка.ИнформацияОПрименимости = Текст;
			Строка.ИдентификаторПроблемыПрименимости = Расшифровка.ИдентификаторПричины;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаПрименимости.Сортировать("Включена Убыв, Конфигурация");
	ЗначениеВРеквизитФормы(ТаблицаПрименимости, "Применимость");
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ВерсииСтрокой(Версии)
	
	УстановитьПривилегированныйРежим(Истина);
	ВерсииСтрокой = СтрСоединить(Версии, ",");
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ВерсииСтрокой;
	
КонецФункции

#КонецОбласти

#Область ДлительнаяОперацияЗакрытияФормы

&НаСервере
Функция ЗаписатьИЗакрытьНаСервере()
	ТаблицаПрименимости = РеквизитФормыВЗначение("Применимость");
	Если ТаблицаПрименимости.Найти(Истина, "Включена") = Неопределено Тогда
		Сообщить(НСтр("ru = 'Должна остаться хотя бы одна конфигурация, к которой применим патч'"));
		Возврат Ложь;
	КонецЕсли;
	
	ИзмененияПрименимости = Новый Структура;
	ИзмененияПрименимости.Вставить("Включена", Новый Соответствие);
	ИзмененияПрименимости.Вставить("Отключена", Новый Соответствие);
	БазовыеВерсии = Новый Соответствие;
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Патч, "Владелец");
	ЭтоКонфигурацияБазовая = ПатчиСлужебный.ЭтоКонфигурацияБазовая(Проект);
	Для Каждого Строка Из Применимость Цикл
		Если Не ЭтоКонфигурацияБазовая И СтрНайти(Строка.Конфигурация, "Базовая") > 0 Тогда
			Если Строка.ВерсииСсылками.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Истина);
			ИсходноеИмяПрограммы = ПатчиСлужебный.ИсходноеИмяПрограммы(Строка.ВерсииСсылками[0].Значение); 
			УстановитьПривилегированныйРежим(Ложь);
			КлючПоиска = ИсходноеИмяПрограммы + "," + Строка.ИдентификаторКонфигурации;
			Если БазовыеВерсии[КлючПоиска] = Неопределено Тогда
				БазовыеВерсии.Вставить(КлючПоиска, Строка.Включена);
			КонецЕсли;
			
			Если Строка.Включена
				И Не БазовыеВерсии[КлючПоиска] Тогда
				БазовыеВерсии.Вставить(КлючПоиска, Строка.Включена);
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.Включена = Строка.ПоУмолчанию Тогда
			Продолжить; // Применимость не изменена.
		КонецЕсли;
		
		Идентификатор = Строка.ИдентификаторКонфигурации;
		Версии = Строка.ВерсииСсылками.ВыгрузитьЗначения();
		Если Строка.ПоУмолчанию Тогда
			ИзмененияПрименимости.Отключена.Вставить(Идентификатор, Версии);
		Иначе
			ИзмененияПрименимости.Включена.Вставить(Идентификатор, Версии);
		КонецЕсли;
	КонецЦикла;
	
	ДополнительныеПараметры = ПатчиСлужебный.ПараметрыПатча(ПолучитьИзВременногоХранилища(АдресХранилища).Получить());
	ДополнительныеПараметры.ИзмененияПрименимости = ИзмененияПрименимости;
	Шаблон = НСтр("ru = '%1 - Применимость изменена пользователем %2'");
	ЗаписьЛога = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
		ТекущаяДатаСеанса(), Пользователи.ТекущийПользователь());
	ДополнительныеПараметры.Лог.Добавить(ЗаписьЛога);
	
	Если ЭтоКонфигурацияБазовая Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Патч", Патч);
	ПередаваемыеПараметры.Вставить("РежимСовместимости", РежимСовместимости);
	ПередаваемыеПараметры.Вставить("Версия", Версия);
	ПередаваемыеПараметры.Вставить("ИдентификаторПатча", ИдентификаторПатча);
	ПередаваемыеПараметры.Вставить("БазовыеВерсии", БазовыеВерсии);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = Ложь;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
		"РегистрыСведений.ВерсииПатчей.АктуализироватьСоставПатчейБазовыхВерсийВФоне",
		ПередаваемыеПараметры,
		ДополнительныеПараметры);
	
	Возврат ДлительнаяОперация;
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(Результат, РешениеОбОбновленииПрименимости) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		Элементы.СтраницыДлительнаяОперация.ТекущаяСтраница = Элементы.СтраницаПрименимость;
		Элементы.ФормаЗаписатьИЗакрыть.Доступность = Истина;
		Элементы.ФормаЗакрыть.Заголовок = НСтр("ru = 'Закрыть'");
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли; 
	
	ДлительнаяОперация = Неопределено;
	
	Если РешениеОбОбновленииПрименимости = КодВозвратаДиалога.Да Тогда
		Результат = ОбновлениеПрименимостиПатчаВСервисе();
		Если Не Результат.ВсеУспешно Тогда
			Оповестить("Патчи_ОшибкаОбновленияПрименимости",
				Новый Структура("Патч, ТекстОшибки", Патч, Результат.ТекстСообщения));
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(АдресХранилища);
	
КонецПроцедуры

&НаСервере
Функция ОбновлениеПрименимостиПатчаВСервисе()
	
	Результаты = РегистрыСведений.ВерсииПатчей.ПересчетПрименимостиПатчаВручную(ИдентификаторПатча);
	Результат = ПатчиСлужебный.ПредставлениеРучногоОбновленияПрименимостиПатча(Результаты);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти