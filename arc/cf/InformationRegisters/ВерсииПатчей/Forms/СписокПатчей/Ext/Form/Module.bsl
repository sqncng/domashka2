#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Параметры.Отбор;
	
	ИзменениеДоступно = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ВерсииПатчей);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
		"ПодписанДляКонфигурации", ,
		ВидСравненияКомпоновкиДанных.НеЗаполнено, , ,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		Проект = ПараметрыСеанса.ТекущийПроект;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Патчи_РучноеСоздание"
		Или ИмяСобытия = "Патчи_ИзменениеСтатуса" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Или ТекущаяСтрока.Свойство("ГруппировкаСтроки") Тогда
		НужноПроверить = Ложь;
		МожноСкачать   = Ложь;
		МожноУдалять   = Ложь;
		МожноПересоздать = Ложь;
		МожноПубликовать = Ложь;
		МожноПроверитьПубликацию = Ложь;
	Иначе
		МожноУдалять    = (ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.Ошибка")
			              Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаПубликации")
			              Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления")
			              Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданНеПроверен")
			              Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.СозданПроверен")
			              Или ТекущаяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ПатчНеТребуется"));
	КонецЕсли;
	
	Элементы.СписокКонтекстноеМенюУдалитьПатч.Доступность = ИзменениеДоступно И МожноУдалять;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	Если Элементы.СписокКонтекстноеМенюУдалитьПатч.Доступность Тогда
		УдалитьПатч(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьПатч(Команда)
	ТекстВопроса  = НСтр("ru = 'Удалить выбранный патч?'");
	КнопкиВопроса = РежимДиалогаВопрос.ДаНет;
	ОписаниеОповещения = Новый ОписаниеОповещения("СписокПередУдалениемПродолжение", ЭтотОбъект, Элементы.Список.ТекущаяСтрока);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиВопроса);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокПередУдалениемПродолжение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СписокПередУдалениемЗавершение(ДополнительныеПараметры);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура СписокПередУдалениемЗавершение(Запись)
	
	// Удаление патча.
	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ВерсииПатчей");
		ЭлементБлокировкиДанных.УстановитьЗначение("Версия", Запись.Версия);
		ЭлементБлокировкиДанных.УстановитьЗначение("Патч", Запись.Патч);
		ЭлементБлокировкиДанных.УстановитьЗначение("УникальныйИдентификатор", Запись.УникальныйИдентификатор);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
		БлокировкаДанных.Заблокировать();
		
		МенеджерЗаписи = РегистрыСведений.ВерсииПатчей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Запись);
		МенеджерЗаписи.Удалить();
		
		НаборЗаписей = РегистрыСведений.ПрименимостьПатчей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Патч.Установить(Запись.УникальныйИдентификатор);
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти