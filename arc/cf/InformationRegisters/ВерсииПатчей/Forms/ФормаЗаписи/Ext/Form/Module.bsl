#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Версия патча ""%1""'");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, Запись.Патч);
	Элементы.Подтвердить.Доступность = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ВерсииПатчей);
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Патч, "Владелец");
	
	Если Не ЗначениеЗаполнено(Запись.ПодписанДляКонфигурации) Тогда
		Элементы.ПодписанДляКонфигурации.Видимость = Ложь;
	КонецЕсли;
	
	ВключенаПубликация = ПолучитьФункциональнуюОпцию("ИспользоватьПубликациюПатчейВСервисе");
	Если Не ВключенаПубликация Тогда
		Элементы.Подтвердить.Заголовок = НСтр("ru = 'Патч проверен'");
	КонецЕсли;
	
	КонечнаяСборкаПоХранилищу = Запись.КонечнаяСборкаПоХранилищу;
	Если Не ЗначениеЗаполнено(КонечнаяСборкаПоХранилищу) Тогда
		КонечнаяСборкаПоХранилищу = НСтр("ru = 'не рассчитана'")
	КонецЕсли;
	ТекстКонечнаяСборка = НСтр("ru = 'Конечная сборка, рассчитанная по хранилищу конфигурации - %1.'");
	ТекстКонечнаяСборка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстКонечнаяСборка, КонечнаяСборкаПоХранилищу);
	Элементы.КонечнаяСборка.Подсказка = Элементы.КонечнаяСборка.Подсказка + Символы.ПС + ТекстКонечнаяСборка
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьВидимостьЭлементовФормы();
	
	ЗаписьРегистра = РеквизитФормыВЗначение("Запись");
	ПараметрыПатчаВХранилище = ПоместитьВоВременноеХранилище(ЗаписьРегистра.Параметры, УникальныйИдентификатор);
	
	ПараметрыПатча = ПатчиСлужебный.ПараметрыПатча(ЗаписьРегистра.Параметры.Получить());
	ЛогДействийСПатчем = СтрСоединить(ПараметрыПатча.Лог, Символы.ПС);
	ЛогОшибок = ПараметрыПатча.ЛогОшибок;
	
	КоличествоОшибок = ЛогОшибок.Количество();
	Если КоличествоОшибок > 0 Тогда 
		КоличествоОшибок = 0;
		Для Каждого СтрокаЛога Из ЛогОшибок Цикл
			Если СтрокаЛога = "---------------" Тогда
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;
		КонецЦикла;
		
		Если КоличествоОшибок = 0 Тогда
			КоличествоОшибок = 1;
		КонецЕсли;
	КонецЕсли;
	Элементы.ПосмотретьЛогОшибок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Элементы.ПосмотретьЛогОшибок.Заголовок,
		КоличествоОшибок);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Патчи_РучноеСоздание" Тогда
		Закрыть();
	КонецЕсли;
	Если ИмяСобытия = "Патчи_ИзменениеСтатуса" Тогда
		Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПосмотретьЛогОшибокНажатие(Элемент)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрыПатча", ПараметрыПатчаВХранилище);
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ПросмотрОшибок", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПатч(Команда)
	ИнформацияОПатче = ИнформацияОПатче();
	ПолучитьФайл(ИнформацияОПатче.ДанныеПатча, ИнформацияОПатче.ИмяПатча, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Подтвердить(Команда)
	Если ВключенаПубликация Тогда
		ТекстВопроса = "Проверка патча осуществляется:
			|• в опубликованной версии конфигурации (библиотеки) – сначала убедиться, что ошибка воспроизводится;
			|• затем установить патч и убедиться, что ошибка исправлена.
			|
			|Не следует полагаться только на успешное подключение патча к конфигурации, или что патч успешно собран автоматически.
			|Проверка патча обязательна в полном объеме.
			|
			|Если проверка требует регламентного тестирования (например, обязательно подтверждение исправления ночными тестами и т.п.), то патч не следует публиковать до того, как исправление ошибки пройдет все предусмотренные этапы проверки.
			|
			|После проверки патч автоматически будет отправлен на публикацию.";
	Иначе
		ТекстВопроса = НСтр("ru = 'Установить признак проверки патча?'");
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьПроверкуПатча", ЭтотОбъект);
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("ПатчПроверен", НСтр("ru = 'Патч проверен'"));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , "Отмена");
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьПатч(Команда)
	
	Если Запись.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОжиданиеИсправления") Тогда
		ТекстВопроса = НСтр("ru = 'Автоматическое создание будет отключено.
			|Включить его обратно можно по команде Пересоздать
			|в подменю Еще.
			|
			|Продолжить?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрикрепитьПатчПослеВопроса", ЭтотОбъект);
		КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуРучногоСозданияПатча();
	
КонецПроцедуры

&НаКлиенте
Процедура Пересоздать(Команда)
	ПересоздатьНаСервере();
	Оповестить("Патчи_ИзменениеСтатуса");
КонецПроцедуры

&НаСервере
Процедура ПересоздатьНаСервере()
	ПатчиСлужебный.ПересоздатьПатч(Запись);
	Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПатч(Команда)
	ТекстВопроса = НСтр("ru = 'Повторить публикацию патча?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодтвердитьПубликациюПатча", ЭтотОбъект);
	КнопкиДаНет = РежимДиалогаВопрос.ДаНет;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиДаНет, , КодВозвратаДиалога.Да);
КонецПроцедуры

&НаКлиенте
Процедура ПрименимостьПатча(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПрименимостьПатчаЗавершение", ЭтотОбъект);
	
	ПараметрыРедактирования = Новый Структура;
	ПараметрыРедактирования.Вставить("Версия", Запись.Версия);
	ПараметрыРедактирования.Вставить("УникальныйИдентификатор", Запись.УникальныйИдентификатор);
	ПараметрыРедактирования.Вставить("Патч", Запись.Патч);
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.РедактированиеПрименимости", ПараметрыРедактирования, , , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПрименимость(Команда)
	СостояниеДоОбновления = Запись.Состояние;
	Результат = ПересчетПрименимостиНаСервере(Запись.УникальныйИдентификатор);
	
	ПоказатьПредупреждение(, Результат.ТекстСообщения);
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьПатч(Команда)
	ПараметрыОтзыва = Новый Структура;
	ПараметрыОтзыва.Вставить("Патч", Запись.Патч);
	ПараметрыОтзыва.Вставить("Версия", Запись.Версия);
	ПараметрыОтзыва.Вставить("УникальныйИдентификатор", Запись.УникальныйИдентификатор);
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОтозватьВерсиюПатчаЗавершение", ЭтотОбъект);
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.ОтзывПатча", ПараметрыОтзыва, , , , , ОбработчикЗавершения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодтвердитьПроверкуПатча(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> "ПатчПроверен" Тогда
		Возврат;
	КонецЕсли;
	ПодтвердитьКорректностьПатча();
	Оповестить("Патчи_ИзменениеСтатуса");
КонецПроцедуры

&НаСервере
Функция ИнформацияОПатче()
	ДанныеПатча = ПатчиСлужебный.ДвоичныеДанныеПатча(Запись.УникальныйИдентификатор);
	НомерПатча  = ПатчиСлужебный.НомерПатча(Запись.УникальныйИдентификатор);
	Результат = Новый Структура;
	Результат.Вставить("ДанныеПатча", ПоместитьВоВременноеХранилище(ДанныеПатча, УникальныйИдентификатор));
	Результат.Вставить("ИмяПатча", ПатчиСлужебный.ИмяПатча(Запись.Патч, НомерПатча));
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ПодтвердитьКорректностьПатча()
	Если ВключенаПубликация Тогда
		ПатчиСлужебный.УстановитьСтатусПатча(Запись, Перечисления.СтатусыПатчей.ОжидаетПубликации);
	Иначе
		ПатчиСлужебный.УстановитьСтатусПатча(Запись, Перечисления.СтатусыПатчей.СозданПроверен);
	КонецЕсли;
	Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПубликациюПатча(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	ОтметитьНеобходимостьПубликацииПатча();
	Оповестить("Патчи_ИзменениеСтатуса");
	Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьВерсиюПатчаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> "Успешно" Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВерсиюПатчаВзаменОтозванной();
	
	Оповестить("Патчи_ИзменениеСтатуса");
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура ДобавитьВерсиюПатчаВзаменОтозванной()
	ОшибкаОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Патч, "Ошибка");
	
	Если ТипЗнч(ОшибкаОснование) = Тип("СправочникСсылка.Ошибки") Тогда
		НеобходимыеСвойства = "Ссылка,ВерсияИсправления,Статус,Обнаружена,
			|СборкаОбнаружения,ДатаОбнаружения,ВерсияИсправления,ДатаИсправления,ВеткаОбнаружения";
		СвойстваОшибки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОшибкаОснование, НеобходимыеСвойства);
		ПатчиСлужебный.ДобавитьВерсииПатчаПоОшибке(Запись.Патч, СвойстваОшибки);
	Иначе
		ПатчиСлужебный.ДобавитьПатчНаКонкретнуюВерсию(Запись.Патч, Запись.Версия, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтметитьНеобходимостьПубликацииПатча()
	ПатчиСлужебный.УстановитьСтатусПатча(Запись, Перечисления.СтатусыПатчей.ОжидаетПубликации);
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьЭлементовФормы()
	
	Элементы.Подтвердить.Видимость = Ложь;
	Элементы.Пересоздать.Видимость = Ложь;
	Элементы.ФормаСохранитьПатч.Видимость = 
		Не (Запись.Состояние = Перечисления.СтатусыПатчей.ОжиданиеИсправления
		  Или Запись.Состояние = Перечисления.СтатусыПатчей.Ошибка
		  Или Запись.Состояние = Перечисления.СтатусыПатчей.СозданиеПатча
		  Или Запись.Состояние = Перечисления.СтатусыПатчей.СозданиеВручную);
	Элементы.ПрикрепитьПатч.Видимость = Ложь;
	
	ЕстьОшибки = (Запись.Состояние = Перечисления.СтатусыПатчей.Ошибка
		Или Запись.Состояние = Перечисления.СтатусыПатчей.ОшибкаПубликации);
	Элементы.ДекорацияСтатус.Видимость = ЕстьОшибки;
	
	ОтображатьПрименимость = ЗначениеЗаполнено(Запись.НачальнаяСборка) И ЗначениеЗаполнено(Запись.КонечнаяСборка);
	Элементы.НачальнаяДата.Видимость  = ОтображатьПрименимость;
	Элементы.КонечнаяСборка.Видимость = ОтображатьПрименимость;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Ошибка, "Владелец");
	ЕстьПравоПубликации = УправлениеДоступомСППР.РольДоступнаПоПроекту("ПубликацияПатчей", Проект);
	Элементы.ОпубликоватьПатч.Видимость = ЕстьПравоПубликации
		И (Запись.Состояние = ПредопределенноеЗначение("Перечисление.СтатусыПатчей.ОшибкаПубликации"));
	
	Если Запись.Состояние = Перечисления.СтатусыПатчей.СозданНеПроверен
		Или Запись.Состояние = Перечисления.СтатусыПатчей.СозданПроверен
		Или Запись.Состояние = Перечисления.СтатусыПатчей.Опубликован Тогда
		Элементы.СтраницыСостояниеИПрименимость.ТекущаяСтраница = Элементы.СтраницаПрименимость;
	Иначе
		Элементы.СтраницыСостояниеИПрименимость.ТекущаяСтраница = Элементы.СтраницаСостояние;
	КонецЕсли;
	
	Элементы.ПересчитатьПрименимость.Видимость = (Запись.Состояние = Перечисления.СтатусыПатчей.Опубликован
		И Не ЗначениеЗаполнено(Запись.ПодписанДляКонфигурации));
	
	Элементы.ОтозватьПатч.Видимость = (Запись.Состояние = Перечисления.СтатусыПатчей.Опубликован);
	
	Элементы.ПрикрепитьПатчДляУспешныхПатчей.Видимость = (Запись.Состояние = Перечисления.СтатусыПатчей.СозданНеПроверен)
		Или (Запись.Состояние = Перечисления.СтатусыПатчей.СозданПроверен);
	
	Если Элементы.Подтвердить.Видимость Или Элементы.ФормаСохранитьПатч.Видимость Тогда
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ПроверкаПатча");
	ИначеЕсли ЕстьОшибки Тогда
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ЕстьОшибки");
	ИначеЕсли Не ОтображатьПрименимость Тогда
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "БезПолейПрименимости");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименимостьПатчаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Прочитать();
КонецПроцедуры

&НаСервере
Функция ПересчетПрименимостиНаСервере(ИдентификаторПатча)
	
	Результаты = РегистрыСведений.ВерсииПатчей.ПересчетПрименимостиПатчаВручную(ИдентификаторПатча);
	Результат = ПатчиСлужебный.ПредставлениеРучногоОбновленияПрименимостиПатча(Результаты);
	Прочитать();
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПрикрепитьПатчПослеВопроса(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВключитьРучноеСозданиеПатчаНаСервере();
	ОткрытьФормуРучногоСозданияПатча();
КонецПроцедуры

&НаСервере
Процедура ВключитьРучноеСозданиеПатчаНаСервере()
	ПатчиСлужебный.УстановитьСтатусПатча(Запись, Перечисления.СтатусыПатчей.СозданиеВручную);
	Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРучногоСозданияПатча()
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Патч", Запись.Патч);
	ПередаваемыеПараметры.Вставить("Версия", Запись.Версия);
	ПередаваемыеПараметры.Вставить("НачальнаяСборка", Запись.НачальнаяСборка);
	ПередаваемыеПараметры.Вставить("КонечнаяСборка",  Запись.КонечнаяСборка);
	ПередаваемыеПараметры.Вставить("ИдентификаторПатча",   Запись.УникальныйИдентификатор);
	ПередаваемыеПараметры.Вставить("ИзменяемыеМетаданные", Запись.ИзменяемыеМетаданные);
	ПередаваемыеПараметры.Вставить("Состояние", Запись.Состояние);
	
	ОткрытьФорму("РегистрСведений.ВерсииПатчей.Форма.РучноеСозданиеПатча", ПередаваемыеПараметры);
	
КонецПроцедуры

#КонецОбласти