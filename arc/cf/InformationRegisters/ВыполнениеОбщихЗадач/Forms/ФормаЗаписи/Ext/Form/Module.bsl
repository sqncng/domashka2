#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Запись.ИсходныйКлючЗаписи.Пустой() Тогда
	    ПричтенииСозданииНаСервере();
	КонецЕсли;

	УстановитьВидимостьЭлементовПланирования();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьВидимостьЭлементовПланирования();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.ТребуетсяЗапланировать
		ИЛИ Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.Отменена Тогда
		
		НепроверяемыеРеквизиты.Добавить("ВариантПланирования");
		НепроверяемыеРеквизиты.Добавить("Версия");
		НепроверяемыеРеквизиты.Добавить("ТехническийПроект");
		НепроверяемыеРеквизиты.Добавить("Библиотека");
		
	КонецЕсли;
	
	Если Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.Версия Тогда
		НепроверяемыеРеквизиты.Добавить("ТехническийПроект");
		НепроверяемыеРеквизиты.Добавить("Библиотека");
	ИначеЕсли Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ТехническийПроект Тогда
		НепроверяемыеРеквизиты.Добавить("Версия");
		НепроверяемыеРеквизиты.Добавить("Библиотека");
	ИначеЕсли Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ИспользованиеБиблиотеки Тогда
		НепроверяемыеРеквизиты.Добавить("ТехническийПроект");
	КонецЕсли;
	
	Если Запись.СтатусВыполнения <> Перечисления.СтатусыОбщихЗадач.Выполнена
		ИЛИ ЗначениеЗаполнено(Запись.СборкаВерсии) Тогда
		НепроверяемыеРеквизиты.Добавить("СборкаВерсии");
	КонецЕсли;
	
	Если НепроверяемыеРеквизиты.Количество()>0 Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	КонецЕсли;
	
	Если Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.Запланирована
		ИЛИ Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.Выполнена Тогда
		
		Если Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.Версия
			И НЕ ЗначениеЗаполнено(Запись.Версия) Тогда
			
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Поле ""Версия"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Версия", "Запись", Отказ);
			
		ИначеЕсли Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ТехническийПроект
			И НЕ ЗначениеЗаполнено(Запись.ТехническийПроект) Тогда
			
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Поле ""Технический проект"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ТехническийПроект", "Запись", Отказ);
			
		ИначеЕсли Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ИспользованиеБиблиотеки Тогда
			
			Если НЕ ЗначениеЗаполнено(Запись.Версия) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru='Поле ""Версия"" не заполнено'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Версия", "Запись", Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Запись.Библиотека) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru='Поле ""Библиотека"" не заполнено'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Библиотека", "Запись", Отказ);
			КонецЕсли;
		
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.СрокВыполнения) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Поле ""Срок выполнения"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СрокВыполнения", "Запись", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Запись.СтатусВыполнения = Перечисления.СтатусыОбщихЗадач.Выполнена
		И НЕ ЗначениеЗаполнено(Запись.СборкаВерсии) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Поле ""Сборка"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СборкаВерсии", "Запись", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЕстьИзменения = Ложь;
	
	Если НЕ Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ОбщаяЗадача", Запись.ИсходныйКлючЗаписи.ОбщаяЗадача);
		СтруктураОтбора.Вставить("Проект", Запись.ИсходныйКлючЗаписи.Проект);
		
		СтруктураДанных = РегистрыСведений.ВыполнениеОбщихЗадач.ПолучитьПоследнее(, СтруктураОтбора);
		
		Если Запись.ИсходныйКлючЗаписи.ОбщаяЗадача <> ТекущийОбъект.ОбщаяЗадача
			ИЛИ Запись.ИсходныйКлючЗаписи.Проект <> ТекущийОбъект.Проект
			ИЛИ СтруктураДанных.Ответственный <> ТекущийОбъект.Ответственный
			ИЛИ СтруктураДанных.ВариантПланирования <> ТекущийОбъект.ВариантПланирования
			ИЛИ СтруктураДанных.ТехническийПроект <> ТекущийОбъект.ТехническийПроект
			ИЛИ СтруктураДанных.Версия <> ТекущийОбъект.Версия
			ИЛИ СтруктураДанных.Библиотека <> ТекущийОбъект.Библиотека
			ИЛИ СтруктураДанных.СтатусВыполнения <> ТекущийОбъект.СтатусВыполнения
			ИЛИ СтруктураДанных.СрокВыполнения <> ТекущийОбъект.СрокВыполнения
			ИЛИ СтруктураДанных.ПубликуемыйСрокВыполнения <> ТекущийОбъект.ПубликуемыйСрокВыполнения
			ИЛИ СтруктураДанных.Ответственный <> ТекущийОбъект.Ответственный
			ИЛИ СтруктураДанных.Комментарий <> ТекущийОбъект.Комментарий Тогда
			
			ТекущийОбъект.Пользователь = Пользователи.ТекущийПользователь();
			
			ЕстьИзменения = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЕстьИзменения Тогда
		ТекущийОбъект.Период = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПланированияПриИзменении(Элемент)
	
	ПриИзмененииВариантаПланированияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	УстановитьНадписьПоРазличиюВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПриИзменении(Элемент)
	
	УстановитьНадписьПоРазличиюВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура ТехническийПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораТехническогоПроекта = Новый Структура;
	ПараметрыВыбораТехническогоПроекта.Вставить("Версия", "Указанная");
	ПараметрыВыбораТехническогоПроекта.Вставить("ВерсияДляОтбора", Запись.Версия);
	ПараметрыВыбораТехническогоПроекта.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ТехническиеПроекты.Форма.ФормаВыбора", ПараметрыВыбораТехническогоПроекта, Элементы.ТехническийПроект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТехническийПроектПриИзменении(Элемент)
	
	УстановитьНадписьПоРазличиюВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура БиблиотекаПриИзменении(Элемент)
	
	ПриИзмененииБиблиотекиСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииВариантаПланированияСервер()

	ОпределитьВерсиюБиблиотекиИСтатусВыполнения();
	УстановитьВидимостьЭлементовПланирования();
	УстановитьНадписьПоРазличиюВерсий();
	УстановитьВидимостьЗаголовокКомментарияКВерсииБиблиотеки();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииБиблиотекиСервер()
	
	ОпределитьВерсиюБиблиотекиИСтатусВыполнения();
	УстановитьВидимостьЗаголовокКомментарияКВерсииБиблиотеки();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовПланирования()
	
	Если Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ТехническийПроект Тогда
		Элементы.Библиотека.Видимость = Ложь;
		Элементы.ТехническийПроект.Видимость = Истина;
		Элементы.ТехническийПроектВерсия.Видимость = Истина;
	ИначеЕсли Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ИспользованиеБиблиотеки Тогда
		Элементы.Библиотека.Видимость = Истина;
		Элементы.ТехническийПроект.Видимость = Ложь;
		Элементы.ТехническийПроектВерсия.Видимость = Ложь;
	Иначе
		Элементы.Библиотека.Видимость = Ложь;
		Элементы.ТехническийПроект.Видимость = Ложь;
		Элементы.ТехническийПроектВерсия.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЗаголовокКомментарияКВерсииБиблиотеки()
	
	Если Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ИспользованиеБиблиотеки
		И ЗначениеЗаполнено(Запись.Библиотека) Тогда
		КомментарийДоступен = Истина;
	Иначе
		Элементы.КомментарийВерсияБиблиотеки.Заголовок = "";
		КомментарийДоступен = Ложь;
	КонецЕсли;
	
	Элементы.КомментарийВерсияБиблиотеки.Видимость = КомментарийДоступен;
	Элементы.ВерсияБиблиотеки.Видимость = КомментарийДоступен И ЗначениеЗаполнено(ВерсияБиблиотеки);
	Элементы.ВерсияБиблиотекиПлановаяДатаВыпуска.Видимость = КомментарийДоступен И ЗначениеЗаполнено(ВерсияБиблиотеки);
	
	Если КомментарийДоступен Тогда
		
		Если ЗначениеЗаполнено(ВерсияБиблиотеки) Тогда
			Если СтатусЗадачиВБиблиотеке = Перечисления.СтатусыОбщихЗадач.Запланирована Тогда
				ТекстЗаголовка = НСтр("ru='Задача запланирована в библиотеке к версии'");
			ИначеЕсли СтатусЗадачиВБиблиотеке = Перечисления.СтатусыОбщихЗадач.Выполнена Тогда
				ТекстЗаголовка = НСтр("ru='Задача выполнена в библиотеке в версии'");
			Иначе
				ТекстЗаголовка = НСтр("ru='Задача не запланирована в библиотеке'");
			КонецЕсли;
		Иначе
			ТекстЗаголовка = НСтр("ru='Задача не запланирована в библиотеке'");
		КонецЕсли;
		
		Элементы.КомментарийВерсияБиблиотеки.Заголовок = ТекстЗаголовка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОпределитьВерсиюБиблиотекиИСтатусВыполнения();
	УстановитьВидимостьЗаголовокКомментарияКВерсииБиблиотеки();
	УстановитьНадписьПоРазличиюВерсий();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьПоРазличиюВерсий()
	
	ЕстьРазличия = Ложь;
	
	Если Запись.ВариантПланирования = Перечисления.ВариантыПланированияОбщихЗадач.ТехническийПроект
		И ЗначениеЗаполнено(Запись.ТехническийПроект)
		И ЗначениеЗаполнено(Запись.Версия) Тогда
		
		ВерсияТехническогоПроекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ТехническийПроект, "Версия");
		
		Если ВерсияТехническогоПроекта <> Запись.Версия Тогда
			ЕстьРазличия = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЕстьРазличия Тогда
		Элементы.КомментарийПоРазличиямВерсий.Заголовок = НСтр("ru='Указанная версия и версия технического проекта различаются'");
		Элементы.КомментарийПоРазличиямВерсий.Видимость = Истина;
	Иначе
		Элементы.КомментарийПоРазличиямВерсий.Заголовок = "";
		Элементы.КомментарийПоРазличиямВерсий.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьВерсиюБиблиотекиИСтатусВыполнения()
	
	Если Запись.ВариантПланирования <> Перечисления.ВариантыПланированияОбщихЗадач.ИспользованиеБиблиотеки Тогда
		ВерсияБиблиотеки = Справочники.ВерсииПроекта.ПустаяСсылка();
		СтатусЗадачиВБиблиотеке = Перечисления.СтатусыОбщихЗадач.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыполнениеОбщихЗадачСрезПоследних.Версия КАК Версия,
	|	ВыполнениеОбщихЗадачСрезПоследних.статусВыполнения КАК Статус
	|ИЗ
	|	РегистрСведений.ВыполнениеОбщихЗадач.СрезПоследних(
	|			,
	|			ОбщаяЗадача = &ОбщаяЗадача
	|				И Проект = &Библиотека) КАК ВыполнениеОбщихЗадачСрезПоследних"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбщаяЗадача", Запись.ОбщаяЗадача);
	Запрос.УстановитьПараметр("Библиотека", Запись.Библиотека);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ВерсияБиблиотеки = Выборка.Версия;
		СтатусЗадачиВБиблиотеке = Выборка.Статус;
	Иначе
		ВерсияБиблиотеки = Справочники.ВерсииПроекта.ПустаяСсылка();
		СтатусЗадачиВБиблиотеке = Перечисления.СтатусыОбщихЗадач.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти