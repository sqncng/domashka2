#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьИнтервалРабочегоВремени();
	ПрочитатьНастройкиКалендаря();
	
	СформироватьИнтервалСтрокой();
	ОтобразитьИнформациюПоГрафику(ИнформацияПоГрафику, ИнтервалСтрокой, ОтображатьВремя);
	
	СписокВремениНачало =
		ОбщегоНазначенияСППРКлиентСервер.СписокВремени(,НачалоДня(ОтображатьВремяС), КонецДня(ОтображатьВремяС));
		
	СписокВремениОкончание =
		ОбщегоНазначенияСППРКлиентСервер.СписокВремени(, НачалоДня(ОтображатьВремяПо)+ 3600, КонецДня(ОтображатьВремяПо));
	
	ЗаполнитьСписокВремени(Элементы.ОтображатьВремяС, СписокВремениНачало);
	ЗаполнитьСписокВремени(Элементы.ОтображатьВремяПо, СписокВремениОкончание);
	
	УстановитьДоступностьИнтервалаВремени(Элементы, ОтображатьВремя);
	УстановитьДоступностьИнтервалаНапоминаний(Элементы, НапоминатьОСобытияхКалендаря);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтображатьВремяПоГрафикуПриИзменении(Элемент)
	
	УстановитьДоступностьИнтервалаВремени(Элементы, ОтображатьВремя);
	ОтобразитьИнформациюПоГрафику(ИнформацияПоГрафику, ИнтервалСтрокой, ОтображатьВремя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьВремяВИнтервалеПриИзменении(Элемент)
	
	УстановитьДоступностьИнтервалаВремени(Элементы, ОтображатьВремя);
	ОтобразитьИнформациюПоГрафику(ИнформацияПоГрафику, ИнтервалСтрокой, ОтображатьВремя);
	
КонецПроцедуры

&НаКлиенте
Процедура НапоминатьОСобытияхКалендаряПриИзменении(Элемент)
	
	Если НЕ НапоминатьОСобытияхКалендаря Тогда
		ИнтервалНопоминаний = 0;
	КонецЕсли;
	
	УстановитьДоступностьИнтервалаНапоминаний(Элементы, НапоминатьОСобытияхКалендаря);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьНастройкиКалендаря();
	
	ОбщегоНазначенияСППРКЛиент.ПереключитьОбработчикОжиданияНапоминанийОСобытияхКалендаря(НапоминатьОСобытияхКалендаря);
	
	Результат = Новый Структура;
	Результат.Вставить("ОтображатьВремя", ОтображатьВремя);
	Результат.Вставить("ОтображатьВремяС", ОтображатьВремяС);
	Результат.Вставить("ОтображатьВремяПо", ОтображатьВремяПо);
	Результат.Вставить("ТочностьШкалыВремени", ТочностьШкалыВремени);
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьИнтервалаВремени(Элементы, ОтображатьВремя)
	
	Элементы.ОтображатьВремяС.Доступность = (ОтображатьВремя = 1);
	Элементы.ОтображатьВремяПо.Доступность = (ОтображатьВремя = 1);
	
КонецПРоцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьИнтервалаНапоминаний(Элементы, НапоминатьОСобытияхКалендаря)
	
	Элементы.ИнтервалНапоминаний.Доступность = НапоминатьОСобытияхКалендаря;

КонецПРоцедуры

&НаСервере
Процедура ПрочитатьИнтервалРабочегоВремени()
	
	НачалоИнтервалаРабочегоВремени = Константы.НачалоИнтервалаРабочегоВремени.Получить();
	ОкончаниеИнтервалаРабочегоВремени = Константы.ОкончаниеИнтервалаРабочегоВремени.Получить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьИнформациюПоГрафику(ИнформацияПоГрафику, ИнтервалСтрокой, ОтображатьВремя)
	
	Если ОтображатьВремя = 0 Тогда
		ИнформацияПоГрафику = ИнтервалСтрокой;
	Иначе
		ИнформацияПоГрафику = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИнтервалСтрокой()
	
	Если Не ЗначениеЗаполнено(НачалоИнтервалаРабочегоВремени)
		И Не ЗначениеЗаполнено(ОкончаниеИнтервалаРабочегоВремени) Тогда
		ИнтервалСтрокой = НСтр("ru='<интервал не задан>'");
	Иначе
		СтрокаНачало = Формат(НачалоИнтервалаРабочегоВремени, "ДФ=ЧЧ:мм; ДП=00:00");
		СтрокаОкончание = Формат(ОкончаниеИнтервалаРабочегоВремени, "ДФ=ЧЧ:мм; ДП=00:00");
		
		ИнтервалСтрокой = НСтр("ru='с %НачалоИнтервала% по %ОкончаниеИнтервала%'");
		ИнтервалСтрокой = СтрЗаменить(ИнтервалСтрокой, "%НачалоИнтервала%", СтрокаНачало);
		ИнтервалСтрокой = СтрЗаменить(ИнтервалСтрокой, "%ОкончаниеИнтервала%", СтрокаОкончание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиКалендаря()
	
	ИмяОбъекта = "НастройкиКалендаряПользователя";
	
	НастройкаОтображатьВремя = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "ОтображатьВремя");
	
	Если НастройкаОтображатьВремя = Неопределено Тогда
		ОтображатьВремя = 0;
	Иначе
		ОтображатьВремя = НастройкаОтображатьВремя;
	КонецЕсли;
	
	Если ОтображатьВремя = 1 Тогда
		
		НастройкаОтображатьВремяС = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "ОтображатьВремяС");
		
		Если НастройкаОтображатьВремяС <> Неопределено Тогда
			ОтображатьВремяС = НастройкаОтображатьВремяС;
		КонецЕсли;
		
		НастройкаОтображатьВремяПо = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "ОтображатьВремяПо");
		
		Если НастройкаОтображатьВремяПо <> Неопределено Тогда
			ОтображатьВремяПо = НастройкаОтображатьВремяПо;
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкаТочностьШкалыВремени = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "ТочностьШкалыВремени");
	
	Если НастройкаТочностьШкалыВремени = Неопределено Тогда
		ТочностьШкалыВремени = 30;
	Иначе
		ТочностьШкалыВремени = НастройкаТочностьШкалыВремени;
	КонецЕсли;
	
	НапоминатьОСобытияхКалендаря = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "НапоминатьОСобытияхКалендаря", Ложь);
	
	Если НапоминатьОСобытияхКалендаря Тогда
		ИнтервалНапоминаний = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта, "ИнтервалНапоминаний", 0);
	Иначе
		ИнтервалНапоминаний = 0;
	КонецЕсли;
	
	СокращатьПустыеИнтервалыМеждуРаботами = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяОбъекта,
	                                        "СокращатьПустыеИнтервалыМеждуРаботами",
	                                        Ложь);
											
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиКалендаря()
	
	ИмяОбъекта = "НастройкиКалендаряПользователя";
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "ОтображатьВремя", ОтображатьВремя);
	
	Если ОтображатьВремя = 1 Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "ОтображатьВремяС", ОтображатьВремяС);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "ОтображатьВремяПо", ОтображатьВремяПо);
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "ТочностьШкалыВремени", ТочностьШкалыВремени);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "НапоминатьОСобытияхКалендаря", НапоминатьОСобытияхКалендаря);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "ИнтервалНапоминаний", ИнтервалНапоминаний);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяОбъекта, "СокращатьПустыеИнтервалыМеждуРаботами", СокращатьПустыеИнтервалыМеждуРаботами);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВремени(Элемент, СписокВремени)
	
	Для Каждого ЭлементСписка Из СписокВремени Цикл
		Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти