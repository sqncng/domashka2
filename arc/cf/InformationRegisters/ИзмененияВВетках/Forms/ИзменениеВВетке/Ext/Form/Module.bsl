#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПОльзователи.ТекущийПользователь();
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	ДоступноИзменениеХронометража = УправлениеДоступом.ЕстьРоль("ИзменениеДанныхХронометража");
	
	ВидДеятельностиДляСогласованияИзменений = Константы.ВидДеятельностиДляСогласованияИзмененийМетаданныхВВетках.Получить();
	
	НастроитьКомандуХронометража();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПереключенХронометраж"
		И ЗначениеЗаполнено(ВидДеятельностиДляСогласованияИзменений) Тогда
		УчетВремениКлиентСервер.ОбработатьПереключениеХронометража(Параметр, ЭтаФорма, ВидДеятельностиДляСогласованияИзменений);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВеткаПриИзменении(Элемент)
	
	ОпределитьПроектПоВетке();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусСогласованияПриИзменении(Элемент)
	
	ПриИзмененииСтатусаСогласованияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектМетаданныхПриИзменении(Элемент)
	
	УстановитьСписокВыбораПодчиненныхОбъектов(Запись.ОбъектМетаданных, Элементы.ПодчиненныйОбъект.СписокВыбора, СписокПодчиненныхОбъектов);
	УстановитьСписокВыбораПодчиненныхОбъектов(Запись.ОбъектМетаданных, Элементы.ПодчиненныйОбъект1.СписокВыбора, СписокПодчиненныхОбъектов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныйОбъектПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ПодчиненныйОбъектСтрока) Тогда
		Запись.ПодчиненныйОбъект = Неопределено;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныйОбъектОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Запись.ПодчиненныйОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныйОбъектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СписокВыбораЭлемента = Элемент.СписокВыбора;
	ИндексЭлемента = СписокВыбораЭлемента.Индекс(СписокВыбораЭлемента.НайтиПоЗначению(ВыбранноеЗначение));
	Запись.ПодчиненныйОбъект = СписокПодчиненныхОбъектов.Получить(ИндексЭлемента).Значение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереключитьХронометраж(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВидДеятельностиДляСогласованияИзменений) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеХронометража = ПереключитьХронометражНаСервере(ВидДеятельностиДляСогласованияИзменений);
	
	Элементы.ПереключитьХронометраж.Пометка = НЕ Элементы.ПереключитьХронометраж.Пометка;
	
	Оповестить("ПереключенХронометраж", ДанныеХронометража, ЭтотОбъект);
	
	Если ДанныеХронометража.ХронометражЗавершен Тогда
		ДанныеОповещения = Новый Структура;
		ДанныеОповещения.Вставить("Начало", ДанныеХронометража.НачалоЗавершеннойРаботы);
		ДанныеОповещения.Вставить("Окончание", ДанныеХронометража.ОкончаниеЗавершеннойРаботы);
		
		Оповестить("ЗаписаныДанныеКалендаря", ДанныеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиККоммитамВетки(Команда)
	ТекстКоманды = ПерейтиККоммитамВеткиСервер(Запись.Ветка);
	НачатьЗапускПриложения(Новый ОписаниеОповещения, ТекстКоманды);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиККоммитамПоМетаданному(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаККоммитамПоМетаданному(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка, "commits");
		
	ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы);
		
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКИзменениямВнутриФайла(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаККоммитамПоМетаданному(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка, "blame");
		
	ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПерейтиКСравнениюСВеткойПриемником(Команда)
	
	ПодробноеОписаниеИзменений = Запись.ПодробноеОписаниеИзменений; 
	
	ИзмененыеФайлы = ПерейтиКСравнениюСВеткойПриемникомСервер(Запись.Ветка, ПодробноеОписаниеИзменений);
	
	ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы);
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияСПредыдущегоСогласованияПоВсемОбъектам(Команда)
	
	ТекстКоманды = ГиперссылкаИзмененияСПредыдущегоСогласованияПоВсемОбъектам(Запись.Ветка,
		Запись.ОбъектМетаданных, Запись.ПодчиненныйОбъект);
		
	Если НЕ ЗначениеЗаполнено(ТекстКоманды) Тогда
		Возврат;
	КонецЕсли;	
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения, ТекстКоманды);
		
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияСПредыдущегоСогласованияПоТекущемуОбъекту(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаКИзменениямСПоследнегоСогласования(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка,
		Запись.ОбъектМетаданных, Запись.ПодчиненныйОбъект);
		
	Если ИзмененыеФайлы = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не найдено предыдущее согласование.'"));
		Возврат;
	КонецЕсли;		
		
	ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСВеткойПриемникомНаКоммитСогласования(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаКСравнениюВеткиПриемникаСПредыдущимКоммитомСогласования(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка,
		Запись.ОбъектМетаданных, Запись.ПодчиненныйОбъект);
		
	ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСВерсиейВеткиПриемника(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаККоммитамПоМетаданному(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка, "commits");

	Если ИзмененыеФайлы.Количество() = 1 Тогда
		ПоказатьСравнениеФайлаССостояниемВеткиПриемника(ИзмененыеФайлы[0].ИмяФайла);
	ИначеЕсли ИзмененыеФайлы.Количество() >= 1 Тогда
		Спс = ОбщегоНазначенияСППРКлиент.СписокИзмененныхФайловДляВыбора(ИзмененыеФайлы);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("СравнитьСВерсиейВеткиПриемникаЗавершение", ЭтотОбъект);
		Спс.ПоказатьВыборЭлемента(ОбработкаОповещения, НСтр("ru = 'Выберите файл'"))	
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСВерсиейПоследнегоСогласования(Команда)
	
	ИзмененыеФайлы = ИзмененыеФайлыДляПереходаКИзменениямСПоследнегоСогласования(
		Запись.ПодробноеОписаниеИзменений, Запись.Ветка,
		Запись.ОбъектМетаданных, Запись.ПодчиненныйОбъект);

	Если ИзмененыеФайлы = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не найдено предыдущее согласование.'"));
		Возврат;
	КонецЕсли;		

	Если ИзмененыеФайлы.Количество() = 1 Тогда
		ПоказатьСравнениеФайлаССостояниемКоммитаСогласования(ИзмененыеФайлы[0]);
	ИначеЕсли ИзмененыеФайлы.Количество() >= 1 Тогда
		Спс = ОбщегоНазначенияСППРКлиент.СписокИзмененныхФайловДляВыбора(ИзмененыеФайлы);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("СравнитьСВерсиейПоследнегоСогласованияЗавершение", ЭтотОбъект);
		Спс.ПоказатьВыборЭлемента(ОбработкаОповещения, НСтр("ru = 'Выберите файл'"))	
	КонецЕсли;		
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОпределитьПроектПоВетке();
	ЗаполнитьПодчиненныйОбъектСтрокой();
	УстановитьСписокВыбораПодчиненныхОбъектовСервер(Запись.ОбъектМетаданных, Элементы.ПодчиненныйОбъект.СписокВыбора, СписокПодчиненныхОбъектов);
	УстановитьСписокВыбораПодчиненныхОбъектовСервер(Запись.ОбъектМетаданных, Элементы.ПодчиненныйОбъект1.СписокВыбора, СписокПодчиненныхОбъектов);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСписокВыбораПодчиненныхОбъектов(ОбъектМетаданных, СписокВыбораЭлемента, СписокПодчиненныхОбъектов)
	
	СписокВыбораЭлемента.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОбъектМетаданных) Тогда
		СписокПодчиненныхОбъектов.Очистить();
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	УстановитьСписокВыбораПодчиненныхОбъектовСервер(ОбъектМетаданных, СписокВыбора, СписокПодчиненныхОбъектов);
	
	Для Каждого ЭлементСписка Из СписокВыбора Цикл
		СписокВыбораЭлемента.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораПодчиненныхОбъектовСервер(ОбъектМетаданных, СписокВыбора, СписокПодчиненныхОбъектов)
	
	Если НЕ ЗначениеЗаполнено(ОбъектМетаданных) Тогда
		СписокПодчиненныхОбъектов.Очистить();
		Возврат;
	КонецЕсли;
	
	Справочники.Ошибки.УстановитьСписокВыбораПодчиненныхОбъектов(ОбъектМетаданных, СписокВыбора, СписокПодчиненныхОбъектов);
		
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСтатусаСогласованияСервер()
	
	Запись.УстановилСтатус = ТекущийПользователь;
	Запись.ДатаИзмененияСтатусаСогласования = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодчиненныйОбъектСтрокой()
	
	Если ЗначениеЗаполнено(Запись.ПодчиненныйОбъект) Тогда
		Если ТипЗнч(Запись.ПодчиненныйОбъект) = Тип("СправочникСсылка.КомандыОбъектовМетаданных")
			ИЛИ ТипЗнч(Запись.ПодчиненныйОбъект) = Тип("СправочникСсылка.ФормыОбъектовМетаданных")
			ИЛИ ТипЗнч(Запись.ПодчиненныйОбъект) = Тип("СправочникСсылка.МакетыОбъектовМетаданных")
			ИЛИ ТипЗнч(Запись.ПодчиненныйОбъект) = Тип("СправочникСсылка.РеквизитыОбъектовМетаданных") Тогда
			
			ИмяОбъекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ПодчиненныйОбъект, "Имя");
		
			ПодчиненныйОбъектСтрока =
				РаботаСОбъектамиМетаданных.ПредставлениеПодчиненногоОбъекта(Запись.ПодчиненныйОбъект, ИмяОбъекта);
				
		ИначеЕсли ТипЗнч(Запись.ПодчиненныйОбъект) = Тип("ПеречислениеСсылка.ТипыМодулейОбъектовМетаданных") Тогда
			ПодчиненныйОбъектСтрока = Строка(Запись.ПодчиненныйОбъект);	
		Иначе
			ПодчиненныйОбъектСтрока = "";
		КонецЕсли;
	Иначе
		ПодчиненныйОбъектСтрока = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПроектПоВетке()
	
	Если ЗначениеЗаполнено(Запись.Ветка) Тогда
		Проект = ОБщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Ветка, "Владелец");
	Иначе
		Проект = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПереключитьХронометражНаСервере(Ссылка)
	
	Возврат УчетВремени.ПереключитьХронометраж(Ссылка);
	
КонецФункции

Процедура НастроитьКомандуХронометража()
	
	КнопкаХронометража = Элементы.Найти("ПереключитьХронометраж");
	
	Если КнопкаХронометража <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ВидДеятельностиДляСогласованияИзменений) И ДоступноИзменениеХронометража Тогда
			
			КнопкаХронометража.Доступность = Истина;
			Если УчетВремени.ХронометражВключен(ТекущийПользователь, ВидДеятельностиДляСогласованияИзменений, "") Тогда
				КнопкаХронометража.Пометка = Истина;
			Иначе
				КнопкаХронометража.Пометка = Ложь;
			КонецЕсли;
		Иначе
			КнопкаХронометража.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПерейтиККоммитамВеткиСервер(Ветка)
	
	Возврат РаботаCGit.ПерейтиККоммитамВетки(Ветка);
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзмененыеФайлыДляПереходаККоммитамПоМетаданному(Исходник, Ветка, Тип)
	
	Возврат РаботаCGit.ИзмененыеФайлыДляПереходаККоммитамПоМетаданному(Исходник, Ветка, Тип);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьГиперссылкуПоИзмененнымФайлам(ИзмененыеФайлы)
	
	Если ИзмененыеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если ИзмененыеФайлы.Количество() = 1 Тогда
		НачатьЗапускПриложения(Новый ОписаниеОповещения, ИзмененыеФайлы[0].Гиперссылка);
	ИначеЕсли ИзмененыеФайлы.Количество() >= 1 Тогда
		Спс = ОбщегоНазначенияСППРКлиент.СписокИзмененныхФайловДляВыбора(ИзмененыеФайлы);
		
		ОбработкаОповещения = Новый ОписаниеОповещения("ВыборФайлаДляПереходаНаГитСерверЗавершение", ЭтотОбъект);
		Спс.ПоказатьВыборЭлемента(ОбработкаОповещения, НСтр("ru = 'Выберите файл'"))	
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаДляПереходаНаГитСерверЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения, Результат.Значение.Гиперссылка);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПерейтиКСравнениюСВеткойПриемникомСервер(ВеткаОтбор, Исходник)
	
	Возврат РаботаCGit.ПерейтиКСравнениюСВеткойПриемникомСервер(ВеткаОтбор, Исходник);
	
КонецФункции	

&НаСервере
Функция ГиперссылкаИзмененияСПредыдущегоСогласованияПоВсемОбъектам(Ветка, ОбъектМетаданных, ПодчиненныйОбъект)
	
	Возврат РаботаCGit.ГиперссылкаИзмененияСПредыдущегоСогласованияПоВсемОбъектам(Ветка, ОбъектМетаданных, ПодчиненныйОбъект);
	
КонецФункции   

&НаСервере
Функция ИзмененыеФайлыДляПереходаКИзменениямСПоследнегоСогласования(Исходник, Ветка, ОбъектМетаданных, ПодчиненныйОбъект)
	
	Возврат РаботаCGit.ИзмененыеФайлыДляПереходаКИзменениямСПоследнегоСогласования(Исходник, Ветка, ОбъектМетаданных, ПодчиненныйОбъект);
	
КонецФункции

&НаСервере
Функция ИзмененыеФайлыДляПереходаКСравнениюВеткиПриемникаСПредыдущимКоммитомСогласования(Исходник, Ветка, ОбъектМетаданных, ПодчиненныйОбъект)
	
	Возврат РаботаCGit.ИзмененыеФайлыДляПереходаКСравнениюВеткиПриемникаСПредыдущимКоммитомСогласования(Исходник, Ветка, ОбъектМетаданных, ПодчиненныйОбъект);
	
КонецФункции

&НаКлиенте
Процедура ПоказатьСравнениеФайлаССостояниемВеткиПриемника(ИмяФайла)
	ТекущийТекстФайла = ТекущийТекстФайлаСервер(Запись.Ветка, ИмяФайла);
	ТекстФайлаВВеткеПриемнике = ТекстФайлаВВеткеПриемнике(Запись.Ветка, ИмяФайла);
	
	ПараметрыСравнения = Новый Структура;
	ПараметрыСравнения.Вставить("ТекстДляСравнения2", ТекущийТекстФайла);
	ПараметрыСравнения.Вставить("ОписаниеТекста2", НСтр("ru = 'Текущее значение в ветке'"));
	ПараметрыСравнения.Вставить("ТекстДляСравнения1", ТекстФайлаВВеткеПриемнике);
	ПараметрыСравнения.Вставить("ОписаниеТекста1", НСтр("ru = 'Значение в ветке приемнике'"));
	ПараметрыСравнения.Вставить("ИмяФайлаРепозитория", ИмяФайла);
	ТестированиеКлиент.ПоказатьОкноСравнениеТекста(ПараметрыСравнения);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСравнениеФайлаССостояниемКоммитаСогласования(ДанныеФайла)
	ИмяФайла = ДанныеФайла.ИмяФайла;
	ТекущийТекстФайла = ТекущийТекстФайлаСервер(Запись.Ветка, ИмяФайла);
	ТекстФайлаНаКоммит = ТекстФайлаНаКоммит(Запись.Ветка, ДанныеФайла.КоммитСогласования, ИмяФайла);
	
	ПараметрыСравнения = Новый Структура;
	ПараметрыСравнения.Вставить("ТекстДляСравнения2", ТекущийТекстФайла);
	ПараметрыСравнения.Вставить("ОписаниеТекста2", НСтр("ru = 'Текущее значение в ветке'"));
	ПараметрыСравнения.Вставить("ТекстДляСравнения1", ТекстФайлаНаКоммит);
	ПараметрыСравнения.Вставить("ОписаниеТекста1", НСтр("ru = 'Значение на момент согласования'"));
	ПараметрыСравнения.Вставить("ИмяФайлаРепозитория", ИмяФайла);
	ТестированиеКлиент.ПоказатьОкноСравнениеТекста(ПараметрыСравнения);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекущийТекстФайлаСервер(ВеткаОтбор, ИмяФайла)
	
	Ветка = ВеткаОтбор;
	ДанныеВетки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ветка, "Владелец,Имя");
	Возврат ТестированиеЗапускТестирования.ТекстФайлаИзРепозитория(ДанныеВетки.Владелец, ИмяФайла, ДанныеВетки.Имя);
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстФайлаВВеткеПриемнике(ВеткаОтбор, ИмяФайла)
	
	Ветка = ВеткаОтбор;
	ДанныеВетки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ветка, "Владелец,Приемник.Имя");
	Возврат ТестированиеЗапускТестирования.ТекстФайлаИзРепозитория(ДанныеВетки.Владелец, ИмяФайла, ДанныеВетки.ПриемникИмя);
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстФайлаНаКоммит(ВеткаОтбор, Коммит, ИмяФайла)
	
	Ветка = ВеткаОтбор;
	ДанныеВетки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ветка, "Владелец");
	Возврат ТестированиеЗапускТестирования.ТекстФайлаИзРепозитория(ДанныеВетки.Владелец, ИмяФайла, Коммит);
	
КонецФункции

&НаКлиенте
Процедура СравнитьСВерсиейПоследнегоСогласованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьСравнениеФайлаССостояниемКоммитаСогласования(Результат.Значение)
	
КонецПроцедуры	

&НаКлиенте
Процедура СравнитьСВерсиейВеткиПриемникаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьСравнениеФайлаССостояниемВеткиПриемника(Результат.Значение.ИмяФайла)
	
КонецПроцедуры	

#КонецОбласти