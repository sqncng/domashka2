#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОтразитьИзмененияПлановВПроектах(ЕстьОшибки) Экспорт
	
	НачатьТранзакцию();
	
	Для Каждого ВетвьОтветственного из ДеревоПроектов.Строки Цикл
		Для Каждого СтрокаДерева из ВетвьОтветственного.Строки Цикл
			
			Если СтрокаДерева.ТехническийПроект.ПлановаяДатаНачала <> СтрокаДерева.ПлановаяДатаНачала
				ИЛИ СтрокаДерева.ТехническийПроект.ПлановаяДатаОкончания <> СтрокаДерева.ПлановаяДатаОкончания Тогда
				
				Объект = СтрокаДерева.ТехническийПроект.ПолучитьОбъект();
				
				Попытка
					Объект.Заблокировать();
				Исключение
					СоставноеСообщение = НСтр(" ru= ""Не удалось установить срок для технического проекта: %Ссылка% по причине: %ОписаниеОшибки%""; ");
					СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%Ссылка%", СтрокаДерева.ТехническийПроект);
					СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%ОписаниеОшибки%", ОписаниеОшибки());
					Сообщить(СоставноеСообщение);
					ЕстьОшибки = Истина;
					
					ОтменитьТранзакцию();
					
					Возврат;
				КонецПопытки;
				
				Попытка
					Объект.ПлановаяДатаНачала = СтрокаДерева.ПлановаяДатаНачала;
					Объект.ПлановаяДатаОкончания = СтрокаДерева.ПлановаяДатаОкончания;
					Объект.Записать();
					Объект.Разблокировать();
				Исключение
					СоставноеСообщение = НСтр(" ru= ""Не удалось установить срок для технического проекта: %Ссылка% по причине: %ОписаниеОшибки%""; "); 
					СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%Ссылка%", СтрокаДерева.ТехническийПроект);
					СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%ОписаниеОшибки%", ОписаниеОшибки());
					Сообщить(СоставноеСообщение);
					ЕстьОшибки = Истина;
					
					ОтменитьТранзакцию();
					
					Возврат;
				КонецПопытки;
	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)	
	
	СтандартнаяОбработка = Ложь;
	
	ДеревоПроектов.Колонки.Очистить();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
		
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		НастройкиКомпоновкиДанных,
		ДанныеРасшифровки,
		,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
	);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ДеревоПроектов);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли