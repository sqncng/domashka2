#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("Расшифровка") И Параметры.Расшифровка <> Неопределено 
		И Параметры.Свойство("РасшифровкаОшибок") Тогда
		ЭтаФорма.Заголовок = "Тесты, заблокированные ошибками (Расшифровка)";
		КомпоновщикНастроекФормы.ЗагрузитьНастройки(Параметры.Расшифровка.ПрименяемыеНастройки);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	Параметры = Форма.Параметры;
	Настройки = Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	
	Если Параметры.Свойство("ОтборОшибка") Тогда
		ПараметрПоНастройкам(Настройки, "ОтборПроект").Значение =  Параметры.ОтборОшибка.Владелец;
		ПараметрПоНастройкам(Настройки, "ОтборОшибка").Значение = Параметры.ОтборОшибка;
		ПараметрПоНастройкам(Настройки, "ОтборВетка").Значение = Неопределено;
		ПараметрПоНастройкам(Настройки, "ВключатьТехПроектыВерсии").Значение = Истина;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// Получаем общий заголовок для колонок с ветками
	Заголовок = Метаданные.Справочники.Ветки.Представление() + Символы.ПС;
	// Общий заголовок выносится в отдельную общую ячейку
	ТестированиеСлужебныйВызовСервера.ОбъединитьЗаголовкиВТабличномДокументе(ДокументРезультат, Заголовок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрПоНастройкам(КомпоновщикНастроек, ИмяЭлемента)
	Параметр = Новый ПараметрКомпоновкиДанных(ИмяЭлемента);
	Для Каждого Элем Из КомпоновщикНастроек.Элементы Цикл
		Если ТипЗнч(Элем) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") 
			И Элем.Параметр = Параметр Тогда
			Возврат Элем; 
		КонецЕсли;
	КонецЦикла;
КонецФункции

#КонецОбласти

#КонецЕсли