///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения
//         - Неопределено
//   КлючВарианта - Строка
//                - Неопределено
//   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.ФормироватьСразу = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОчередиЗадач") Тогда
		
		Настройки = КомпоновщикНастроек.ПолучитьНастройки();
		СтруктураНастроек = Настройки.Структура;
		
		Для Каждого ЭлементСтруктурыНастроек Из СтруктураНастроек Цикл
			Если ЭлементСтруктурыНастроек.Имя = НСтр("ru = 'Очередь задач'") Тогда
				СтруктураНастроек.Удалить(ЭлементСтруктурыНастроек);
			КонецЕсли;
		КонецЦикла;
		
		ОтработатьИзменениеНастроек(ДокументРезультат, Настройки, ДанныеРасшифровки, СтандартнаяОбработка);
		
	Иначе
		
		Настройки = КомпоновщикНастроек.ПолучитьНастройки();
		
		ПриоритетыОчередиРабот.УстановитьУсловноеЭлементаФормы(Настройки.УсловноеОформление, "Приоритет", "Приоритет");
		
		РегистрыСведений.ОчередиРаботСотрудников.УстановитьФорматУсловногоОформленияПорядокНомерОчереди(Настройки.УсловноеОформление,
		                                                                                                "Номер",
		                                                                                                Пользователи.ТекущийПользователь());
		
		ОтработатьИзменениеНастроек(ДокументРезультат, Настройки, ДанныеРасшифровки, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтработатьИзменениеНастроек(ДокументРезультат, Настройки, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, Новый Структура, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

#КонецОбласти


#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли