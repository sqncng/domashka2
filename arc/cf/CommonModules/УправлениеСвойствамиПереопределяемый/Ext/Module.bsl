///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_СценарииРаботыПользователей";
	Набор.Идентификатор = Новый УникальныйИдентификатор("c77fec32-78ab-4d83-a2fd-bd5ede593d06");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_СценарииРаботыПользователей_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("6fbaaabe-5afa-4e6b-8cb8-06ac15164870");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Процессы";
	Набор.Идентификатор = Новый УникальныйИдентификатор("accd7c67-3524-4053-99fd-51566cecade4");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Процессы_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("277e1f06-e4f6-4c23-8d31-0d4347e20711");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_НастройкиЗапускаСценариев";
	Набор.Идентификатор = Новый УникальныйИдентификатор("6c2c5a32-a465-4e85-9b91-7ab5ec7e7a0f");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_НастройкиЗапускаСценариев_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("bd1c53f5-89be-47a5-8527-d5cce6df9908");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_НастройкиЗапускаПроцессов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("bd77a687-a174-4d4e-984e-4279eedd9d52");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_НастройкиЗапускаПроцессов_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("9ac217a0-b003-4546-9c81-5cae3bc1f2b7");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ВидыДеятельности";
	Набор.Идентификатор = Новый УникальныйИдентификатор("5e684c0d-d8a1-4a01-87bb-339168534475");
	
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Ветки";
	Набор.Идентификатор = Новый УникальныйИдентификатор("2e4aa710-e586-4ed1-8307-1c6d7757fdeb");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Ветки_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("8826e661-c3a6-445c-88b7-dd93c548ed71");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_ФункцииСистемы";
	Набор.Идентификатор = Новый УникальныйИдентификатор("5ffc2ed0-fe9b-48ef-a66d-d446ec9ee424");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_ФункцииСистемы_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("3ee0209f-a12e-458c-858e-c08bb47d6b01");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_РеквизитыОбъектовМетаданных";
	Набор.Идентификатор = Новый УникальныйИдентификатор("3f6b6b03-1473-4020-a300-4e0d985b05c3");
	Набор.ЭтоГруппа = Истина;
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_РеквизитыОбъектовМетаданных_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("476dde75-4048-46ac-9468-a2393d81bd2f"); 
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Патчи";
	Набор.Идентификатор = Новый УникальныйИдентификатор("50db60c7-715b-4a58-8178-c60c071a9e35");
	
КонецПроцедуры

// Получает наименования наборов свойств второго уровня на разных языках.
//
// Параметры:
//  Наименования - Соответствие - представление набора на переданном языке:
//     * Ключ     - Строка - Имя набора свойств. Например, "Справочник_Партнеры_Общие".
//     * Значение - Строка - Наименование набора для переданного кода языка.
//  КодЯзыка - Строка - Код языка. Например, "en".
//
// Пример:
//  Наименования["Справочник_Партнеры_Общие"] = НСтр("ru='Общие'; en='General';", КодЯзыка);
//
Процедура ПриПолученииНаименованийНаборовСвойств(Наименования, КодЯзыка) Экспорт
	
	Наименования["Справочник_СценарииРаботыПользователей_Общие"] = НСтр("ru = 'Общие';
                |en = 'Main'", КодЯзыка);

	Наименования["Справочник_Процессы_Общие"] = НСтр("ru = 'Общие';
                |en = 'Main'", КодЯзыка);

	Наименования["Справочник_НастройкиЗапускаПроцессов_Общие"] = НСтр("ru = 'Общие';
                |en = 'Main'", КодЯзыка);
	
	Наименования["Справочник_НастройкиЗапускаСценариев_Общие"] = НСтр("ru = 'Общие';
                |en = 'Main'", КодЯзыка);
	
	Наименования["Справочник_Ветки_Общие"] = НСтр("ru = 'Общие';
                |en = 'Main'", КодЯзыка);
	
	Наименования["Справочник_ФункцииСистемы_Общие"] = НСтр("ru = 'Общие доп. свойства справочника ""Функции системы""'", КодЯзыка);
	
	Наименования["Справочник_РеквизитыОбъектовМетаданных_Общие"] = НСтр("ru = 'Общие доп. свойства справочника ""Реквизиты объектов метаданных""'", КодЯзыка);
	
КонецПроцедуры

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - ЛюбаяСсылка      - Ссылка на объект со свойствами.
//               - УправляемаяФорма - Форма объекта, к которому подключены свойства.
//               - ДанныеФормыСтруктура - Описание объекта, к которому подключены свойства.
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений - с колонками:
//                    Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений.
//                    ОбщийНабор - Булево - Истина, если набор свойств содержит свойства,
//                     общие для всех объектов.
//                    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//                    // или страница, которая создается, если наборов больше одного без учета
//                    // пустого набора, который описывает свойства группы удаленных реквизитов.
//                    
//                    // Если значение Неопределено, значит использовать значение по умолчанию.
//                    
//                    // Для любой группы управляемой формы.
//                    Высота                   - Число.
//                    Заголовок                - Строка.
//                    Подсказка                - Строка.
//                    РастягиватьПоВертикали   - Булево.
//                    РастягиватьПоГоризонтали - Булево.
//                    ТолькоПросмотр           - Булево.
//                    ЦветТекстаЗаголовка      - Цвет.
//                    Ширина                   - Число.
//                    ШрифтЗаголовка           - Шрифт.
//                    
//                    // Для обычной группы и страницы.
//                    Группировка              - ГруппировкаПодчиненныхЭлементовФормы.
//                    
//                    // Для обычной группы.
//                    Отображение              - ОтображениеОбычнойГруппы.
//                    
//                    // Для страницы.
//                    Картинка                 - Картинка.
//                    ОтображатьЗаголовок      - Булево.
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хэш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	Если ТипСсылки = Тип("СправочникСсылка.ТехническиеПроекты") Тогда
		
		ЗаполнитьНаборыСвойствТехническогоПроекта(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Идеи") Тогда
		
		ЗаполнитьНаборыСвойствИдеи(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ЗадачиПроцесса") Тогда
		
		ЗаполнитьНаборыСвойствЗадачиПроцесса(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Ошибки") Тогда
		
		ЗаполнитьНаборыСвойствОшибки(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
		
		ЗаполнитьНаборыСвойствОбъектаМетаданных(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Подсистемы") Тогда
		
		ЗаполнитьНаборыСвойствПодсистемы(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
		
		ЗаполнитьНаборыСвойствФормыОбъектаМетаданных(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.КомандыОбъектовМетаданных") Тогда
		
		ЗаполнитьНаборыСвойствКомандыОбъектаМетаданных(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.РазделыПроекта") Тогда
		
		ЗаполнитьНаборыСвойствРазделаПроекта(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ЦелевыеЗадачи") Тогда
		
		ЗаполнитьНаборыСвойствЦелевойЗадачи(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВерсииПроекта") Тогда
		
		ЗаполнитьНаборыСвойствВерсииПроекта(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СборкиВерсии") Тогда
		
		ЗаполнитьНаборыСвойствСборокВерсий(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Процессы") Тогда
		
		ЗаполнитьНаборыСвойствПроцессы(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СценарииРаботыПользователей") Тогда
		
		ЗаполнитьНаборыСвойствСценарииРаботыПользователей(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.НастройкиЗапускаПроцессов") Тогда
		
		ЗаполнитьНаборыСвойствНастройкиЗапускаПроцессов(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.НастройкиЗапускаСценариев") Тогда
		
		ЗаполнитьНаборыСвойствНастройкиЗапускаСценариев(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Ветки") Тогда
		
		ЗаполнитьНаборыСвойствВеток(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ФункцииСистемы") Тогда
		
		ЗаполнитьНаборыСвойствФункцийСистемы(Объект, ТипСсылки, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.РеквизитыОбъектовМетаданных") Тогда
		
		ЗаполнитьНаборыСвойствРеквизитаОбъектаМетаданных(Объект, ТипСсылки, НаборыСвойств);
		
	КонецЕсли;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
//
// Параметры:
//  Объект                  - СправочникОбъект.РолиИсполнителей - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаборыСвойствТехническогоПроекта(ТехническийПроект, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(ТехническийПроект) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТехническийПроект, "Владелец");
	Иначе
		Объект = ТехническийПроект.Владелец;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект) И НЕ Объект.ЭтоГруппа Тогда
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ТехническиеПроекты_Общие;
		Строка.Заголовок = НСтр("ru = 'Для всех технических проектов'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Объект.НаборСвойствДляТехническихПроектов;
		Строка.Заголовок = НСтр("ru = 'Для технических проектов по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		// Свойства группы удаленных реквизитов.
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствИдеи(Идея, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Идея) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Идея, "Владелец");
	Иначе
		Объект = Идея.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Идеи_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех идей'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Объект.НаборСвойствДляИдей;
	Строка.Заголовок = НСтр("ru = 'Для идей по проекту'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствОшибки(Ошибка, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Ошибка) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ошибка, "Владелец");
	Иначе
		Объект = Ошибка.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Ошибки_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех ошибок'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Если ЗначениеЗаполнено(Объект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Объект.НаборСвойствДляОшибок;
		Строка.Заголовок = НСтр("ru = 'Для ошибок по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствЗадачиПроцесса(Задача, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТребуетсяПолучениеПроекта = Истина;
	
	Если ТипЗнч(Задача) = ТипСсылки Тогда
		Предмет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача, "Предмет");
	ИначеЕсли ТипЗнч(Задача) = Тип("ФормаКлиентскогоПриложения") Тогда
		Проект = Задача.ВладелецШаблона;
		ТребуетсяПолучениеПроекта = Ложь;
	Иначе
		Предмет = Задача.Предмет;
	КонецЕсли;
	
	Если ТребуетсяПолучениеПроекта Тогда
		Если ЗначениеЗаполнено(Предмет) Тогда
			Проект = ЗадачиПроцессовПереопределяемый.ПроектПредметаЗадачи(Предмет);
		Иначе
			Проект = Справочники.Проекты.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ЗадачиПроцесса_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех задач процесоов'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Проект.НаборСвойствДляЗадачиПроцесса;
		Строка.Заголовок = НСтр("ru = 'Для задач процесса по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствОбъектаМетаданных(ОбъектМетаданных, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(ОбъектМетаданных) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектМетаданных, "Владелец");
	Иначе
		Объект = ОбъектМетаданных.Владелец;
	КонецЕсли;
	
	Если Объект.ЭтоГруппа = Ложь Тогда
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ОбъектыМетаданных_Общие;
		Строка.Заголовок = НСтр("ru = 'Для всех объектов метаданных'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Объект.НаборСвойствДляОбъектовМетаданных;
		Строка.Заголовок = НСтр("ru = 'Для объектов метаданных по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		// Свойства группы удаленных реквизитов.
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПодсистемы(Подсистема, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(Подсистема) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подсистема, "Владелец");
	Иначе
		Объект = Подсистема.Владелец;
	КонецЕсли;
	
	Если Объект.ЭтоГруппа = Ложь Тогда
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Подсистемы_Общие;
		Строка.Заголовок = НСтр("ru = 'Для всех подсистем'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Объект.НаборСвойствДляПодсистем;
		Строка.Заголовок = НСтр("ru = 'Для подсистем по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
		
		// Свойства группы удаленных реквизитов.
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствФормыОбъектаМетаданных(ФормаОбъектаМетаданных, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ФормаОбъектаМетаданных) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФормаОбъектаМетаданных, "Владелец");
	Иначе
		Объект = ФормаОбъектаМетаданных.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ФормыОбъектовМетаданных_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех форм объектов метаданных'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Владелец");
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Проект.НаборСвойствДляФормОбъектовМетаданных;
		Строка.Заголовок = НСтр("ru = 'Для форм объектов метаданных по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствКомандыОбъектаМетаданных(КомандаОбъектаМетаданных, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(КомандаОбъектаМетаданных) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КомандаОбъектаМетаданных, "Владелец");
	Иначе
		Объект = КомандаОбъектаМетаданных.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КомандыОбъектовМетаданных_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех команд объектов метаданных'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Владелец");
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Проект.НаборСвойствДляКомандОбъектовМетаданных;
		Строка.Заголовок = НСтр("ru = 'Для команд объектов метаданных по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствРазделаПроекта(Раздел, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Раздел) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Раздел, "Владелец");
	Иначе
		Объект = Раздел.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_РазделыПроекта_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех разделов проектов'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Объект.НаборСвойствДляРазделовПроекта;
	Строка.Заголовок = НСтр("ru = 'Для разделов проекта'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствЦелевойЗадачи(ЦелеваяЗадача, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(ЦелеваяЗадача) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЦелеваяЗадача, "Владелец");
	Иначе
		Объект = ЦелеваяЗадача.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ЦелевыеЗадачи_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех целевых задач'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
		
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Объект.НаборСвойствДляЦелевыхЗадач;
	Строка.Заголовок = НСтр("ru = 'Для целевых задач по проекту'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
		
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствВерсииПроекта(ВерсияПроекта, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(ВерсияПроекта) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВерсияПроекта, "Владелец");
	Иначе
		Объект = ВерсияПроекта.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ВерсииПроекта_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех версий проектов'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
		
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Объект.НаборСвойствДляВерсийПроекта;
	Строка.Заголовок = НСтр("ru = 'Для версий проекта'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
		
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствСборокВерсий(СборкаВерсии, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(СборкаВерсии) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СборкаВерсии, "Владелец");
	Иначе
		Объект = СборкаВерсии.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_СборкиВерсии_Общие;
	Строка.Заголовок = НСтр("ru = 'Для всех сборок версий'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Владелец");
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Проект.НаборСвойствДляСборокВерсий;
		Строка.Заголовок = НСтр("ru = 'Для сборок версий проекта'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПроцессы(Процесс, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(Процесс) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Процесс, "Владелец");
	Иначе
		Объект = Процесс.Владелец;
	КонецЕсли;
	
	Проект = Объект;
	
	Если ЗначениеЗаполнено(Проект) И ПолучитьФункциональнуюОпцию("ИспользоватьТестирование") Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляПроцессовВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Выгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляПроцессовНеВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Невыгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Процессы_Общие");	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствСценарииРаботыПользователей(СценарийРаботыПользователя, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(СценарийРаботыПользователя) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СценарийРаботыПользователя, "Владелец");
	Иначе
		Объект = СценарийРаботыПользователя.Владелец;
	КонецЕсли;
	
	Проект = Объект;
	
	Если ЗначениеЗаполнено(Проект) И ПолучитьФункциональнуюОпцию("ИспользоватьТестирование") Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляСценариевРаботыПользователейВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Выгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляСценариевРаботыПользователейНеВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Невыгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_СценарииРаботыПользователей_Общие");	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствНастройкиЗапускаПроцессов(НастройкаЗапускаПроцесса, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(НастройкаЗапускаПроцесса) = ТипСсылки Тогда
		Процесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаЗапускаПроцесса, "Владелец");
	Иначе
		Процесс = НастройкаЗапускаПроцесса.Владелец;
	КонецЕсли;
	
	Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Процесс, "Владелец");
	
	Проект = Объект;
	
	Если ЗначениеЗаполнено(Проект) И ПолучитьФункциональнуюОпцию("ИспользоватьТестирование") Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляНастроекЗапускаПроцессовВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Выгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляНастроекЗапускаПроцессовНеВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Невыгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_НастройкиЗапускаПроцессов_Общие");	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствНастройкиЗапускаСценариев(НастройкаЗапускаСценария, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(НастройкаЗапускаСценария) = ТипСсылки Тогда
		ЭталоннаяБаза = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаЗапускаСценария, "Владелец");
	Иначе
		ЭталоннаяБаза = НастройкаЗапускаСценария.Владелец;
	КонецЕсли;
	
	Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭталоннаяБаза, "Владелец");
	
	Проект = Объект;
	
	Если ЗначениеЗаполнено(Проект) И ПолучитьФункциональнуюОпцию("ИспользоватьТестирование") Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляНастроекЗапускаСценариевВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Выгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляНастроекЗапускаСценариевНеВыгружаемый");
		Строка.Заголовок = НСтр("ru = 'Невыгружаемые'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_НастройкиЗапускаСценариев_Общие");	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствВеток(Ветка, ТипСсылки, НаборыСвойств)
	
	Если ТипЗнч(Ветка) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ветка, "Владелец");
	Иначе
		Объект = Ветка.Владелец;
	КонецЕсли;
	
	Проект = Объект;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "НаборСвойствДляВеток");
		Строка.Заголовок = НСтр("ru = 'Для веток проекта'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
		
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Ветки_Общие");	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствФункцийСистемы(ФункцияСистемы, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ФункцияСистемы) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФункцияСистемы, "Владелец");
	Иначе
		Объект = ФункцияСистемы.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_ФункцииСистемы_Общие");
	Строка.Заголовок = НСтр("ru = 'Для всех функций'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "НаборСвойствДляФункцийСистемы");
	Строка.Заголовок = НСтр("ru = 'Для функций проекта'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствРеквизитаОбъектаМетаданных(РеквизитОбъектаМетаданных, ТипСсылки, НаборыСвойств)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(РеквизитОбъектаМетаданных) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитОбъектаМетаданных, "Владелец");
	Иначе
		Объект = РеквизитОбъектаМетаданных.Владелец;
	КонецЕсли;
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_РеквизитыОбъектовМетаданных_Общие");
	Строка.Заголовок = НСтр("ru = 'Для всех реквизитов объектов метаданных'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Ложь;
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Владелец");
	
	Если ЗначениеЗаполнено(Проект) Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Проект.НаборСвойствДляРеквизитовОбъектовМетаданных;
		Строка.Заголовок = НСтр("ru = 'Для реквизитов объектов метаданных по проекту'");
		Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
		Строка.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	// Свойства группы удаленных реквизитов.
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Строка.Заголовок = НСтр("ru = 'Более не используемые реквизиты'");
	Строка.Отображение = ОтображениеОбычнойГруппы.Нет;
	Строка.ОтображатьЗаголовок = Истина;
	
КонецПроцедуры

#КонецОбласти

