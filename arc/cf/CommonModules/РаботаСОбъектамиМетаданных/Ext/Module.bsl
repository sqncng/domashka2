
#Область ПрограммныйИнтерфейс

// Заполнение предопределенных значений
Процедура СоздатьЗаполнитьГруппыОбъектовМетаданных(Проект) Экспорт
	
	СтруктураГрупп = СтруктураГруппОбъектовМетаданных(Проект);
	
	ГруппаОбщиеОбъекты = Неопределено;
	ГруппаДокументы = Неопределено;
	ТекущийКод = 0;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеОбъекты") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеОбъекты";
		Объект.Наименование = "Общие";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общий объект";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщийОбъект";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		Объект.Записать();
		
		ГруппаОбщиеОбъекты = Объект.Ссылка;
		
	Иначе	
		
		ГруппаОбщиеОбъекты = СтруктураГрупп.ОбщиеОбъекты;
		
		Объект = ГруппаОбщиеОбъекты.ПолучитьОбъект();
		Объект.Наименование = "Общие";
		
		ТекущийКод = 1;
		Объект.Код = ТекущийКод;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Константы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Константы";
		Объект.Наименование = "Константы";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Константа";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Константа";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Константы.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Справочники") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Справочники";
		Объект.Наименование = "Справочники";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Справочник";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Справочник";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Истина;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Справочники.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Документы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Документы";
		Объект.Наименование = "Документы";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Документ";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Документ";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Истина;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
		ГруппаДокументы = Объект.Ссылка;
		
	Иначе	
		
		ГруппаДокументы = СтруктураГрупп.Документы;
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Документы.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Нумераторы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Нумераторы";
		Объект.Наименование = "Нумераторы";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаДокументы;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Нумератор";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Нумератор";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		
		Объект = СтруктураГрупп.Нумераторы.ПолучитьОбъект();
		Объект.Родитель = ГруппаДокументы;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Последовательности") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Последовательности";
		Объект.Наименование = "Последовательности";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаДокументы;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Последовательность";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Последовательность";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.Последовательности.ПолучитьОбъект();
		Объект.Родитель = ГруппаДокументы;	
		Если ТекущийКод <> 0 Тогда	
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ЖурналыДокументов") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ЖурналыДокументов";
		Объект.Наименование = "Журналы документов";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Журнал документов";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ЖурналДокументов";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.ЖурналыДокументов.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Перечисления") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Перечисления";
		Объект.Наименование = "Перечисления";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Перечисление";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Перечисление";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Истина;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Перечисления.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Отчеты") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Отчеты";
		Объект.Наименование = "Отчеты";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Отчет";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Отчет";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Отчеты.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Обработки") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Обработки";
		Объект.Наименование = "Обработки";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Обработка";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Обработка";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Обработки.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПланыВидовХарактеристик") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПланыВидовХарактеристик";
		Объект.Наименование = "Планы видов характеристик";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "План видов характеристик";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПланВидовХарактеристик";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Истина;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.ПланыВидовХарактеристик.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПланыСчетов") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПланыСчетов";
		Объект.Наименование = "Планы счетов";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "План счетов";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПланСчетов";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.ПланыСчетов.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПланыВидовРасчета") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПланыВидовРасчета";
		Объект.Наименование = "Планы видов расчета";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "План видов расчета";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПланВидовРасчета";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.ПланыВидовРасчета.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("РегистрыСведений") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "РегистрыСведений";
		Объект.Наименование = "Регистры сведений";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Регистр сведений";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "РегистрСведений";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Истина;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.РегистрыСведений.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("РегистрыНакопления") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "РегистрыНакопления";
		Объект.Наименование = "Регистры накопления";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Регистр накопления";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "РегистрНакопления";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Истина;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.РегистрыНакопления.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("РегистрыБухгалтерии") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "РегистрыБухгалтерии";
		Объект.Наименование = "Регистры бухгалтерии";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Регистр бухгалтерии";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "РегистрБухгалтерии";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Истина;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.РегистрыБухгалтерии.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("РегистрыРасчета") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "РегистрыРасчета";
		Объект.Наименование = "Регистры расчета";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Регистр расчета";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "РегистрРасчета";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Истина;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.РегистрыРасчета.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("БизнесПроцессы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "БизнесПроцессы";
		Объект.Наименование = "Бизнес-процессы";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Бизнес-процесс";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "БизнесПроцесс";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.БизнесПроцессы.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Задачи") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Задачи";
		Объект.Наименование = "Задачи";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Задача";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Задача";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Задачи.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ВнешниеИсточникиДанных") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ВнешниеИсточникиДанных";
		Объект.Наименование = "Внешние источники данных";
		Объект.Владелец = Проект;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Внешний источник данных";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ВнешнийИсточникДанных";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		Объект.Записать();
		
	Иначе	
		
		Если ТекущийКод <> 0 Тогда
			Объект = СтруктураГрупп.Задачи.ПолучитьОбъект();
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеМодули") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеМодули";
		Объект.Наименование = "Общие модули";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общий модуль";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщийМодуль";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ОбщиеМодули.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда	
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПараметрыСеанса") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПараметрыСеанса";
		Объект.Наименование = "Параметры сеанса";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Параметр сеанса";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПараметрСеанса";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ПараметрыСеанса.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда	
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Роли") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Роли";
		Объект.Наименование = "Роли";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Роль";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Роль";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.Роли.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеРеквизиты") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеРеквизиты";
		Объект.Наименование = "Общие реквизиты";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общий реквизит";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщийРеквизит";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		Объект = СтруктураГрупп.ОбщиеРеквизиты.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПланыОбмена") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПланыОбмена";
		Объект.Наименование = "Планы обмена";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "План обмена";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПланОбмена";
		Объект.ЕстьРеквизиты                  = Истина;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Истина;
		Объект.ЕстьОграниченияДоступа         = Истина;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		Объект = СтруктураГрупп.ПланыОбмена.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("КритерииОтбора") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "КритерииОтбора";
		Объект.Наименование = "Критерии отбора";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Критерий отбора";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "КритерийОтбора";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		Объект = СтруктураГрупп.КритерииОтбора.ПолучитьОбъект();		
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда	
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПодпискиНаСобытия") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПодпискиНаСобытия";
		Объект.Наименование = "Подписки на события";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Подписка на событие";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПодпискаНаСобытие";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		Объект = СтруктураГрупп.ПодпискиНаСобытия.ПолучитьОбъект();				
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("РегламентныеЗадания") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "РегламентныеЗадания";
		Объект.Наименование = "Регламентные задания";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Регламентное задание";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "РегламентноеЗадание";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		Объект = СтруктураГрупп.РегламентныеЗадания.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ФункциональныеОпции") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ФункциональныеОпции";
		Объект.Наименование = "Функциональные опции";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Функциональная опция";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ФункциональнаяОпция";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе			
		Объект = СтруктураГрупп.ФункциональныеОпции.ПолучитьОбъект();					
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПараметрыФункциональныхОпций") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПараметрыФункциональныхОпций";
		Объект.Наименование = "Параметры функциональных опций";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Параметр функциональной опции";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПараметрФункциональнойОпции";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		Объект = СтруктураГрупп.ПараметрыФункциональныхОпций.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОпределяемыеТипы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОпределяемыеТипы";
		Объект.Наименование = "Определяемые типы";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Определяемый тип";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОпределяемыйТип";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		Объект = СтруктураГрупп.ОпределяемыеТипы.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ХранилищаНастроек") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ХранилищаНастроек";
		Объект.Наименование = "Хранилища настроек";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Хранилище настроек";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ХранилищеНастроек";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Истина;
		Объект.ЕстьМакеты                     = Истина;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		Объект = СтруктураГрупп.ХранилищаНастроек.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеФормы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеФормы";
		Объект.Наименование = "Общие формы";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общая форма";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщаяФорма";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		Объект = СтруктураГрупп.ОбщиеФормы.ПолучитьОбъект();				
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();	
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеКоманды") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеКоманды";
		Объект.Наименование = "Общие команды";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общая команда";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщаяКоманда";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Истина;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Истина;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ОбщиеКоманды.ПолучитьОбъект();				
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ГруппыКоманд") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ГруппыКоманд";
		Объект.Наименование = "Группы команд";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Группа команд";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ГруппаКоманд";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ГруппыКоманд.ПолучитьОбъект();				
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеМакеты") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеМакеты";
		Объект.Наименование = "Общие макеты";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общий макет";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщийМакет";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		
		Объект = СтруктураГрупп.ОбщиеМакеты.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ОбщиеКартинки") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ОбщиеКартинки";
		Объект.Наименование = "Общие картинки";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Общая картинка";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ОбщаяКартинка";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		
		Объект = СтруктураГрупп.ОбщиеКартинки.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ПакетыXDTO") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ПакетыXDTO";
		Объект.Наименование = "XDTO-пакеты";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "XDTO-пакет";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ПакетXDTO";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ПакетыXDTO.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("WebСервисы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "WebСервисы";
		Объект.Наименование = "Web-сервисы";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Web-сервис";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "WebСервис";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Истина;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.WebСервисы.ПолучитьОбъект();		
		Объект.Родитель = ГруппаОбщиеОбъекты;	
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;	
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("HTTPСервисы") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "HTTPСервисы";
		Объект.Наименование = "HTTP-сервисы";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "HTTP-сервис";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "HTTPСервис";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	Иначе
		
		Объект = СтруктураГрупп.HTTPСервисы.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("WSСсылки") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "WSСсылки";
		Объект.Наименование = "WS-cсылки";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "WS-ссылка";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "WSСсылка";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
	
		Объект.Записать();
		
	Иначе
		
		Объект = СтруктураГрупп.WSСсылки.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("ЭлементыСтиля") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "ЭлементыСтиля";
		Объект.Наименование = "Элементы стиля";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Элемент стиля";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "ЭлементСтиля";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
	
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.ЭлементыСтиля.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Стили") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Стили";
		Объект.Наименование = "Стили";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Стиль";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Стиль";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
	
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.Стили.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
	Если НЕ СтруктураГрупп.Свойство("Языки") Тогда
		
		Объект = Справочники.ОбъектыМетаданных.СоздатьГруппу();
		Объект.Имя = "Языки";
		Объект.Наименование = "Языки";
		Объект.Владелец = Проект;
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Объект.ПредставлениеВидаОбъектаМетаданныхВЕдЧисле = "Язык";
		Объект.ВидОбъектаМетаданныхВЕдЧисле               = "Язык";
		Объект.ЕстьРеквизиты                  = Ложь;
		Объект.ЕстьПрава                      = Ложь;
		Объект.ЕстьФормы                      = Ложь;
		Объект.ЕстьМакеты                     = Ложь;
		Объект.ЕстьСсылкиИзОбъектовМетаданных = Ложь;
		Объект.ЕстьВводНаОсновании            = Ложь;
		Объект.ЕстьОграниченияДоступа         = Ложь;
		Объект.ЕстьДвиженияДокумента          = Ложь;
		Объект.ЕстьДвиженияПоРегистру         = Ложь;
		Объект.ЕстьПредопределенныеДанные     = Ложь;
		Объект.ЕстьСправочнаяИнформация       = Ложь;
		
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
	
		Объект.Записать();
		
	Иначе	
		
		Объект = СтруктураГрупп.Языки.ПолучитьОбъект();
		Объект.Родитель = ГруппаОбщиеОбъекты;
		Если ТекущийКод <> 0 Тогда
			ТекущийКод = ТекущийКод + 1;
			Объект.Код = ТекущийКод;
		КонецЕсли;
		
		Объект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Установка соответствия номера картинки для группы объектов метаданных
Функция ПолучитьСоответствиеКартинокГруппОбъектовМетаданных(Проект) Экспорт
	
	СоответствиеКартинок = Новый Соответствие;
	
	СтруктураГрупп = СтруктураГруппОбъектовМетаданных(Проект);
	
	ТаблицаТипОбъектаИндексКартинки = ТаблицаТипОбъектаИндексКартинки();
	
	Для Каждого КлючЗначение Из СтруктураГрупп Цикл
		СоответствиеКартинок.Вставить(КлючЗначение.Значение, ИндексКартинкиПоТипуОбъекта(КлючЗначение.Ключ, ТаблицаТипОбъектаИндексКартинки)); 	
	КонецЦикла;
	
	Возврат СоответствиеКартинок;
	
КонецФункции

// Установка соответствия номера картинки для элементов объектов метаданных
Функция ПолучитьСоответствиеКартинокЭлементовОбъектовМетаданных(Проект) Экспорт

	Возврат ПолучитьСоответствиеКартинокГруппОбъектовМетаданных(Проект);
	
КонецФункции

// Определение (установка) доступных классов объектов метаданных
Функция ДоступныеКлассыОбъектовМетаданныхОбъектаДанных() Экспорт
	
	МассивОграничений = Новый Массив;
	
	МассивОграничений.Добавить("Константы");
	МассивОграничений.Добавить("Справочники");
	МассивОграничений.Добавить("Документы");
	МассивОграничений.Добавить("ПланыВидовХарактеристик");
	МассивОграничений.Добавить("ПланыСчетов");
	МассивОграничений.Добавить("ПланыВидовРасчета");
	МассивОграничений.Добавить("РегистрыСведений");
	МассивОграничений.Добавить("РегистрыНакопления");
	МассивОграничений.Добавить("РегистрыБухгалтерии");
	МассивОграничений.Добавить("РегистрыРасчета");
	МассивОграничений.Добавить("БизнесПроцессы");
	МассивОграничений.Добавить("Задачи");
	МассивОграничений.Добавить("ПланыОбмена");
	МассивОграничений.Добавить("ПараметрыСеанса");
	МассивОграничений.Добавить("Последовательности");
	МассивОграничений.Добавить("РегламентныеЗадания");
	
	Возврат МассивОграничений;
	
КонецФункции

Функция ПолучитьСоответствиеКартинок(МассивОбъектов) Экспорт
	
	МассивПоТипам = ОбщегоНазначенияСППР.РазделитьМассивПоТипам(МассивОбъектов,
		"СправочникСсылка.ОбъектыМетаданных, СправочникСсылка.Подсистемы");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТипОбъектаИндексКартинки.ТипОбъекта КАК ТипОбъекта,
	|	ТипОбъектаИндексКартинки.ИндексКартинки КАК ИндексКартинки
	|ПОМЕСТИТЬ ТипОбъектаИндексКартинки
	|ИЗ
	|	&ТипОбъектаИндексКартинки КАК ТипОбъектаИндексКартинки
	|ГДЕ
	|	НЕ ТипОбъектаИндексКартинки.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК ОбъектМетаданных,
	|	ЕСТЬNULL(ТипОбъектаИндексКартинки.ИндексКартинки, 1000) КАК ИндексКартинки
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипОбъектаИндексКартинки КАК ТипОбъектаИндексКартинки
	|		ПО ОбъектыМетаданных.Родитель.Имя = ТипОбъектаИндексКартинки.ТипОбъекта
	|ГДЕ
	|	ОбъектыМетаданных.Ссылка В(&МассивОбъектовМетаданных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Подсистемы.Ссылка,
	|	ЕСТЬNULL(ТипОбъектаИндексКартинки.ИндексКартинки, 1000)
	|ИЗ
	|	Справочник.Подсистемы КАК Подсистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипОбъектаИндексКартинки КАК ТипОбъектаИндексКартинки
	|		ПО (ТипОбъектаИндексКартинки.ТипОбъекта = ""Подсистемы"")
	|ГДЕ
	|	Подсистемы.Ссылка В(&МассивПодсистем)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектовМетаданных", МассивПоТипам[Тип("СправочникСсылка.ОбъектыМетаданных")]);
	Запрос.УстановитьПараметр("МассивПодсистем", МассивПоТипам[Тип("СправочникСсылка.Подсистемы")]);
	Запрос.УстановитьПараметр("ТипОбъектаИндексКартинки", ТаблицаТипОбъектаИндексКартинки());
	
	СоответствиеКартинок = Новый Соответствие();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеКартинок.Вставить(Выборка.ОбъектМетаданных, Выборка.ИндексКартинки);
	КонецЦикла;
	
	Возврат СоответствиеКартинок;
	
КонецФункции

Функция НастройкиПодключенияКИнформационнойБазеИХранилищу(Ссылка) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	Если ЗначениеЗаполнено(Ссылка) И ТипЗнч(Ссылка) = Тип("СправочникСсылка.Проекты") Тогда
		
		СтруктураНастроек = НастройкиПодключенияКИнформационнойБазеИХранилищуДляПроекта(Ссылка);
		
	ИначеЕсли ЗначениеЗаполнено(Ссылка) И ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВерсииПроекта") Тогда
		
		СтруктураНастроек = НастройкиПодключенияКИнформационнойБазеИХранилищуДляВерсииПроекта(Ссылка);
		
	Иначе
		СтруктураНастроек.Вставить("КаталогИнформационнойБазы",            "");
		СтруктураНастроек.Вставить("КаталогХранилища",                     "");
		СтруктураНастроек.Вставить("ИмяПользователяИнформационнойБазы",    "");
		СтруктураНастроек.Вставить("ИмяПользователяХранилища",             "");
		СтруктураНастроек.Вставить("ПарольПользователяИнформационнойБазы", "");
		СтруктураНастроек.Вставить("ПарольПользователяХранилища",          "");
		СтруктураНастроек.Вставить("ВерсияПлатформы",                      "");
	КонецЕсли;
	
	Возврат СтруктураНастроек;
	
КонецФункции

Функция ГруппаОбъектовМетаданных(ИмяКласса, Проект) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Имя = &ИмяКласса
	|	И ОбъектыМетаданных.ЭтоГруппа
	|	И ОбъектыМетаданных.Владелец = &Проект"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИмяКласса", ИмяКласса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция СтруктураГруппОбъектовМетаданных(Проект) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК Ссылка,
	|	ОбъектыМетаданных.Имя КАК Имя
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.ЭтоГруппа
	|	И ОбъектыМетаданных.Владелец = &Проект"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Структура = Новый Структура;
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Структура;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Структура.Вставить(Выборка.Имя, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Функция ИмяКлассаОбъектаМетаданных(ОбъектМетаданных) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Родитель.Имя КАК ИмяКласса
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Ссылка = &Ссылка"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ОбъектМетаданных);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ИмяКласса;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ОбъектМетаданныхПоИмениКлассуПроекту(ИмяОбъекта, ИмяКласса, Проект, Версия = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Версия) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПроектаОтличияВИменахМетаданных.ОбъектМетаданных КАК ОбъектМетаданных
		|ИЗ
		|	Справочник.ВерсииПроекта.ОтличияВИменахМетаданных КАК ВерсииПроектаОтличияВИменахМетаданных
		|ГДЕ
		|	ВерсииПроектаОтличияВИменахМетаданных.Ссылка = &Версия
		|	И ВерсииПроектаОтличияВИменахМетаданных.ПолноеИмя = &ПолноеИмя";
		
		Запрос.УстановитьПараметр("Версия", Версия);
		Запрос.УстановитьПараметр("ПолноеИмя", ИмяКласса + "." + ИмяОбъекта);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.ОбъектМетаданных;
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъектыМетаданных.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыМетаданных КАК ОбъектыМетаданных
	|ГДЕ
	|	ОбъектыМетаданных.Имя = &ИмяОбъекта
	|	И ОбъектыМетаданных.Родитель.Имя = &ИмяКласса
	|	И ОбъектыМетаданных.Владелец = &Проект"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИмяОбъекта", ИмяОбъекта);
	Запрос.УстановитьПараметр("ИмяКласса", ИмяКласса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ОбъектМетаданныхПоИменниМетода(Метод, Проект) Экспорт
	
	ЧастиИмени = СтрРазделить(Метод, ".");
		
	Если ЧастиИмени.Количество() = 3 Тогда
		КлассОбъекта = ЧастиИмени[0];
		ИмяОбъекта   = ЧастиИмени[1];
	Иначе
		КлассОбъекта = "ОбщиеМодули"; 
		ИмяОбъекта   = ЧастиИмени[0];
	КонецЕсли;
	
	ОбъектМетаданных = ОбъектМетаданныхПоИмениКлассуПроекту(ИмяОбъекта, КлассОбъекта, Проект);

	Возврат ОбъектМетаданных;
	
КонецФункции

Процедура СоздатьЭлементыВСправочникеОбъектыМетаданных(Проект) Экспорт
	
	СтруктураГрупп = СтруктураГруппОбъектовМетаданных(Проект);
	
	РольБазовыеПрава = ОбъектМетаданныхПоИмениКлассуПроекту("БазовыеПрава", "Роли", Проект);
	
	Если Не ЗначениеЗаполнено(РольБазовыеПрава) Тогда
		Объект = Справочники.ОбъектыМетаданных.СоздатьЭлемент();
		Объект.Родитель = СтруктураГрупп["Роли"];
		Объект.Имя = "БазовыеПрава";
		Объект.Код = 99997;
		Объект.Владелец = Проект;
		Объект.Записать();
	КонецЕсли;
	
	РольПолныеПрава = ОбъектМетаданныхПоИмениКлассуПроекту("ПолныеПрава", "Роли", Проект);
	
	Если Не ЗначениеЗаполнено(РольПолныеПрава) Тогда
		Объект = Справочники.ОбъектыМетаданных.СоздатьЭлемент();
		Объект.Родитель = СтруктураГрупп["Роли"];
		Объект.Имя = "ПолныеПрава";
		Объект.Код = 99998;
		Объект.Владелец = Проект;
		Объект.Записать();
	КонецЕсли;
	
	Роль_РольНеНазначается = ОбъектМетаданныхПоИмениКлассуПроекту("РольНеНазначается", "Роли", Проект);
	
	Если Не ЗначениеЗаполнено(Роль_РольНеНазначается) Тогда
		Объект = Справочники.ОбъектыМетаданных.СоздатьЭлемент();
		Объект.Родитель = СтруктураГрупп["Роли"];
		Объект.Имя = "РольНеНазначается";
		Объект.Владелец = Проект;
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает признак того - является ли элемент "расширенно-хранимым".
//
// Параметры:
//	ИмяКласса (Строка) - имя класса объекта метаданных.
//
// Возвращаемое значение:
//	Булево. Истина - это "расширенно-хранимый" элемент, Ложь - нет.
//
Функция ЭтоЭлементРасширенногоХранения(ИмяКласса) Экспорт
		
	Если ИмяКласса = "ОбщиеМодули" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если  ИмяКласса = "ПодпискиНаСобытия" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "РегламентныеЗадания" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ФункциональныеОпции" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ПакетыXDTO" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "КритерииОтбора" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "WebСервисы" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ОбщиеКоманды" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ГруппыКоманд" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "WSСсылки" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "Последовательности" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ОбщиеРеквизиты" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяКласса = "ОбщиеМакеты" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Процедура проверяет, существует ли запись в подчиненном справочнике для хранения "расширенных"
// свойств элемента объекта метаданных. Если записи нет, то создает ее.
//
// Параметры:
//	ОбъектМетаданных (СправочникСсылка.ОбъектыМетаданных) - объект метаданных,
//	Отказ (Булево) - флаг отказа, устанавливается в истину при возникновении ошибки в процедуре.
//
Процедура СоздатьПодчиненныйЭлементСвойств(ОбъектМетаданных, Отказ) Экспорт
	
	// Проверить, существует ли элемент в подчиненном справочнике свойств.
	СуществуетЭлемент = СуществуетЭлементСправочникаСвойств(ОбъектМетаданных);
	
	Если СуществуетЭлемент Тогда
		Возврат;
	КонецЕсли;
	
	// Если подчиненного элемента не существует, то создать его. При возникновении
	// ошибки установить флаг отказа.
	СоздатьЭлементСправочникаСвойств(ОбъектМетаданных, Отказ);
	
КонецПроцедуры

// Функция проверяет, является ли класс объектов метаданных классом "расширенно"
// хранящихся объектов.
//
// Параметры:
//	ИмяКласса (Строка) - имя класса объектов.
//
// Возвращаемое значение:
//	Булево.
//
Функция ЭтоКлассОбъектаРасширенногоХранения(ИмяКласса) Экспорт
	
	Классы = Новый Массив;
	Классы.Добавить("ОбщиеМодули");
	Классы.Добавить("ПодпискиНаСобытия");
	Классы.Добавить("РегламентныеЗадания");
	Классы.Добавить("ФункциональныеОпции");
	Классы.Добавить("ПакетыXDTO");
	Классы.Добавить("КритерииОтбора");
	Классы.Добавить("ОбщиеКоманды");
	Классы.Добавить("WebСервисы");
	Классы.Добавить("WSСсылки");
	Классы.Добавить("ГруппыКоманд");
	Классы.Добавить("Последовательности");
	Классы.Добавить("ОбщиеРеквизиты");
	Классы.Добавить("ОбщиеМакеты");
	
	Если Классы.Найти(ИмяКласса) <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ВерсияОсновногоХранилищаПроекта(Проект) Экспорт
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		Возврат Справочники.ВерсииПроекта.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВерсииПроекта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВерсииПроекта КАК ВерсииПроекта
	|ГДЕ
	|	ВерсииПроекта.Владелец = &Проект
	|	И ВерсииПроекта.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ОсновнаяВеткаПроекта)";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВерсииПроекта.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции

Функция ОбрабатываемыеБиблиотекиОбработчиковОбновления(Проект, ПолучитьНеподсистемныеБиблиотеки = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если Не ПолучитьНеподсистемныеБиблиотеки Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПроектыМодулиОбновленияИнформационнойБазы.Библиотека КАК Библиотека
		|ИЗ
		|	Справочник.Проекты.МодулиОбновленияИнформационнойБазы КАК ПроектыМодулиОбновленияИнформационнойБазы
		|ГДЕ
		|	ПроектыМодулиОбновленияИнформационнойБазы.Ссылка = &Проект
		|	И ПроектыМодулиОбновленияИнформационнойБазы.ЭтоПодсистемаТекущегоПроекта";
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПроектыМодулиОбновленияИнформационнойБазы.Библиотека КАК Библиотека
		|ИЗ
		|	Справочник.Проекты.МодулиОбновленияИнформационнойБазы КАК ПроектыМодулиОбновленияИнформационнойБазы
		|ГДЕ
		|	ПроектыМодулиОбновленияИнформационнойБазы.Ссылка = &Проект
		|	И (ПроектыМодулиОбновленияИнформационнойБазы.ЭтоПодсистемаТекущегоПроекта
		|			ИЛИ НЕ ПроектыМодулиОбновленияИнформационнойБазы.ЭтоПодсистемаТекущегоПроекта
		|				И ПроектыМодулиОбновленияИнформационнойБазы.РежимВыполненияОтложенныхОбработчиков = ЗНАЧЕНИЕ(Перечисление.РежимыВыполненияОтложенныхОбработчиковОбновления.Параллельно))";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Библиотека");
	
КонецФункции

Процедура ЗаполнитьТаблицуПоРезультатамПоиска(ТаблицаОбъектов, Результат, ПараметрыЗаполнения) Экспорт
	
	МассивСтрок = СтрРазделить(Результат, Символы.ПС, Ложь);
	
	Если ПараметрыЗаполнения.Вариант = "СписокОбъектов" Тогда
		
		Для Каждого ТекущаяСтрока Из МассивСтрок Цикл
			
			НоваяСтрока = ТаблицаОбъектов.Добавить();
			НоваяСтрока.ПолноеИмя = СокрЛП(ТекущаяСтрока);
			
		КонецЦикла;
		
	Иначе
		
		ЧислоСтрок = МассивСтрок.Количество();
		
		Если ПараметрыЗаполнения.Вариант = "ГлобальныйПоиск" Тогда 
			НачалоСтрокиПоиска = "Основная конфигурация";
		Иначе
			НачалоСтрокиПоиска = ""
		КонецЕсли;
		
		Для Каждого ТекущаяСтрока Из МассивСтрок Цикл
			
			Если ПараметрыЗаполнения.Вариант = "ГлобальныйПоиск" Тогда 
				
				Если СтрНайти(ТекущаяСтрока, НачалоСтрокиПоиска) = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ПараметрыЗаполнения.Вариант = "ПоискСсылок" Тогда
				
				Если СтрНайти(ТекущаяСтрока, "использован в:") <> 0 Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПустаяСтрока(НачалоСтрокиПоиска) Тогда
				МассивЧастейИмениОбъекта = СтрРазделить(СокрЛП(Прав(ТекущаяСтрока, СтрДлина(ТекущаяСтрока) - СтрДлина(НачалоСтрокиПоиска))), ".");
			Иначе
				МассивЧастейИмениОбъекта = СтрРазделить(СокрЛП(ТекущаяСтрока), ".");
			КонецЕсли;
			
			Если МассивЧастейИмениОбъекта.Количество() < 2 Тогда
				Продолжить;
			КонецЕсли;
			
			Если МассивЧастейИмениОбъекта.Количество() > 2 
				
				И (МассивЧастейИмениОбъекта[2] = "Форма"
				Или МассивЧастейИмениОбъекта[2] = "Макет")
				
				И (МассивЧастейИмениОбъекта[0] <> "ОбщаяФорма"
				И МассивЧастейИмениОбъекта[0] <> "ОбщийМакет")Тогда
				
				ИмяОбъекта = МассивЧастейИмениОбъекта[0]
				+ "." + МассивЧастейИмениОбъекта[1]
				+ "." + МассивЧастейИмениОбъекта[2]  
				+ "." + МассивЧастейИмениОбъекта[3];
			Иначе
				
				ИмяОбъекта = МассивЧастейИмениОбъекта[0]
				+ "." + МассивЧастейИмениОбъекта[1];
			КонецЕсли;
			
			НоваяСтрока = ТаблицаОбъектов.Добавить();
			НоваяСтрока.ПолноеИмя = СокрЛП(ИмяОбъекта);
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаОбъектов.Свернуть("ПолноеИмя");
	
КонецПроцедуры

Функция ПредставлениеПодчиненногоОбъекта(ПодчиненныйОбъектСсылка, ПодчиненныйОбъектИмя) Экспорт
	
	Если ТипЗнч(ПодчиненныйОбъектСсылка) = Тип("СправочникСсылка.КомандыОбъектовМетаданных") Тогда
		ПредставлениеЗначения = НСтр("ru = 'Команда %ИмяОбъекта%'");
	ИначеЕсли ТипЗнч(ПодчиненныйОбъектСсылка) = Тип("СправочникСсылка.ФормыОбъектовМетаданных") Тогда
		ПредставлениеЗначения = НСтр("ru = 'Форма %ИмяОбъекта%'");
	ИначеЕсли ТипЗнч(ПодчиненныйОбъектСсылка) = Тип("СправочникСсылка.МакетыОбъектовМетаданных") Тогда
		ПредставлениеЗначения = НСтр("ru = 'Макет %ИмяОбъекта%'");
	ИначеЕсли ТипЗнч(ПодчиненныйОбъектСсылка) = Тип("СправочникСсылка.РеквизитыОбъектовМетаданных") Тогда
		ПредставлениеЗначения = НСтр("ru = 'Реквизит %ИмяОбъекта%'");
	Иначе
		ПредставлениеЗначения = ПодчиненныйОбъектИмя;
	КонецЕсли;
	
	Возврат СтрЗаменить(ПредставлениеЗначения, "%ИмяОбъекта%", ПодчиненныйОбъектИмя);
	
КонецФункции

Функция ПодчиненныеОбъектыОбъектаМетаданных(ОбъектМетаданных) Экспорт

	СписокОбъектов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КомандыОбъектовМетаданных.Ссылка,
	|	КомандыОбъектовМетаданных.Имя КАК Имя
	|ИЗ
	|	Справочник.КомандыОбъектовМетаданных КАК КомандыОбъектовМетаданных
	|ГДЕ
	|	КомандыОбъектовМетаданных.Владелец = &ОбъектМетаданных
	|	И НЕ КомандыОбъектовМетаданных.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФормыОбъектовМетаданных.Ссылка,
	|	ФормыОбъектовМетаданных.Имя
	|ИЗ
	|	Справочник.ФормыОбъектовМетаданных КАК ФормыОбъектовМетаданных
	|ГДЕ
	|	ФормыОбъектовМетаданных.Владелец = &ОбъектМетаданных
	|	И НЕ ФормыОбъектовМетаданных.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МакетыОбъектовМетаданных.Ссылка,
	|	МакетыОбъектовМетаданных.Имя
	|ИЗ
	|	Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|ГДЕ
	|	МакетыОбъектовМетаданных.Владелец = &ОбъектМетаданных
	|	И НЕ МакетыОбъектовМетаданных.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеквизитыОбъектовМетаданных.Ссылка,
	|	ВЫБОР
	|		КОГДА РеквизитыОбъектовМетаданных.Родитель.Имя <> """"
	|				И РеквизитыОбъектовМетаданных.Родитель.ВидРеквизита <> ЗНАЧЕНИЕ(Перечисление.ВидыРеквизитов.Реквизиты)
	|				И РеквизитыОбъектовМетаданных.Родитель.ВидРеквизита <> ЗНАЧЕНИЕ(Перечисление.ВидыРеквизитов.СтандартныеРеквизиты)
	|			ТОГДА РеквизитыОбъектовМетаданных.Родитель.Имя + ""."" + РеквизитыОбъектовМетаданных.Имя
	|		ИНАЧЕ РеквизитыОбъектовМетаданных.Имя
	|	КОНЕЦ
	|ИЗ
	|	Справочник.РеквизитыОбъектовМетаданных КАК РеквизитыОбъектовМетаданных
	|ГДЕ
	|	РеквизитыОбъектовМетаданных.Владелец = &ОбъектМетаданных
	|	И НЕ РеквизитыОбъектовМетаданных.ПометкаУдаления
	|	И РеквизитыОбъектовМетаданных.ВидРеквизита <> ЗНАЧЕНИЕ(Перечисление.ВидыРеквизитов.Реквизиты)
	|	И РеквизитыОбъектовМетаданных.ВидРеквизита <> ЗНАЧЕНИЕ(Перечисление.ВидыРеквизитов.СтандартныеРеквизиты)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ПредставлениеОбъекта = ПредставлениеПодчиненногоОбъекта(Выборка.Ссылка, Выборка.Имя);
		СписокОбъектов.Добавить(Выборка.Ссылка, ПредставлениеОбъекта);
	КонецЦикла;
	
	Возврат СписокОбъектов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиПодключенияКИнформационнойБазеИХранилищуДляПроекта(Проект)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Проекты.КаталогИБДляЗагрузкиМетаданных                   КАК КаталогИнформационнойБазы,
	|	Проекты.Ветка.Имя                                        КАК КаталогХранилища,
	|	Проекты.ИмяПользователяИБДляЗагрузкиМетаданных           КАК ИмяПользователяИнформационнойБазы,
	|	Проекты.ИмяПользователяХранилищаДляЗагрузкиМетаданных    КАК ИмяПользователяХранилища,
	|	Проекты.ПарольПользователяИБДляЗагрузкиМетаданных        КАК ПарольПользователяИнформационнойБазы,
	|	Проекты.ПарольПользователяХранилищаДляЗагрузкиМетаданных КАК ПарольПользователяХранилища,
	|	Проекты.ВерсияПлатформы                                  КАК ВерсияПлатформы
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Проект"
	;
	
	Структура = Новый Структура();
	Структура.Вставить("КаталогИнформационнойБазы",            "");
	Структура.Вставить("КаталогХранилища",                     "");
	Структура.Вставить("ИмяПользователяИнформационнойБазы",    "");
	Структура.Вставить("ИмяПользователяХранилища",             "");
	Структура.Вставить("ПарольПользователяИнформационнойБазы", "");
	Структура.Вставить("ПарольПользователяХранилища",          "");
	Структура.Вставить("ВерсияПлатформы",                      "");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

Функция НастройкиПодключенияКИнформационнойБазеИХранилищуДляВерсииПроекта(Проект)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВерсииПроекта.КаталогИБДляЗагрузкиМетаданных                   КАК КаталогИнформационнойБазы,
	|	ВерсииПроекта.Ветка.Имя                                        КАК КаталогХранилища,
	|	ВерсииПроекта.ИмяПользователяИБДляЗагрузкиМетаданных           КАК ИмяПользователяИнформационнойБазы,
	|	ВерсииПроекта.ИмяПользователяХранилищаДляЗагрузкиМетаданных    КАК ИмяПользователяХранилища,
	|	ВерсииПроекта.ПарольПользователяИБДляЗагрузкиМетаданных        КАК ПарольПользователяИнформационнойБазы,
	|	ВерсииПроекта.ПарольПользователяХранилищаДляЗагрузкиМетаданных КАК ПарольПользователяХранилища,
	|	ВерсииПроекта.ВерсияПлатформыХранилища                         КАК ВерсияПлатформы
	|ИЗ
	|	Справочник.ВерсииПроекта КАК ВерсииПроекта
	|ГДЕ
	|	ВерсииПроекта.Ссылка = &Проект";
	
	Структура = Новый Структура();
	Структура.Вставить("КаталогИнформационнойБазы",            "");
	Структура.Вставить("КаталогХранилища",                     "");
	Структура.Вставить("ИмяПользователяИнформационнойБазы",    "");
	Структура.Вставить("ИмяПользователяХранилища",             "");
	Структура.Вставить("ПарольПользователяИнформационнойБазы", "");
	Структура.Вставить("ПарольПользователяХранилища",          "");
	Структура.Вставить("ВерсияПлатформы",                      "");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

// Функция возвращает новый объект для хранения сведений о метаданных, с "расширенным" хранением.
//
// Параметры:
//	ИмяКласса (Строка) - имя класса объектов.
//
// Возвращаемое значение:
//	СправочникОбъект.
//	Объект справочника для метаданных с "расширенным" хранением, например: СправочникОбъект.ОбщиеМодули.
//
Функция НовыйОбъектРасширенногоХранения(ИмяКласса)
	
	ИмяМенеджераСправочника = ИмяКласса + "Свойства";
	Возврат Справочники[ИмяМенеджераСправочника].СоздатьЭлемент();
	
КонецФункции

// Функция возвращает строку - имя справочника в котором хранятся дополнительные свойства
// для расширенно хранимых свойств объектов метаданных.
//
//	КлассОбъектовМетаданных (Строка) - имя класса объектов метаданных.
//
// Возвращаемое значение:
//	Строка. Имя справочника расширенно хранимых свойств.
//
Функция ИмяСправочникаСвойствРасширенногоХранения(КлассОбъектовМетаданных)
	
	ИмяСправочникаСвойств = "%1Свойства";
	ИмяСправочникаСвойств = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИмяСправочникаСвойств, КлассОбъектовМетаданных);
	
	Возврат ИмяСправочникаСвойств;
	
КонецФункции

// Функция проверяет, существует ли хоть одна запись в соответствующем подчиненном справочнике
// в котором хранятся "расширенные" свойства объекта метаданных.
//
// Параметры:
//	ОбъектМетаданных (СправочникСсылка.ОбъектыМетаданных) - объект метаданных.
//
// Возвращаемое значение:
//	Булево. Истина - существует, Ложь - нет.
//
Функция СуществуетЭлементСправочникаСвойств(ОбъектМетаданных)
	
	// Получить имя справочника в котором хранятся "расширенно" хранимые свойства.
	КлассОбъектовМетаданных = ИмяКлассаОбъектаМетаданных(ОбъектМетаданных);
	
	ИмяСправочникаСвойств = ИмяСправочникаСвойствРасширенногоХранения(КлассОбъектовМетаданных);
	
	// Сформировать текст запроса к подчиненному справочнику.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЭлементов
	|ИЗ
	|	Справочник.%1 КАК СправочникСвойств
	|ГДЕ
	|	СправочникСвойств.Владелец = &Владелец";
	
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, ИмяСправочникаСвойств);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Владелец", ОбъектМетаданных);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	СуществуетЭлемент = НЕ (Выборка.КоличествоЭлементов = 0);
	
	Возврат СуществуетЭлемент;
	
КонецФункции

// Процедура создает новый элемент в подчиненном справочнике для "расширенно" хранимых
// объектов.
//
// Параметры:
//	ОбъектМетаданных (СправочникСсылка.ОбъектыМетаданных) - объект метаданных,
//	Отказ (Булево) - флаг отказа.
//
Процедура СоздатьЭлементСправочникаСвойств(ОбъектМетаданных, Отказ)
	
	КлассОбъектовМетаданных = ИмяКлассаОбъектаМетаданных(ОбъектМетаданных);
	
	НовыйОбъект = НовыйОбъектРасширенногоХранения(КлассОбъектовМетаданных);
	НовыйОбъект.Владелец = ОбъектМетаданных;
	НовыйОбъект.Наименование = ОбъектМетаданных.Имя;
	
	Попытка
		
		НовыйОбъект.Записать();
		
	Исключение
		
		Отказ = Истина;
		
	КонецПопытки;
	
КонецПроцедуры

Функция ТаблицаТипОбъектаИндексКартинки() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
	Таблица.Колонки.Добавить("ТипОбъекта", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ЭтоГруппа", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ЕстьКартинкаГруппы", Новый ОписаниеТипов("Булево"));
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеОбъекты";
	НоваяСтрока.ИндексКартинки = 2;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Константы";
	НоваяСтрока.ИндексКартинки = 31;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Справочники";
	НоваяСтрока.ИндексКартинки = 32;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Документы";
	НоваяСтрока.ИндексКартинки = 93;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ЖурналыДокументов";
	НоваяСтрока.ИндексКартинки = 34;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Перечисления";
	НоваяСтрока.ИндексКартинки = 35;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Отчеты";
	НоваяСтрока.ИндексКартинки = 36;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Обработки";
	НоваяСтрока.ИндексКартинки = 37;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПланыВидовХарактеристик";
	НоваяСтрока.ИндексКартинки = 38;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПланыСчетов";
	НоваяСтрока.ИндексКартинки = 39;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПланыВидовРасчета";
	НоваяСтрока.ИндексКартинки = 40;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Подсистемы";
	НоваяСтрока.ИндексКартинки = 41;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "РегистрыСведений";
	НоваяСтрока.ИндексКартинки = 75;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "РегистрыНакопления";
	НоваяСтрока.ИндексКартинки = 76;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "РегистрыБухгалтерии";
	НоваяСтрока.ИндексКартинки = 77;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "РегистрыРасчета";
	НоваяСтрока.ИндексКартинки = 78;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "БизнесПроцессы";
	НоваяСтрока.ИндексКартинки = 17;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Задачи";
	НоваяСтрока.ИндексКартинки = 80;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПланыОбмена";
	НоваяСтрока.ИндексКартинки = 45;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Роли";
	НоваяСтрока.ИндексКартинки = 44;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ФункциональныеОпции";
	НоваяСтрока.ИндексКартинки = 84;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеМодули";
	НоваяСтрока.ИндексКартинки = 81;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПодпискиНаСобытия";
	НоваяСтрока.ИндексКартинки = 82;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "РегламентныеЗадания";
	НоваяСтрока.ИндексКартинки = 83;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПакетыXDTO";
	НоваяСтрока.ИндексКартинки = 85;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "КритерииОтбора";
	НоваяСтрока.ИндексКартинки = 86;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ХранилищаНастроек";
	НоваяСтрока.ИндексКартинки = 87;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеКоманды";
	НоваяСтрока.ИндексКартинки = 88;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "WebСервисы";
	НоваяСтрока.ИндексКартинки = 89;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "WSСсылки";
	НоваяСтрока.ИндексКартинки = 92;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ГруппыКоманд";
	НоваяСтрока.ИндексКартинки = 90;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеФормы";
	НоваяСтрока.ИндексКартинки = 47;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПараметрыСеанса";
	НоваяСтрока.ИндексКартинки = 43;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Последовательности";
	НоваяСтрока.ИндексКартинки = 33;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Нумераторы";
	НоваяСтрока.ИндексКартинки = 94;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеРеквизиты";
	НоваяСтрока.ИндексКартинки = 95;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеМакеты";
	НоваяСтрока.ИндексКартинки = 96;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОбщиеКартинки";
	НоваяСтрока.ИндексКартинки = 97;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "HTTPСервисы";
	НоваяСтрока.ИндексКартинки = 98;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ПараметрыФункциональныхОпций";
	НоваяСтрока.ИндексКартинки = 99;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОпределяемыеТипы";
	НоваяСтрока.ИндексКартинки = 100;
	НоваяСтрока.ЭтоГруппа = Истина;
	НоваяСтрока.ЕстьКартинкаГруппы = Истина;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ОпределяемыеТипы";
	НоваяСтрока.ИндексКартинки = 101;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Истина;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ВнешниеИсточникиДанных";
	НоваяСтрока.ИндексКартинки = 102;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Стили";
	НоваяСтрока.ИндексКартинки = 103;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "ЭлементыСтиля";
	НоваяСтрока.ИндексКартинки = 104;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ТипОбъекта = "Языки";
	НоваяСтрока.ИндексКартинки = 105;
	НоваяСтрока.ЭтоГруппа = Ложь;
	НоваяСтрока.ЕстьКартинкаГруппы = Ложь;
	
	Таблица.Индексы.Добавить("ТипОбъекта,ЭтоГруппа");
	Таблица.Индексы.Добавить("ИндексКартинки");
	
	Возврат Таблица;
КонецФункции

Функция ТипОбъектаПоИдексуКартинки(ИндексКартинки, ТаблицаТипОбъектаИндексКартинки = Неопределено) Экспорт
	
	Если ТаблицаТипОбъектаИндексКартинки = Неопределено Тогда
		ТаблицаТипОбъектаИндексКартинки = ТаблицаТипОбъектаИндексКартинки();
	КонецЕсли;
	
	НайденнаяСтрока = ТаблицаТипОбъектаИндексКартинки.Найти(ИндексКартинки, "ИндексКартинки"); 
	
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат "";
	Иначе
		Возврат НайденнаяСтрока.ТипОбъекта;
	КонецЕсли;
	
КонецФункции

Функция ИндексКартинкиПоТипуОбъекта(ТипОбъекта, ТаблицаТипОбъектаИндексКартинки = Неопределено, ЭтоГруппа = Ложь) Экспорт
	
	Если ТаблицаТипОбъектаИндексКартинки = Неопределено Тогда
		ТаблицаТипОбъектаИндексКартинки = ТаблицаТипОбъектаИндексКартинки();
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ТипОбъекта", ТипОбъекта);
	
	НайденныеСтроки = ТаблицаТипОбъектаИндексКартинки.НайтиСтроки(СтруктураОтбора); 
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат 91;
	ИначеЕсли НайденныеСтроки.Количество() = 1 Тогда
		Возврат НайденныеСтроки[0].ИндексКартинки;
	Иначе
		Для Каждого СтрМас из НайденныеСтроки Цикл
			Если СтрМас.ЭтоГруппа = ЭтоГруппа Тогда
				Возврат СтрМас.ИндексКартинки;
			КонецЕсли;
		КонецЦикла;
		
		Возврат 91;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаПолныхИменОбъектовМетаданныхПоВТИзмененныеМетаданные(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИзмененныеМетаданные.ОбъектМетаданных.Наименование КАК ОбъектМетаданныхПолноеИмя,
	|	ИзмененныеМетаданные.ОбъектМетаданных ССЫЛКА Справочник.Подсистемы КАК ЭтоПодсистема,
	|	ВЫБОР
	|		КОГДА ИзмененныеМетаданные.ПодчиненныйОбъект ССЫЛКА Справочник.ФормыОбъектовМетаданных
	|			ТОГДА ВЫРАЗИТЬ(ИзмененныеМетаданные.ПодчиненныйОбъект КАК Справочник.ФормыОбъектовМетаданных).Наименование
	|		КОГДА ИзмененныеМетаданные.ПодчиненныйОбъект ССЫЛКА Справочник.МакетыОбъектовМетаданных
	|			ТОГДА ВЫРАЗИТЬ(ИзмененныеМетаданные.ПодчиненныйОбъект КАК Справочник.МакетыОбъектовМетаданных).Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПодчиненныйОбъектПолноеИмя,
	|	ИзмененныеМетаданные.ПодчиненныйОбъект ССЫЛКА Справочник.ФормыОбъектовМетаданных КАК ПодчиненныйОбъектЭтоФорма
	|ИЗ
	|	ВТИзмененныеМетаданные КАК ИзмененныеМетаданные";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВыборкаПоМетаданным = Запрос.Выполнить().Выбрать();
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("ПолноеИмя", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000)));
	
	Пока ВыборкаПоМетаданным.Следующий() Цикл
		
		Если ВыборкаПоМетаданным.ЭтоПодсистема Тогда
			ПолноеИмя = "Подсистема." + СтрЗаменить(ВыборкаПоМетаданным.ПолноеИмя, ".", ".Подсистема.");
		Иначе
			Если Не ПустаяСтрока(ВыборкаПоМетаданным.ПодчиненныйОбъектПолноеИмя) Тогда
				ЧастиИмени = СтрРазделить(ВыборкаПоМетаданным.ПодчиненныйОбъектПолноеИмя, ".");
			
				Если ВыборкаПоМетаданным.ПодчиненныйОбъектЭтоФорма Тогда
					КлассОбъекта = "Форма";
				Иначе
					КлассОбъекта = "Макет";
				КонецЕсли;
				
				ПолноеИмя = ЧастиИмени[0]
							+ "." + ЧастиИмени[1]
							+ "." + КлассОбъекта
							+ "." + ЧастиИмени[2];
			Иначе
				ПолноеИмя = ВыборкаПоМетаданным.ОбъектМетаданныхПолноеИмя;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ПолноеИмя = ПолноеИмя;
		
	КонецЦикла;
	
	Возврат ТаблицаОбъектов;
	
КонецФункции

Функция ПредставлениеПодчиненногоМодуля(ПодчиненныйОбъект) Экспорт

	Если ЗначениеЗаполнено(ПодчиненныйОбъект)
		И ТипЗнч(ПодчиненныйОбъект) = Тип("ПеречислениеСсылка.ТипыМодулейОбъектовМетаданных") Тогда
			
		Для Каждого ЗначениеПеречисления из ПодчиненныйОбъект.Метаданные().ЗначенияПеречисления Цикл
			Если Перечисления.ТипыМодулейОбъектовМетаданных[ЗначениеПеречисления.Имя] = ПодчиненныйОбъект Тогда
				Возврат ЗначениеПеречисления.Имя;
			КонецЕсли;
		КонецЦикла;
			
		Возврат "";
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти
