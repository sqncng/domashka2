Процедура УстановитьКодСправочника(Объект) Экспорт
	
	Если (Объект.ЭтоНовый() ИЛИ ТипЗнч(Объект)=Тип("СправочникОбъект.ЭлементыСправки")) И НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Объект.УстановитьНовыйКод();
	КонецЕсли;
		
КонецПроцедуры

// Устанавливает правильное значение реквизита ПолныйКод
//
Процедура УстановитьПолныйКодСправочника(Объект, КоличествоРазрядов = 0) Экспорт
	
	Если КоличествоРазрядов > 0 Тогда
		Код = Формат(Число(Объект.Код), "ЧЦ=" + КоличествоРазрядов + "; ЧВН=");
	Иначе
		Код = Объект.Код;
	КонецЕсли;
	
	Если НЕ Объект.Родитель.Пустая() Тогда
		Объект.ПолныйКод = СокрЛП(Универсальные.ЗначенияРеквизитовСправочника(Объект.Родитель, "ПолныйКод").ПолныйКод) + "." + Код;
	Иначе
		Объект.ПолныйКод = Код;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает правильное значение реквизита ПолныйКод дочерним элементам записываемого справочника.
//
Процедура УстановкаПолногоКодаДочернихЭлементовСправочникаПриЗаписи(Источник, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Справочник." + Источник.Метаданные().Имя + "
	|ГДЕ
	|	Родитель = &Родитель
	|	И ПОДСТРОКА(ПолныйКод, 1, &ДлинаПолногоКодаРодителя) <> &ПолныйКодРодителя";
	
	Запрос.УстановитьПараметр("Родитель", Источник.Ссылка);
	Запрос.УстановитьПараметр("ДлинаПолногоКодаРодителя", СтрДлина(Источник.ПолныйКод));
	Запрос.УстановитьПараметр("ПолныйКодРодителя", Источник.ПолныйКод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Выборка.Ссылка.ПолучитьОбъект().Записать();
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Меняет владельца у подчиненных элементов
Процедура ПереписатьВладельцевУПодчиненныхЭлементов(Ссылка, Отказ, Сообщение) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Справочники[Ссылка.Метаданные().Имя].Выбрать(Ссылка);
	Пока Выборка.Следующий() Цикл
		Если Не Ссылка.Владелец = Выборка.Владелец Тогда
			Объект = Выборка.ПолучитьОбъект();
			Попытка
				Объект.Заблокировать();
			Исключение
				СоставноеСообщение = НСтр(" ru= ""Не удалось изменить владельца у подчиненного элемента: %Ссылка% по причине: %ОписаниеОшибки%""; ");
				СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%Ссылка%", Выборка.Ссылка);
				СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%ОписаниеОшибки%", ОписаниеОшибки());
				Сообщение = Сообщение + Символы.ПС + СоставноеСообщение;
				Отказ = Истина;
				Возврат;
			КонецПопытки;
			Объект.Владелец = Ссылка.Владелец;
			Объект.ОбменДанными.Загрузка = Истина;
			Попытка
				Объект.Записать();
				Объект.Разблокировать();
			Исключение
				СоставноеСообщение = НСтр(" ru= ""Не удалось изменить владельца у подчиненного элемента: %Ссылка%""; "); 
				СоставноеСообщение = СтрЗаменить(СоставноеСообщение, "%Ссылка%", Выборка.Ссылка);
				Сообщение = Сообщение + Символы.ПС + СоставноеСообщение;
				Отказ = Истина;
				Возврат;
			КонецПопытки; 
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры