
#Область ПрограммныйИнтерфейс

#Область ОбщиеДляВсехПлановОбменаПроцедурыИФункции

// Определяет массив узлов на которых будет произведена регистрация объекта
Функция ОпределитьМассивПолучателей (Выгрузка, Получатели) Экспорт
	
	МассивИсключаемыхУзлов = Новый Массив;

	Для Каждого Узел Из Получатели Цикл
		Если Не Выгрузка И Узел.ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация"
			Или Узел.ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
			МассивИсключаемыхУзлов.Добавить(Узел);
		КонецЕсли;
	КонецЦикла;

	Получатели = ОбщегоНазначенияКлиентСервер.РазностьМассивов(Получатели, МассивИсключаемыхУзлов);

	Возврат Получатели;

КонецФункции

// Обновляет кэш значений настроек узлов планов обмена
Процедура ОбновитьКэшМеханизмовРегистрации() Экспорт
	
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		ОбменДаннымиВызовСервера.СброситьКэшМеханизмаРегистрацииОбъектов();
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

// Контролирует создание узла плана обмена в базовой версии.
Процедура КонтрольСозданияУзлаПланаОбменаПередЗаписью(Источник, Отказ) Экспорт
	Отказ = Не ОбменДаннымиСППР.ЭтоСозданиеУзлаОбмена(Источник);
КонецПроцедуры

#КонецОбласти

#Область ОбменРИБСОтборами

// Процедура-обработчик события "ПередЗаписью" ссылочных типов данных (кроме документов) для механизма регистрации объектов на узлах
//
// Параметры:
//  Источник       - источник события, кроме типа ДокументОбъект
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура ОбменДаннымиРИБСОтборамиПередЗаписью(Источник, Отказ) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписью("РИБСОтборами", Источник, Отказ);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" документов для механизма регистрации объектов на узлах
//
// Параметры:
//  Источник       - ДокументОбъект - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
//  РежимЗаписи     - РежимЗаписиДокумента - текущий режим записи документа
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа
//
Процедура ОбменДаннымиРИБСОтборамиПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюДокумента("РИБСОтборами", Источник, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" константы для механизма регистрации объектов на узлах
//
// Параметры:
//  Источник       - КонстантаМенеджерЗначения - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура ОбменДаннымиРИБСОтборамиПередЗаписьюКонстанты(Источник, Отказ) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюКонстанты("РИБСОтборами", Источник, Отказ);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" регистров для механизма регистрации объектов на узлах
//
// Параметры:
//  Источник       - НаборЗаписейРегистра - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
//  Замещение      - Булево - признак замещения существующего набора записей
// 
Процедура ОбменДаннымиРИБСОтборамиПередЗаписьюРегистра(Источник, Отказ, Замещение) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюРегистра("РИБСОтборами", Источник, Отказ, Замещение);
	
КонецПроцедуры

// Процедура-обработчик события "ПередУдалением" ссылочных типов данных для механизма регистрации объектов на узлах
//
// Параметры:
//  Источник       - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура ОбменДаннымиРИБСОтборамиПередУдалением(Источник, Отказ) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередУдалением("РИБСОтборами", Источник, Отказ);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" для контроля проведения документов
// c неполными движениями на узлах распределенной информационной базы с отборами
//
// Параметры:
//  Источник        - источник события
//  Отказ           - Булево - флаг отказа от выполнения обработчика
//  РежимЗаписи     - РежимЗаписиДокумента - текущий режим записи документа
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа
//
Процедура ОбменДаннымиРИБСОтборамиКонтрольИзменения(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	// Если это главный узел или включен режим обмена данными загрузка, то необходимости в его контроле нет!!!
	Если Не ОбменДаннымиПовтИспСППР.ЭтоПодчиненныйУзелРИБСОтбором()
		Или Источник.ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	// Если объект не новый, то инициализируем объект уже записаный в ИБ.
	// Тем самым отсекая возможные ситуации при которых пользователь может изменить 
	// открытый объект, под условия прохохождения фильтра
	
	Если Не Источник.ЭтоНовый() Тогда
		ОбъектИБ = Источник.Ссылка.ПолучитьОбъект();
	Иначе
		ОбъектИБ = Источник;
	КонецЕсли;
	
	Отказ = ОбменДаннымиСППР.ПолучитьУзлыДляОбъекта(ОбъектИБ).Найти(ПланыОбмена.РИБСОтборами.ЭтотУзел().Ссылка) = Неопределено;
	
	Если Отказ Тогда
		
		Сообщение = Новый СообщениеПользователю();
		
		Сообщение.Текст = НСтр("ru = 'Объект не может быть изменен в подчиненном узле распределенной информационной базы'");
		
		Если Не Источник.ЭтоНовый() Тогда
			Сообщение.КлючДанных = ОбъектИБ.Ссылка;
		КонецЕсли;
		
		Сообщение.УстановитьДанные(ОбъектИБ);
		
		Сообщение.Сообщить();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти