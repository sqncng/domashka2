
#Область ПрограммныйИнтерфейс

// Устанавливает отбор для указанного списка по проекту
//
// Параметры:
//  Список - список, для которого необходимо установить отбор
//  Проект - значение проекта, используемое для отбора
//
Процедура УстановитьОтборВСпискеПоПроекту(Список, Проект = Неопределено) Экспорт
	
	Если Проект = Неопределено Тогда
		Проект = ПараметрыСеанса.ТекущийПроект;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Проект, ВидСравненияКомпоновкиДанных.Равно,,ЗначениеЗаполнено(Проект));
	
КонецПроцедуры

// Возвращает значение проекта по умолчанию для текущего пользователя
//
// ВозвращаемоеЗначение:
//  Ссылка на проект. При невозможности определить проект возвращается пустая ссылка
//
Функция ПроектПоУмолчанию() Экспорт
	
	// Если проект не установлен в параметрах сеанса - анализируется,
	// имеется ли единственный доступный пользователю проект
	Проект = ПараметрыСеанса.ТекущийПроект;
	
	Если НЕ ЗначениеЗаполнено(Проект) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Проекты.Ссылка КАК Проект
		|ИЗ
		|	Справочник.Проекты КАК Проекты"
		;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество()=1 Тогда
			Выборка.Следующий();
			Проект = Выборка.Проект;
		Иначе
			Проект = Справочники.Проекты.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Проект;
	
КонецФункции

// Устанавливает параметры сеанса подсистемы обмена данными
//
// Параметры:
//  ИмяПараметра - Строка - имя параметра сеанса, значение которого необходимо установить
//  УстановленныеПараметры - массив - в данный параметр помещается информация об установленных параметрах сеанса
// 
Процедура УстановитьПараметрыСеансаПроектов(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	Проект = ТекущийПроект();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСеанса[ИмяПараметра] = Проект;
	УстановленныеПараметры.Добавить(ИмяПараметра);
	
КонецПроцедуры

Функция МассивПроектовПоОтбору(ЭлементОтбора) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Проекты.Ссылка КАК Проект
	|ИЗ
	|	Справочник.Проекты КАК Проекты"
	;
	
	СхемаКомпоновки = ОбщегоНазначенияСППР.СхемаКомпоновкиДанныхПоЗапросу(ТекстЗапроса);
	НастройкиКомпоновки = ОбщегоНазначенияСППР.СкомпоноватьНастройки(СхемаКомпоновки);
	
	Если ЭлементОтбора.Использование Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиКомпоновки.Отбор, "Проект", ЭлементОтбора.ПравоеЗначение, ЭлементОтбора.ВидСравнения,,Истина);
	КонецЕсли;
	
	МакетКомпоновки = ОбщегоНазначенияСППР.ПолучитьМакетКомпоновки(СхемаКомпоновки, НастройкиКомпоновки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ТаблицаРезультата = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТаблицаРезультата.ВыгрузитьКолонку("Проект");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает значение текущего проекта
//
// Возвращаемое значение:
//  Проект - СправочникСсылка.Проекты - текущий проект
//
Функция ТекущийПроект()
	
	Проект = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ОбщиеНастройкиПользователя", "ПроектПоУмолчанию", Справочники.Проекты.ПустаяСсылка());
	
	МассивДоступныхПроектов = ДоступныеПроекты();
	
	Если ЗначениеЗаполнено(Проект) Тогда
		
		Если МассивДоступныхПроектов.Найти(Проект) = Неопределено Тогда
			Проект = Справочники.Проекты.ПустаяСсылка();
		КонецЕсли;
		
		Возврат Проект;
		
	КонецЕсли;
	
	Если МассивДоступныхПроектов.Количество()=1 Тогда
		Возврат МассивДоступныхПроектов[0];
	КонецЕсли;
	
	Возврат Справочники.Проекты.ПустаяСсылка();
	
КонецФункции

Функция ДоступныеПроекты(Знач Пользователь = Неопределено)
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Проекты.Ссылка КАК Проект
	|ИЗ
	|	Справочник.Проекты КАК Проекты"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Проект");
	
КонецФункции

#КонецОбласти
