////////////////////////////////////////////////////////////////////////////////
// Клиент - серверные процедуры и функции подсистемы "Объекты на контроле"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Конструктор параметров постановки объекта на контроль
//
// Возвращаемое значение:
//   Структура - содержит:
//    * СписокКонтроля - Справочники.СпискиКонтроля - список контроля
//    * ОбъектКонтроля - СправочникСсылка.Ошибки,
//                       СправочникСсылка.ТехническиеПроекты,
//                                СправочникСсылка.Ветки,
//                                СправочникСсылка.ЗадачиПроцесса,
//                                Неопределено - ссылка на объект контроля - список контроля
//    * ДатаКонтроля            - Дата - дата контроля
//    * Ответственный           - Справочники.Пользователи - ответственный за объект.
//    * ТехническийПроект       - Справочники.ТехническиеПроекты - технический проект объекта контроля.
//    * ОжидаемаяДатаВыполнения - Дата - ожидаемая дата, к которой объект контроля будет выполнен.
//    * Решение                 - Строка - решение на дату контроля
//
Функция НовыйПараметрыПостановкиНаКонтроль() Экспорт
	
	ПараметрыПостановки = Новый Структура;
	ПараметрыПостановки.Вставить("СписокКонтроля",         ПредопределенноеЗначение("Справочник.СпискиКонтроля.ПустаяСсылка"));
	ПараметрыПостановки.Вставить("ОбъектКонтроля",         Неопределено);
	ПараметрыПостановки.Вставить("ДатаКонтроля",           Дата(1,1,1));
	ПараметрыПостановки.Вставить("Ответственный",          ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
	ПараметрыПостановки.Вставить("ТехническийПроект",      ПредопределенноеЗначение("Справочник.ТехническиеПроекты.ПустаяСсылка"));
	ПараметрыПостановки.Вставить("ОжидаемаяДатаВыполнения",Дата(1,1,1));
	ПараметрыПостановки.Вставить("Решение",               НСтр("ru = 'Объект поставлен на контроль'"));
	ПараметрыПостановки.Вставить("СтатусКонтроля",        "НеНаКонтроле");
	ПараметрыПостановки.Вставить("СледующаяДатаКонтроля",   Дата(1, 1, 1));
	
	Возврат ПараметрыПостановки;
	
КонецФункции

// Конструктор параметров новой записи контроля
//
// Возвращаемое значение:
//   Структура - содержит:
//    * СписокКонтроля          - Справочники.СпискиКонтроля - список контроля
//    * ОбъектКонтроля          - СправочникСсылка.Ошибки,
//                                СправочникСсылка.ТехническиеПроекты,
//                                СправочникСсылка.Ветки,
//                                СправочникСсылка.ЗадачиПроцесса,
//                                Неопределено - ссылка на объект контроля - список контроля
//    * Решение                 - Строка - решение на дату контроля
//    * ДатаКонтроля            - Дата - дата контроля
//    * ДатаУказанияРезультата  - Дата - дата контроля
//    * Результат               - Строка - результат к дате контроля
//    * ОжидаемаяДатаВыполнения - Дата - ожидаемая дата, к которой объект контроля будет выполнен.
//    * Ответственный           - Справочники.Пользователи - ответственный за объект.
//    * ТехническийПроект       - Справочники.ТехническиеПроекты - технический проект объекта контроля.
//    * ИсторическаяЗапись      - Булево - признак того что это историческая запись.
//
Функция НовыйДанныеЗаписиКонтроля() Экспорт

	ДанныеСтрокиСписка = Новый Структура;
	
	ДанныеСтрокиСписка.Вставить("СписокКонтроля",           ПредопределенноеЗначение("Справочник.СпискиКонтроля.ПустаяСсылка"));
	ДанныеСтрокиСписка.Вставить("ОбъектКонтроля",           Неопределено);
	ДанныеСтрокиСписка.Вставить("Решение",                 "");
	ДанныеСтрокиСписка.Вставить("ДатаКонтроля",             Дата(1, 1, 1));
	ДанныеСтрокиСписка.Вставить("ДатаУказанияРезультата",   Дата(1, 1, 1));
	ДанныеСтрокиСписка.Вставить("Результат",                "");
	ДанныеСтрокиСписка.Вставить("ОжидаемаяДатаВыполнения",  Дата(1, 1, 1));
	ДанныеСтрокиСписка.Вставить("Ответственный",            ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
	ДанныеСтрокиСписка.Вставить("ТехническийПроект",        ПредопределенноеЗначение("Справочник.ТехническиеПроекты.ПустаяСсылка"));
	ДанныеСтрокиСписка.Вставить("СледующаяДатаКонтроля",    Дата(1, 1, 1));
	ДанныеСтрокиСписка.Вставить("ИсторическаяЗапись",       Ложь);
	
	Возврат ДанныеСтрокиСписка;

КонецФункции

// Выполняет обновление элементов формы, относящихся к командам постановки на контроль.
//
// Параметры:
//  Форма   - ФормаКлиентскогоПриложения - форма в которой была выполнена команда.
//  СпискиКонтроля - ДанныеФормыКоллекция - содержит:
//   * СписокКонтроля     - СправочникСсылка.СпискиКонтроля 
//   * СтатусКонтроля     - Строка - может принимать значения "НеНаКонтроле", "НаКонтроле", "СнятСКонтроля"
//   * НаименованиеСписка - Строка - наименование списка контроля
//
Процедура ОбновитьЭлементыФормыПоставитьНаКонтроль(Форма, СпискиКонтроля) Экспорт

	Счетчик = 0;
	
	Для Каждого ДанныеСпискаКонтроля Из СпискиКонтроля Цикл
		
		ИмяКоманды = "ПоставитьНаКонтроль_" + Строка(Счетчик);
		
		ЭлементФормыКоманда = Форма.Элементы.Найти(ИмяКоманды);
		КомандаФормы        = Форма.Команды.Найти(ИмяКоманды);
		
		Если ЭлементФормыКоманда = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСпискаКонтроля.СтатусКонтроля = "НаКонтроле" Тогда
			КартинкаКоманды = БиблиотекаКартинок.ОбъектНаКонтроле;
		ИначеЕсли ДанныеСпискаКонтроля.СтатусКонтроля = "СнятСКонтроля" Тогда
			КартинкаКоманды = БиблиотекаКартинок.ОбъектСнятСКонтроля;
		ИначеЕсли ДанныеСпискаКонтроля.СтатусКонтроля = "НеНаКонтроле" Тогда
			КартинкаКоманды = БиблиотекаКартинок.ПоставитьНаКонтроль;
		КонецЕсли;
		
		ЭлементФормыКоманда.Картинка = КартинкаКоманды;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;

КонецПроцедуры

// Формирует текст подсказки команды постановки на контроль в форме элемента объекта контроля
//
// Параметры:
//   СтатусКонтроля     - Строка - может принимать значения "НеНаКонтроле", "НаКонтроле", "СнятСКонтроля"
//
// Возвращаемое значение:
//   Строка   - сформированный текст подсказки
//
Функция ТекстПодсказкиКомандыЭлементаФормы(СтатусКонтроля) Экспорт
	
	ТекстПодсказки = "";
	Если СтатусКонтроля = "НаКонтроле" Тогда
		ТекстПодсказки = НСтр("ru = 'На контроле'");
	ИначеЕсли СтатусКонтроля = "НеНаКонтроле" Тогда
		ТекстПодсказки = НСтр("ru = 'Поставить на контроль'");
	ИначеЕсли СтатусКонтроля = "СнятСКонтроля" Тогда
		ТекстПодсказки = НСтр("ru = 'Снят с контроля'");
	КонецЕсли;
	
	Возврат ТекстПодсказки;
	
КонецФункции

// Формирует текст сообщения пользователю, когда объект уже на контроле
//
// Параметры:
//   СтатусКонтроля     - Строка - может принимать значения "НеНаКонтроле", "НаКонтроле", "СнятСКонтроля".
//   ОбъектКонтроля     - СправочникСсылка - объект, который стоит уже на контроле.
//
// Возвращаемое значение:
//   Строка   - сформированный текст сообщения
//
Функция ТекстСообщенияОбъектУжеНаКонтроле(СтатусКонтроля, ОбъектКонтроля) Экспорт
	
	ТекстСообщения = "";
	
	Если СтатусКонтроля = "СнятСКонтроля" Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = '""%1"" не поставлен на контроль, так как уже снят с контроля'"), ОбъектКонтроля);
		
	ИначеЕсли СтатусКонтроля = "НаКонтроле" Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = '""%1"" не поставлен на контроль, так как уже находится на контроле'"), ОбъектКонтроля);
		
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

// Определяет вариант ведения списка контроля по сохраненному значению
//
// Параметры:
//  ТекущийВариант  - СправочникСсылка.СпискиКонтроля - сохраненное значение
//
// Возвращаемое значение:
//   СправочникСсылка.СпискиКонтроля - значение, которое будет использоваться
//
Функция ВариантВеденияСпискаКонтроля(ТекущийВариант) Экспорт
	
	Если ЗначениеЗаполнено(ТекущийВариант) Тогда
		
		Возврат ТекущийВариант;
		
	Иначе
		
		Возврат ПредопределенноеЗначение("Перечисление.ВариантыВеденияСпискаКонтроля.ДатаКонтроляНазначаетсяНаСписок");
		
	КонецЕсли;
	
КонецФункции

// Определяет наименование команды перехода в список контроля из сообщения системы взаимодействия
//
// Возвращаемое значение:
//   Строка - наименование команды
//
Функция ИмяКомандыПереходаИзСообщенияСистемыВзаимодействия() Экспорт
	
	Возврат "ПерейтиКСпискуКонтроля";
	
КонецФункции

#КонецОбласти
