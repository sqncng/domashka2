////////////////////////////////////////////////////////////////////////////////
// Клиент - серверные процедуры и функции подсистемы "Приоритеты и очереди работ"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Конструктор параметров записи приоритетов
//
// Возвращаемое значение:
//   Структура - содержит:
//    * Работа                  - СправочникСсылка.ТехническиеПроекты,
//                                СправочникСсылка.ЗадачиПроцесса - работа.
//    * Приоритет               - СправочникСсылка.ПриоритетыРабот - устанавливаемый приоритет.
//
Функция НовыйДанныеПриоритета() Экспорт

	ДанныеЗаписи = Новый Структура;
	
	ДанныеЗаписи.Вставить("Работа",          Неопределено);
	ДанныеЗаписи.Вставить("Приоритет",       ПредопределенноеЗначение("Справочник.ПриоритетыРабот.ПустаяСсылка"));
	ДанныеЗаписи.Вставить("Проект",          ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка"));
	ДанныеЗаписи.Вставить("СтарыйПриоритет", ПредопределенноеЗначение("Справочник.ПриоритетыРабот.ПустаяСсылка"));
	
	Возврат ДанныеЗаписи;

КонецФункции

// Конструктор параметров записи очереди работ
//
// Возвращаемое значение:
//   Структура - содержит:
//    * Сотрудник          - СправочникСсылка.Пользователи - сотрудник очереди
//    * Работа             - СправочникСсылка.ТехническиеПроекты,
//                           СправочникСсылка.ЗадачиПроцесса - работа.
//    * Приоритет            - СправочникСсылка.ПриоритетыРабот - устанавливаемый приоритет.
//    * ПорядокПриоритета    - Число - порядок приоритета.
//    * НомерВОчереди        - Число - номер в очереди приоритета.
//    * ПорядокНомерВОчереди - Число - сформированный сквозной номер в очереди.
//
Функция НовыйДанныеЗаписиОчередьРабот() Экспорт
	
	ДанныеЗаписи = Новый Структура;
	
	ДанныеЗаписи.Вставить("Сотрудник",            ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
	ДанныеЗаписи.Вставить("Работа",               ПредопределенноеЗначение("Справочник.ЗадачиПроцесса.ПустаяСсылка"));
	ДанныеЗаписи.Вставить("Приоритет",            ПредопределенноеЗначение("Справочник.ПриоритетыРабот.ПустаяСсылка"));
	ДанныеЗаписи.Вставить("ПорядокПриоритета",    0);
	ДанныеЗаписи.Вставить("НомерВОчереди",        0);
	ДанныеЗаписи.Вставить("ПорядокНомерВОчереди", 0);
	
	Возврат ДанныеЗаписи;
	
КонецФункции

// Выполняет обновление элементов формы, относящихся к командам изменения приоритета.
//
// Параметры:
//  Форма   - ФормаКлиентскогоПриложения - форма в которой была выполнена команда.
//  Приоритеты - ДанныеФормыКоллекция - содержит:
//   * Приоритет    - СправочникСсылка.ПриоритетыРабот 
//   * Установлен   - Булево - 
//   * Наименование - Строка - наименование приоритета
//
Процедура ОбновитьЭлементыФормыИзменитьПриоритет(Форма, Приоритеты) Экспорт

	Счетчик = 0;
	
	Для Каждого ДанныеПриоритета Из Приоритеты Цикл
		
		ИмяКоманды = "УстановитьПриоритет_" + Строка(Счетчик);
		
		ЭлементФормыКоманда = Форма.Элементы.Найти(ИмяКоманды);
		
		Если ЭлементФормыКоманда = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементФормыКоманда.Пометка     = ДанныеПриоритета.Установлен;
		ЭлементФормыКоманда.Доступность = Форма.ЕстьПравоИзмененияПриоритета;
		
		Если ДанныеПриоритета.Установлен Тогда
			Форма.Элементы.ПриоритетПодменю.Заголовок = ДанныеПриоритета.Наименование;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;

КонецПроцедуры

// Определяет сдвиг приоритета относительно приоритета по умолчанию
//
// Параметры:
//  СписокПриоритетов     - СпискокЗначений -                  список приоритетов проекта.
//  ПриоритетПоУмолчанию  - СправочникСсылка.ПриоритетыРабот - приоритет по умолчанию.
//
// Возвращаемое значение:
//   Соответствие - содержит приоритеты и их сдвиги относительно приоритета по умолчанию:
//
Функция СдвигиПриоритетов(СписокПриоритетов, ПриоритетПоУмолчанию) Экспорт
	
	СдвигиПриоритетов = Новый Соответствие;
	
	ЭлементСписка = СписокПриоритетов.НайтиПоЗначению(ПриоритетПоУмолчанию);
	ИндексПриоритетаПоУмолчанию = СписокПриоритетов.Индекс(ЭлементСписка);
	
	Для Каждого ЭлементСпискаПриоритетов Из СписокПриоритетов Цикл
		СдвигиПриоритетов.Вставить(ИндексПриоритетаПоУмолчанию - СписокПриоритетов.Индекс(ЭлементСпискаПриоритетов),
		                           ЭлементСпискаПриоритетов.Значение);
	КонецЦикла;
	
	Возврат СдвигиПриоритетов;
	
КонецФункции

// Получает сдвиг приоритета относительно другого приоритета
//
// Параметры:
//  СписокПриоритетов - СпискокЗначений                  - список приоритетов проекта.
//  ПриоритетОтсчета  - СправочникСсылка.ПриоритетыРабот - приоритет относительно которого определяется сдвиг.
//  Приоритет         - СправочникСсылка.ПриоритетыРабот - приоритет для которого определяется сдвиг.
//
// Возвращаемое значение:
//   Соответствие - содержит приоритеты и их сдвиги относительно приоритета по умолчанию:
//
Функция СдвигПоПриоритету(СписокПриоритетов, ПриоритетОтсчета, Приоритет) Экспорт
	
	Если ПриоритетОтсчета = Приоритет Тогда
		Возврат 0;
	КонецЕсли;
	
	ЭлементСпискаПриоритетОтсчета = СписокПриоритетов.НайтиПоЗначению(ПриоритетОтсчета);
	ИндексПриоритетаОтсчета       = СписокПриоритетов.Индекс(ЭлементСпискаПриоритетОтсчета);
	
	ЭлементСпискаПриоритет = СписокПриоритетов.НайтиПоЗначению(Приоритет);
	ИндексПриоритета       = СписокПриоритетов.Индекс(ЭлементСпискаПриоритет);
	
	Возврат ИндексПриоритетаОтсчета - ИндексПриоритета;
	
КонецФункции

#КонецОбласти
