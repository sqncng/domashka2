#Область ПрограммныйИнтерфейс

// Проекты для которых ведется справка
//
// Параметры:
//  ПроектБиблиотека - СправочникСсылка.Проекты - Проект в кототором ведется справка по дочерним проектам
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//       * Проект           - СправочникСсылка.Проекты.
//       * ИмяПроекта       - Строка.
//
Функция ПроектыДляКоторыхВедетсяСправка(ПроектБиблиотека) Экспорт
	
	Возврат РаботаСоСправкой.ПроектыДляКоторыхВедетсяСправка(ПроектБиблиотека);
	
КонецФункции

// Строковое представление списка проектов
//
// Параметры:
//  ПроектыUID  - Строка - список идентификаторов проекта в строковом представлении
//  Разделитель - Строка - По умолчанию значение - ";"
// 
// Возвращаемое значение:
//   - Строка - Строковое представление проектов, разделенные переданным разделителем
//
Функция ПолучитьСтроковоеПредставлениеПроектов(ПроектыUID, Разделитель = ";") Экспорт
	
	МассивИдентификаторовПроекта = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПроектыUID, Разделитель);
	
	МассивПроекты = Новый Массив;
	Для Каждого ИдентификаторПроекта Из МассивИдентификаторовПроекта Цикл
		ПроектСсылка = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторПроекта));
		МассивПроекты.Добавить(ПроектСсылка);
	КонецЦикла; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если МассивПроекты.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Проекты", МассивПроекты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Проекты.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка В(&Проекты)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	ИменаПроектов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
	Возврат СтрСоединить(ИменаПроектов, Разделитель);
	
КонецФункции

#КонецОбласти