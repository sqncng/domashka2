
// Общая процедура установки статуса контроля, переданного в качестве параметра
//
Процедура УстановитьСтатусКонтроля(Ссылка, ВидОбъекта, ТекущийПользователь, СтатусКонтроля) Экспорт
	
	// Определяется, когда последний раз изменялся контролируемый объект
	
	ЗаписьДатыИзменения = РегистрыСведений.ДатыИзмененияОбъектов.СоздатьМенеджерЗаписи();
	
	ЗаписьДатыИзменения.КонтролируемыйОбъект = Ссылка;
	ЗаписьДатыИзменения.ВидОбъекта = ВидОбъекта;
	
	ЗаписьДатыИзменения.Прочитать();
	
	// Если запись изменения не найдена, она регистрируется текущим временем
	
	Если НЕ ЗаписьДатыИзменения.Выбран() Тогда
		ЗаписьДатыИзменения = РегистрыСведений.ДатыИзмененияОбъектов.СоздатьМенеджерЗаписи();
		
		ЗаписьДатыИзменения.КонтролируемыйОбъект = Ссылка;
		ЗаписьДатыИзменения.ДатаИзменения        = ТекущаяДата();
		ЗаписьДатыИзменения.Комментарии          = "";
		ЗаписьДатыИзменения.Пользователь         = Справочники.Пользователи.ПустаяСсылка();
		ЗаписьДатыИзменения.ВидОбъекта           = ВидОбъекта;
		
		ЗаписьДатыИзменения.Записать(Истина);
	КонецЕсли;
	
	// Если объект ставится на контроль, то принудительно записывается версия, если ее не было
	
	Если СтатусКонтроля = Перечисления.СостоянияКонтроляОбъектов.НаКонтроле Тогда
		ЗаписьВерсииОбъекта = РегистрыСведений.ВерсииОбъектов.СоздатьМенеджерЗаписи();
		
		ЗаписьВерсииОбъекта.Период               = ЗаписьДатыИзменения.ДатаИзменения;
		ЗаписьВерсииОбъекта.ВерсионируемыйОбъект = Ссылка;
		ЗаписьВерсииОбъекта.ВидОбъекта           = ВидОбъекта;
		
		ЗаписьВерсииОбъекта.Прочитать();
		
		Если НЕ ЗаписьВерсииОбъекта.Выбран() Тогда
			ЗаписьВерсииОбъекта.Период               = ЗаписьДатыИзменения.ДатаИзменения;
			ЗаписьВерсииОбъекта.ВерсионируемыйОбъект = Ссылка;
			ЗаписьВерсииОбъекта.Пользователь         = ЗаписьДатыИзменения.Пользователь;
			ЗаписьВерсииОбъекта.ВидОбъекта           = ВидОбъекта;
			
			Версионирование.ЗаполнитьХранилищеВерсии(ЗаписьВерсииОбъекта);
			
			ЗаписьВерсииОбъекта.Записать(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	// Записывается статус контроля
	
	ЗаписьКонтроляИзменений = РегистрыСведений.КонтрольИзменений.СоздатьМенеджерЗаписи();
	
	ЗаписьКонтроляИзменений.КонтролируемыйОбъект = Ссылка;
	ЗаписьКонтроляИзменений.Пользователь         = ТекущийПользователь;
	ЗаписьКонтроляИзменений.СтатусКонтроля       = СтатусКонтроля;
	ЗаписьКонтроляИзменений.ДатаКонтроля         = ЗаписьДатыИзменения.ДатаИзменения;
	ЗаписьКонтроляИзменений.ВидОбъекта           = ЗаписьДатыИзменения.ВидОбъекта;
	
	ЗаписьКонтроляИзменений.Записать(Истина);

КонецПроцедуры

// Определяет и возвращает статус контроля объекта
//
// Параметры:
//  Объект - контрлируемый объект, статус которого требуется определить
//
// Возвращаемое значение:
//  Строка- статус объекта
//
Функция СтатусКонтроля(Объект, ВидОбъекта = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДатыИзмененияОбъектов.ДатаИзменения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения,
	|	КонтрольИзменений.СтатусКонтроля КАК СтатусКонтроля,
	|	КонтрольИзменений.ДатаКонтроля КАК ДатаКонтроля
	|ИЗ
	|	РегистрСведений.КонтрольИзменений КАК КонтрольИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыИзмененияОбъектов КАК ДатыИзмененияОбъектов
	|		ПО КонтрольИзменений.КонтролируемыйОбъект = ДатыИзмененияОбъектов.КонтролируемыйОбъект
	|ГДЕ
	|	КонтрольИзменений.Пользователь = &ТекущийПользователь
	|	И КонтрольИзменений.КонтролируемыйОбъект = &КонтролируемыйОбъект
	|	И КонтрольИзменений.ВидОбъекта = &ВидОбъекта";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("КонтролируемыйОбъект", Объект);
	Запрос.УстановитьПараметр("ВидОбъекта", ?(ВидОбъекта <> Неопределено, ВидОбъекта, Версионирование.ВидВерсионируемогоОбъекта(Объект)));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.СтатусКонтроля = Перечисления.СостоянияКонтроляОбъектов.НеПроверено Тогда
			Возврат "Не проверено";
		ИначеЕсли Выборка.СтатусКонтроля = Перечисления.СостоянияКонтроляОбъектов.СнятоСКонтроля Тогда
			Возврат "Снято с контроля";
		ИначеЕсли Выборка.СтатусКонтроля = Перечисления.СостоянияКонтроляОбъектов.НаКонтроле Тогда
			Если Выборка.ДатаКонтроля < Выборка.ДатаИзменения Тогда
				Возврат "Изменено";
			Иначе
				Возврат "Проверено";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат "Добавлено";
	
КонецФункции

Процедура УстановитьУсловноеОформлениеСпискаСостояниеКонтроля(УсловноеОформлениеСписка) Экспорт
	
	// Установка представления и цвета сосояния контроля объекта в списке
	
	ЦветТекстаИзмененных      = Метаданные.ЭлементыСтиля.ЦветТекстаПросроченныхЭлементов.Значение;
	ЦветТекстаСнятыхСКонтроля = Метаданные.ЭлементыСтиля.ЦветТекстаСнятыхСКонтроляОбъектов.Значение;
	ЦветТекстаПроверенных     = Метаданные.ЭлементыСтиля.ЦветТекстаПроверенныхКонтролируемыхОбъектов.Значение;
	
	ТипЭлементОтбора  = Тип("ЭлементОтбораКомпоновкиДанных");
	
	// Добавленные
	ЭлементОформления = УсловноеОформлениеСписка.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru='Выделение текстом добавленных объектов'");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементЦвета = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦвета.Значение = ЦветТекстаИзмененных;
	ЭлементЦвета.Использование = Истина;
	
	ЭлементТекста = ЭлементОформления.Оформление.Элементы.Найти("Текст");
	ЭлементТекста.Значение = НСтр("ru = 'Добавлено'");
	ЭлементТекста.Использование = Истина;
	
	ЭлементОбласти = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементОбласти.Поле = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОбласти.Использование = Истина;
	
	// Снятые с контроля
	ЭлементОформления = УсловноеОформлениеСписка.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru='Выделение текстом снятых с контроля объектов'");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.СостоянияКонтроляОбъектов.СнятоСКонтроля;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементЦвета = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦвета.Значение =  ЦветТекстаСнятыхСКонтроля;
	ЭлементЦвета.Использование = Истина;
	
	ЭлементТекста = ЭлементОформления.Оформление.Элементы.Найти("Текст");
	ЭлементТекста.Значение = НСтр("ru = 'Снято с контроля'");
	ЭлементТекста.Использование = Истина;
	
	ЭлементОбласти = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементОбласти.Поле = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОбласти.Использование = Истина;
	
	// Непроверенные
	ЭлементОформления = УсловноеОформлениеСписка.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru='Выделение текстом непроверенных объектов'");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.СостоянияКонтроляОбъектов.НеПроверено;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементЦвета = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦвета.Значение = ЦветТекстаИзмененных;
	ЭлементЦвета.Использование = Истина;
	
	ЭлементТекста = ЭлементОформления.Оформление.Элементы.Найти("Текст");
	ЭлементТекста.Значение = НСтр("ru = 'Не проверено'");
	ЭлементТекста.Использование = Истина;
	
	ЭлементОбласти = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементОбласти.Поле = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОбласти.Использование = Истина;
	
	// Проверенные
	ЭлементОформления = УсловноеОформлениеСписка.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru='Выделение текстом проверенных объектов'");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.СостоянияКонтроляОбъектов.НаКонтроле;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЕстьИзменения");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементЦвета = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦвета.Значение = ЦветТекстаПроверенных;
	ЭлементЦвета.Использование = Истина;
	
	ЭлементТекста = ЭлементОформления.Оформление.Элементы.Найти("Текст");
	ЭлементТекста.Значение = НСтр("ru = 'Проверено'");
	ЭлементТекста.Использование = Истина;
	
	ЭлементОбласти = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементОбласти.Поле = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОбласти.Использование = Истина;
	
	// Измененные
	ЭлементОформления = УсловноеОформлениеСписка.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru='Выделение текстом измененных объектов'");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.СостоянияКонтроляОбъектов.НаКонтроле;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(ТипЭлементОтбора);
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЕстьИзменения");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементЦвета = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦвета.Значение = ЦветТекстаИзмененных;
	ЭлементЦвета.Использование = Истина;
	
	ЭлементТекста = ЭлементОформления.Оформление.Элементы.Найти("Текст");
	ЭлементТекста.Значение = НСтр("ru = 'Изменено'");
	ЭлементТекста.Использование = Истина;
	
	ЭлементОбласти = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементОбласти.Поле = Новый ПолеКомпоновкиДанных("СостояниеКонтроля");
	ЭлементОбласти.Использование = Истина;
	
КонецПроцедуры