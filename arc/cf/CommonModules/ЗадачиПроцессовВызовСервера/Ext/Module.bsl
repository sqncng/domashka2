////////////////////////////////////////////////////////////////////////////////
//  Серверные процедуры и функции подсистемы "Задачи процессов", доступные для вызова с клиента
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик команд списка задач
//
// Параметры:
//  МассивЗадач             - Массив   - задачи, для которых необходимо выполнить действие команды.
//  Действие                - Строка   - выполняемое действие.
//  КоличествоОбработанных  - Число    - в данный параметр будет помещено количество задач, действие над которыми было выполнено успешно.
//  ДополнительныеПараметры - Структура.
//
Процедура ВыполнитьДействиеНадМассивомЗадач(МассивЗадач, Действие, КоличествоОбработанных, ДополнительныеПараметры) Экспорт

	Если Действие = "ВыполнитьЗадачу" Тогда
		
		ЗадачиПроцессов.ПеревестиЗадачиНаНовыйСтатус(МассивЗадач, Перечисления.СтатусыЗадачПроцессов.Выполнена, КоличествоОбработанных);
		
	ИначеЕсли Действие = "Отменить" Тогда
		
		ЗадачиПроцессов.ОтменитьЗадачи(МассивЗадач, КоличествоОбработанных);
		
	ИначеЕсли Действие = "Перенаправить" Тогда
		
		ЗадачиПроцессов.ПеренаправитьЗадачи(МассивЗадач, КоличествоОбработанных, ДополнительныеПараметры);
		
	ИначеЕсли Действие = "НаправитьИсполнителямЗадачи" Тогда
		
		ЗадачиПроцессов.НаправитьИсполнителямЗадачи(МассивЗадач, КоличествоОбработанных, ДополнительныеПараметры);
		
	ИначеЕсли Действие = "Запланировать" Тогда
		
		ЗадачиПроцессов.ПеревестиЗадачиНаНовыйСтатус(МассивЗадач, Перечисления.СтатусыЗадачПроцессов.Запланирована, КоличествоОбработанных);
		
	ИначеЕсли Действие = "ПринятьКВыполнению" Тогда
		
		ЗадачиПроцессов.ПеревестиЗадачиНаНовыйСтатус(МассивЗадач, Перечисления.СтатусыЗадачПроцессов.ПринятаКВыполнению, КоличествоОбработанных);
		
	ИначеЕсли Действие = "НаправитьНаПроверку" Тогда
		
		ЗадачиПроцессов.НаправитьЗадачиНаПроверку(МассивЗадач, Перечисления.СтатусыЗадачПроцессов.ПринятаКВыполнению, КоличествоОбработанных);
		
	ИначеЕсли Действие = "НаправитьНаСогласование" Тогда
		
		ЗадачиПроцессов.НаправитьНаСогласование(МассивЗадач, ДополнительныеПараметры.СогласуемыйРесурс, КоличествоОбработанных);
		
	ИначеЕсли Действие = "Согласовать" Тогда
		
		ЗадачиПроцессов.СогласоватьРесурсМассиваЗадач(МассивЗадач, ДополнительныеПараметры.СогласуемыйРесурс, КоличествоОбработанных);
		
	ИначеЕсли Действие = "ИзменитьИсполнителя" Тогда
		
		ЗадачиПроцессов.ИзменитьИсполнителяЗадач(МассивЗадач, ДополнительныеПараметры, КоличествоОбработанных);
		
	ИначеЕсли Действие = "Ознакомиться" Тогда
		
		ЗадачиПроцессов.ОзнакомитьсяСЗадачами(МассивЗадач, КоличествоОбработанных);
		
	КонецЕсли;

КонецПроцедуры

// Выполняет перенаправление задачи
//
// Параметры:
//  Параметры - Структура.
//
Процедура ПеренаправитьЗадачу(Параметры) Экспорт
	
	ЗадачиПроцессов.ПеренаправитьЗадачу(Параметры);
	
КонецПроцедуры

// Выполняет не согласование ресурса задачи
//
// Параметры:
//  Параметры - Структура.
//
Процедура НеСогласоватьРесурс(Параметры) Экспорт
	
	ЗадачиПроцессов.НеСогласоватьРесурс(Параметры);
	
КонецПроцедуры

// Выполняет частичное согласование ресурса задачи
//
// Параметры:
//  Параметры - Структура.
//
Процедура ЧастичноСогласоватьРесурс(Параметры) Экспорт
	
	ЗадачиПроцессов.ЧастичноСогласоватьРесурс(Параметры);
	
КонецПроцедуры

// Получает данные вида ресурса по коду
//
// Параметры:
//  КодСогласуемогоРесурса  - Число - код вида согласуемого ресурса
//
// Возвращаемое значение:
//   Структура   - содержит:
//    * ЕдиницаИзмерения - Строка - представление единицы измерения согласуемого ресурса
//    * Ссылка           - СправочникСсылка.ВидыСогласуемыхРесурсов - согласуемый ресурс
//    * Наименование     - Строка - наименование согласуемого ресурса
//    * Согласующий      - Неопределено, СправочникСсылка.Пользователи - согласующий ресурс
//
Функция ДанныеВидаРесурсаПоКоду(КодСогласуемогоРесурса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВидыСогласуемыхРесурсов.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	ВидыСогласуемыхРесурсов.ВыполняетсяСогласование КАК ВыполняетсяСогласование,
	|	ВидыСогласуемыхРесурсов.Ссылка                  КАК Ссылка,
	|	ВидыСогласуемыхРесурсов.Наименование            КАК Наименование,
	|	НЕОПРЕДЕЛЕНО                                    КАК Согласующий
	|ИЗ
	|	Справочник.ВидыСогласуемыхРесурсов КАК ВидыСогласуемыхРесурсов
	|ГДЕ
	|	ВидыСогласуемыхРесурсов.Код = &КодСогласуемогоРесурса";
	
	Запрос.УстановитьПараметр("КодСогласуемогоРесурса", КодСогласуемогоРесурса);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЕдиницаИзмерения",        Выборка.ЕдиницаИзмерения);
	СтруктураВозврата.Вставить("Ссылка",                  Выборка.Ссылка );
	СтруктураВозврата.Вставить("Наименование",            Выборка.Наименование );
	СтруктураВозврата.Вставить("Согласующий",             Выборка.Согласующий );
	СтруктураВозврата.Вставить("ВыполняетсяСогласование", Выборка.ВыполняетсяСогласование );
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Обрабатывает изменение родителя у массива задач при перетаскивании
//
// Параметры:
//  МассивЗадачКПеретаскиванию  - Массив - задачи, у которых изменяется родитель
//  НовыйРодитель  - СправочникСсылка.ЗадачиПроцесса - новый родитель
//
// Возвращаемое значение:
//   Структура   - содержит:
//    * КоличествоКИзменению        - Число - количество задач, для которых должен был изменен родитель.
//    * КоличествоИзменено          - Число - количество задач,у которых фактически был изменен родитель.
//    * ИнформацияОбИзмененииЗадач  - Массив - сообщения пользователю.
//
Функция РезультатИзмененияРодителяУМассиваЗадач(МассивЗадачКПеретаскиванию, НовыйРодитель) Экспорт

	Возврат ЗадачиПроцессов.РезультатИзмененияРодителяУМассиваЗадач(МассивЗадачКПеретаскиванию, НовыйРодитель);

КонецФункции

#КонецОбласти