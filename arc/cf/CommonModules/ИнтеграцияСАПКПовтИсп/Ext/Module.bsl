#Область ПрограммныйИнтерфейс

//Создает прокси веб-сервиса АПК. В случае ошибки при создании вызывается исключение.
//
// Возвращаемое значение:
//	WSПрокси - Прокси веб-сервиса
//
Функция ПолучитьПрокси() Экспорт
	
	Возврат ИнтеграцияСАПК.ПолучитьПрокси();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает ссылку на проект по имени конфигурации.
//
// Параметры:
//	Имя - Строка - имя конфигурации
//
// Возвращаемое значение:
//	СправочникСсылка.Проекты - ссылка на проект, соответствующий указанной конфигурации
//
Функция ПодобратьПроектПоИмениКонфигурации(Имя) Экспорт
	
	Проект = Справочники.Проекты.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИмяКонфигурации", Имя);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Проекты.Ссылка
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.ИмяКонфигурации ПОДОБНО &ИмяКонфигурации
	|	И НЕ Проекты.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Проект = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Проект;
	
КонецФункции


// Возвращает ссылку на сборку по номеру или дате.
//
// Параметры:
//	Проект - СправочникСсылка.Проекты - проект
//	НомерВерсииИлиСборки - Строка - версия или сборка проверяемой конфигурации в АПК,
//		см. WebСервис.ErrorsExchange.GetProjectVersions()
//	Дата - Дата - дата регистрации ошибки
//
// Возвращаемое значение:
//	СправочникСсылка.СборкиВерсии - ссылка на сборку
//
Функция ОпределитьМестоОбнаруженияОшибки(Проект, НомерВерсииИлиСборки, Дата) Экспорт
	
	МестоОбнаружения = Новый Структура("Обнаружена, ВеткаОбнаружения, СборкаОбнаружения");
	
	Если Лев(НомерВерсииИлиСборки, 7) = НСтр("ru='Версия '") Тогда
		
		НомерВерсии = Сред(НомерВерсииИлиСборки, 8);
		
		МестоОбнаружения.Обнаружена = Перечисления.МестаОбнаруженияОшибок.ВВетке;
		МестоОбнаружения.ВеткаОбнаружения = ПодобратьВерсиюОбнаруженияОшибки(Проект, НомерВерсии).Ветка;
		
	Иначе
		
		Если Лев(НомерВерсииИлиСборки, 7) = НСтр("ru='Сборка '") Тогда
			НомерСборки = Сред(НомерВерсииИлиСборки, 8);
		Иначе
			НомерСборки = СокрЛП(НомерВерсииИлиСборки);
		КонецЕсли;
		
		МестоОбнаружения.Обнаружена = Перечисления.МестаОбнаруженияОшибок.ВСборке;
		МестоОбнаружения.СборкаОбнаружения = ПодобратьСборкуОбнаруженияОшибки(Проект, НомерСборки, Дата);
		
	КонецЕсли;
	
	Возврат МестоОбнаружения;
	
КонецФункции

// Возвращает ссылку на сборку по ее номеру или по дате обнаружения ошибки.
//
// Параметры:
//	Проект - СправочникСсылка.Проекты - проект
//	НомерСборки - Строка - версия проверяемой конфигурации в АПК
//	Дата - Дата - дата регистрации ошибки
//
// Возвращаемое значение:
//	СправочникСсылка.СборкиВерсии - ссылка на сборку
//
Функция ПодобратьСборкуОбнаруженияОшибки(Проект, НомерСборки, Дата)
	
	Сборка = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Проект",      Проект);
	Запрос.УстановитьПараметр("НомерСборки", СокрЛП(НомерСборки));
	Запрос.УстановитьПараметр("Дата",        Дата);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	// Ищем сборку по номеру
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СборкиВерсии.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|ГДЕ
	|	СборкиВерсии.Владелец.Владелец = &Проект
	|	И СборкиВерсии.Код = &НомерСборки
	|	И (СборкиВерсии.Владелец.ДатаПрекращенияПоддержки > &ТекущаяДата
	|	ИЛИ СборкиВерсии.Владелец.ДатаПрекращенияПоддержки = ДАТАВРЕМЯ(1,1,1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Сборка = Выборка.Ссылка;
		Если ЗначениеЗаполнено(Сборка) Тогда
			Возврат Сборка;
		КонецЕсли;
	КонецЕсли;
	
	// Если сборка не найдена - ищем ближайшую сборку по дате
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкиВерсии.Ссылка КАК Ссылка,
	|	СборкиВерсии.ДатаСборки КАК ДатаСборки
	|ПОМЕСТИТЬ ВТСборки
	|ИЗ
	|	Справочник.СборкиВерсии КАК СборкиВерсии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты.ПорядокВоспроизведенияИИсправленияОшибок КАК ПроектыПорядокВоспроизведенияИИсправленияОшибок
	|		ПО СборкиВерсии.Владелец = ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияВоспроизведения
	|ГДЕ
	|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.Ссылка = &Проект
	|	И (СборкиВерсии.Владелец.ДатаПрекращенияПоддержки > &ТекущаяДата
	|	ИЛИ СборкиВерсии.Владелец.ДатаПрекращенияПоддержки = ДАТАВРЕМЯ(1,1,1))
	|	И НЕ СборкиВерсии.Владелец.ПометкаУдаления
	|	И НЕ СборкиВерсии.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	МАКСИМУМ(ВТСборки.ДатаСборки) КАК ДатаСборки
	|ПОМЕСТИТЬ ВТДатыСборок
	|ИЗ
	|	ВТСборки КАК ВТСборки
	|ГДЕ
	|	ВТСборки.ДатаСборки < &Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	МИНИМУМ(ВТСборки.ДатаСборки)
	|ИЗ
	|	ВТСборки КАК ВТСборки
	|ГДЕ
	|	ВТСборки.ДатаСборки >= &Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТСборки.Ссылка,
	|	ВТСборки.ДатаСборки КАК ДатаСборки
	|ИЗ
	|	ВТСборки КАК ВТСборки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыСборок КАК ВТДатыСборок
	|		ПО ВТСборки.ДатаСборки = ВТДатыСборок.ДатаСборки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСборки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Сборка = Выборка.Ссылка;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сборка) Тогда
		Сборка = Справочники.СборкиВерсии.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Сборка;
	
КонецФункции

// Возвращает ссылку на версию по ее номеру.
//
// Параметры:
//	Проект - СправочникСсылка.Проекты - проект
//	НомерВерсии - Строка - версия проверяемой конфигурации в АПК
//
// Возвращаемое значение:
//	СправочникСсылка.ВерсииПроекта - ссылка на версию
//
Функция ПодобратьВерсиюОбнаруженияОшибки(Проект, НомерВерсии)
	
	Версия = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Проект",      Проект);
	Запрос.УстановитьПараметр("НомерВерсии", СокрЛП(НомерВерсии));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	// Ищем версию по номеру
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВерсииПроекта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВерсииПроекта КАК ВерсииПроекта
	|ГДЕ
	|	ВерсииПроекта.Владелец = &Проект
	|	И ВерсииПроекта.Код = &НомерВерсии
	|	И (ВерсииПроекта.ДатаПрекращенияПоддержки > &ТекущаяДата
	|	ИЛИ ВерсииПроекта.ДатаПрекращенияПоддержки = ДАТАВРЕМЯ(1,1,1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Версия = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Версия;
	
КонецФункции

// Возвращает ссылку на версию исправления ошибки.
// см. в Справочники.Ошибки.ПомощникРегистрацииИОбработкиОшибки
//
Функция ПодобратьВерсиюИсправленияДляОшибки(Владелец, Обнаружена, ВеткаОбнаружения, СборкаОбнаружения, ДатаОбнаружения, СрочностьИсправления) Экспорт
	
	ДанныеОбнаружения = Новый Структура;
	ДанныеОбнаружения.Вставить("Обнаружена", Обнаружена);
	ДанныеОбнаружения.Вставить("ВеткаОбнаружения", ВеткаОбнаружения);
	ДанныеОбнаружения.Вставить("СборкаОбнаружения", СборкаОбнаружения);
	ДанныеОбнаружения.Вставить("ДатаОбнаружения", ДатаОбнаружения);
	
	ВерсияИсправления = 
		Справочники.Ошибки.ВерсияИсправления(Владелец, ДанныеОбнаружения, СрочностьИсправления, Ложь, 
											Перечисления.ВариантыИсправленияОшибок.ПустаяСсылка());
	
	Возврат ВерсияИсправления;
	
КонецФункции

#КонецОбласти
