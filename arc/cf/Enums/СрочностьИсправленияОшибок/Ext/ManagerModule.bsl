#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Проект = Неопределено;
	
	ОтборПоПроекту = Параметры.Свойство("Владелец", Проект);
	
	Если Не ОтборПоПроекту Тогда
		Возврат;
	КонецЕсли;
	
	СборкаОбнаружения = Неопределено;
	ВеткаОбнаружения  = Неопределено;
	Исправляется      = Неопределено;
	ДатаОбнаружения   = '00010101';
	
	ОтборПоСборке       = Параметры.Свойство("СборкаОбнаружения", СборкаОбнаружения);
	ОтборПоВетке        = Параметры.Свойство("ВеткаОбнаружения",  ВеткаОбнаружения);
	ОтборПоИсправляется = Параметры.Свойство("Исправляется",      Исправляется);
	
	Параметры.Свойство("ДатаОбнаружения", ДатаОбнаружения);
	
	Если Не ОтборПоСборке и Не ОтборПоВетке Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДатаОбнаруженияОшибки = '00010101';
		
	Если ЗначениеЗаполнено(СборкаОбнаружения) Тогда
		ДанныеСборкиОбнаружения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СборкаОбнаружения, "Владелец,Ветка,ДатаСборки");
		ВерсияОбнаружения     = ДанныеСборкиОбнаружения.Владелец;
		ВеткаОбнаружения      = ДанныеСборкиОбнаружения.Ветка;
		ДатаОбнаруженияОшибки = ДанныеСборкиОбнаружения.ДатаСборки;
	ИначеЕсли ЗначениеЗаполнено(ВеткаОбнаружения) Тогда
		ВерсияОбнаружения = Справочники.Ошибки.ВерсияОбнаруженияДляВетки(ВеткаОбнаружения,ДатаОбнаружения);
	Иначе
		ВерсияОбнаружения = Справочники.ВерсииПроекта.ПустаяСсылка();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОбнаруженияОшибки) Тогда
		ДатаОбнаруженияОшибки = ДатаОбнаружения;
	КонецЕсли;
		
	ВерсияНемедленно = Неопределено;
	ВерсияЖелательноБыстрее = Неопределено;
	ВерсияВПлановомПорядке = Неопределено;
		
	ВерсияИсправленияРассчитываетсяПоНастройкамПроекта = Ложь;
	
	Если Исправляется = Перечисления.ВариантыИсправленияОшибок.ТолькоВВеткеОбнаружения Тогда
		
		ДанныеДляВеткиОбнаружения = Справочники.Ошибки.ДанныеДляВетки(ВеткаОбнаружения);
		
		ТипВеткиОбнаружения    = ДанныеДляВеткиОбнаружения.Тип;
		ПроектВеткиОбнаружения = ДанныеДляВеткиОбнаружения.Проект;
		ТипВеткиПриемника      = ДанныеДляВеткиОбнаружения.ТипПриемника;
		ВеткаПриемник          = ДанныеДляВеткиОбнаружения.Приемник;
		
		Если ТипВеткиОбнаружения = Перечисления.ТипыВеток.ОсновнаяВеткаПроекта Тогда
			// Если ветка- основная ветка проекта, то исправление планируется, исходя
			// из настроек проекта, с учетом срочности исправления.
			ВерсияИсправленияРассчитываетсяПоНастройкамПроекта = Истина;
		Иначе			
			
			ВерсияИсправления = Справочники.ВерсииПроекта.ПустаяСсылка();
			
			Если ТипВеткиОбнаружения = Перечисления.ТипыВеток.ВеткаВерсии Тогда
				// Если ветка - ветка версии, исправление именно в этой ветке
				ВерсияИсправления = ВерсияОбнаружения;
			ИначеЕсли ТипВеткиОбнаружения = Перечисления.ТипыВеток.ВеткаТехническогоПроекта Тогда
				// Если ветка- ветка технического проекта, исправление в версии технического проекта.
				ВерсияИсправления = Справочники.Ошибки.ВерсияОбнаруженияДляВеткиТехническогоПроекта(ВеткаОбнаружения, ДатаОбнаруженияОшибки);
			ИначеЕсли ТипВеткиОбнаружения = Перечисления.ТипыВеток.ВеткаДляИсправленияОшибок Тогда
				// Если ветка- ветка для исправленния ошибок - анализируется ветка-приемник.
				Если ТипВеткиПриемника = Перечисления.ТипыВеток.ВеткаВерсии Тогда
					//Если приемник- ветка версии, то исправление в версии-приемнике.
					ВерсияИсправления = Справочники.Ошибки.ВерсияОбнаруженияДляВеткиВерсии(ВеткаПриемник);
				ИначеЕсли ТипВеткиПриемника = Перечисления.ТипыВеток.ОсновнаяВеткаПроекта Тогда
					// Если приемник- основная ветка проекта, исправление планируется в текущей
					// версии, разрабатываемой в основной ветке.
					ВерсияИсправления = Справочники.Ошибки.ВерсияПоОсновнойВеткеПроекта(ПроектВеткиОбнаружения);
				КонецЕсли;
			КонецЕсли;
			
			ВерсияНемедленно        = ВерсияИсправления;
			ВерсияЖелательноБыстрее = ВерсияИсправления;
			ВерсияВПлановомПорядке  = ВерсияИсправления;
			
		КонецЕсли;
		
	Иначе
		ВерсияИсправленияРассчитываетсяПоНастройкамПроекта = Истина;
	КонецЕсли;
	
	Если ВерсияИсправленияРассчитываетсяПоНастройкамПроекта Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияИсправленияНемедленно КАК ВерсияИсправленияНемедленно,
		|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияИсправленияЖелательноБыстрее КАК ВерсияИсправленияЖелательноБыстрее,
		|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияИсправленияВПлановомПорядке КАК ВерсияИсправленияВПлановомПорядке
		|ИЗ
		|	Справочник.Проекты.ПорядокВоспроизведенияИИсправленияОшибок КАК ПроектыПорядокВоспроизведенияИИсправленияОшибок
		|ГДЕ
		|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.Ссылка = &Проект
		|	И (ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияВоспроизведения = &ВерсияОбнаружения
		|     ИЛИ ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияВоспроизведения = ЗНАЧЕНИЕ(Справочник.ВерсииПроекта.ПустаяСсылка))
		|	И (НЕ &ОтбиратьПоСтрокеПоиска
		|			ИЛИ ""Немедленно"" ПОДОБНО &СтрокаПоиска
		|			ИЛИ ""Желательно быстрее"" ПОДОБНО &СтрокаПоиска
		|			ИЛИ ""В плановом порядке"" ПОДОБНО &СтрокаПоиска)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроектыПорядокВоспроизведенияИИсправленияОшибок.ВерсияВоспроизведения УБЫВ"
		;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ВерсияОбнаружения", ВерсияОбнаружения);
		Запрос.УстановитьПараметр("Проект", Проект);
		
		СтрокаПоиска = Параметры.СтрокаПоиска;
		
		Если СтрокаПоиска <> Неопределено Тогда
			Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
			Запрос.УстановитьПараметр("ОтбиратьПоСтрокеПоиска", Истина);
		Иначе
			Запрос.УстановитьПараметр("СтрокаПоиска", "");
			Запрос.УстановитьПараметр("ОтбиратьПоСтрокеПоиска", Ложь);
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				
				Если ЗначениеЗаполнено(Выборка.ВерсияИсправленияНемедленно) Тогда
					ВерсияНемедленно = Выборка.ВерсияИсправленияНемедленно;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.ВерсияИсправленияЖелательноБыстрее) Тогда
					ВерсияЖелательноБыстрее = Выборка.ВерсияИсправленияЖелательноБыстрее;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.ВерсияИсправленияВПлановомПорядке) Тогда
					ВерсияВПлановомПорядке = Выборка.ВерсияИсправленияВПлановомПорядке;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

	ДанныеВыбора = Новый СписокЗначений;
	
	Если ВерсияНемедленно = Неопределено
		И ВерсияЖелательноБыстрее = Неопределено
		И ВерсияВПлановомПорядке = Неопределено
		И СтрокаПоиска <> Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПредставлениеНемедленно = 
		ПредставлениеСрочности(Перечисления.СрочностьИсправленияОшибок.Немедленно, ВерсияНемедленно);
	
	ПредставлениеЖелательноБыстрее = 
		ПредставлениеСрочности(Перечисления.СрочностьИсправленияОшибок.ЖелательноБыстрее, ВерсияЖелательноБыстрее);
	
	ПредставлениеВПлановомПорядке = 
		ПредставлениеСрочности(Перечисления.СрочностьИсправленияОшибок.ВПлановомПорядке, ВерсияВПлановомПорядке);
	
	ДанныеВыбора.Добавить(Перечисления.СрочностьИсправленияОшибок.Немедленно, ПредставлениеНемедленно);
	ДанныеВыбора.Добавить(Перечисления.СрочностьИсправленияОшибок.ЖелательноБыстрее, ПредставлениеЖелательноБыстрее);
	ДанныеВыбора.Добавить(Перечисления.СрочностьИсправленияОшибок.ВПлановомПорядке, ПредставлениеВПлановомПорядке);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеСрочности(ЗначениеСрочности, Версия)

	Если ЗначениеЗаполнено(Версия) Тогда
		Представление = Строка(ЗначениеСрочности) + " (" + Версия +  ")";
	Иначе
		Представление = Строка(ЗначениеСрочности);
	КонецЕсли;
	
	Возврат Представление;
		
КонецФункции
	
#КонецОбласти

#КонецЕсли